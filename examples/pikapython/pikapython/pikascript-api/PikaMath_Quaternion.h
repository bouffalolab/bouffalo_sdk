/*
 * [Warning!] This file is auto-generated by pika compiler.
 * Do not edit it manually.
 * The source code is *.pyi file.
 * More details: 
 * English Doc:
 * https://pikadoc.readthedocs.io/en/latest/PikaScript%20%E6%A8%A1%E5%9D%97%E6%A6%82%E8%BF%B0.html
 * Chinese Doc:
 * https://pikadoc.readthedocs.io/zh/latest/PikaScript%20%E6%A8%A1%E5%9D%97%E6%A6%82%E8%BF%B0.html
 */

#ifndef __PikaMath_Quaternion__H
#define __PikaMath_Quaternion__H
#include <stdio.h>
#include <stdlib.h>
#include "PikaObj.h"

PikaObj *New_PikaMath_Quaternion(Args *args);

void PikaMath_Quaternion___init__(PikaObj *self);
void PikaMath_Quaternion_add(PikaObj *self, PikaObj* quat);
void PikaMath_Quaternion_crossproduct(PikaObj *self, PikaObj* quat);
pika_float PikaMath_Quaternion_dot(PikaObj *self, PikaObj* quat);
void PikaMath_Quaternion_fromEuler(PikaObj *self, pika_float yaw, pika_float pitch, pika_float roll, int mode);
pika_float PikaMath_Quaternion_get(PikaObj *self, int key);
void PikaMath_Quaternion_inverse(PikaObj *self);
int PikaMath_Quaternion_isnormalize(PikaObj *self);
pika_float PikaMath_Quaternion_magnituded(PikaObj *self);
pika_float PikaMath_Quaternion_magnitudedsquare(PikaObj *self);
void PikaMath_Quaternion_mul(PikaObj *self, PikaObj* quat);
void PikaMath_Quaternion_normalize(PikaObj *self);
void PikaMath_Quaternion_reverse(PikaObj *self);
void PikaMath_Quaternion_set(PikaObj *self, pika_float x, pika_float y, pika_float z, pika_float w);
void PikaMath_Quaternion_sub(PikaObj *self, PikaObj* quat);
PikaObj* PikaMath_Quaternion_toEuler(PikaObj *self);

#endif
