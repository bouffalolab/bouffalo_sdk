==============
简介
==============
本文主要介绍AT命令集及其使用方法。该命令集包括：基础AT命令、Wi-Fi功能AT命令、TCP/IP工具包AT命令和蓝牙低功耗（BLE）相关AT命令。

.. table:: 指令类型

    +-----------------------+---------------+-------------------------------------------------------------------------------------------------------+
    | 类型                  | 格式          | 描述                                                                                                |
    +=======================+===============+=======================================================================================================+
    | 查询指令              | AT+<x>?       | 该指令用于返回当前参数的值                                                                          |
    +-----------------------+---------------+-------------------------------------------------------------------------------------------------------+
    | 设置指令              | AT+<x>=<···>  | 该指令用于设置用户自定义参数                                                                      |
    +-----------------------+---------------+-------------------------------------------------------------------------------------------------------+
    | 执行指令              | AT+<x>        | 该指令用于执行模块内部参数不可变的功能                                                          |
    +-----------------------+---------------+-------------------------------------------------------------------------------------------------------+

- 并非每个AT命令都具备上述三种类型。
- 当前AT命令仅支持字符串和整数作为输入参数。
- 尖括号 < > 表示不可省略的参数。
- 方括号 [ ] 表示可选参数，可省略。省略时将使用参数的默认值。
- 若要省略的参数后有其他参数，必须用逗号 , 占位。例如：AT+CWJAP=\"ssid\",\"password\",,1。
- 字符串值需用双引号括起，例如：AT+CWSAP=\"AP-NAME\",\"12345678\"。
- 每个AT命令长度不得超过256字节。
- AT命令以换行符（CR-LF）结尾，因此串口工具应设置为“换行模式”。

.. note::
    AT命令的参数存储通过EasyFlash库实现。

AT消息
================
从AT命令端口返回的AT消息有两种类型：AT响应消息和AT消息报告。

响应消息
-------------------
每条AT命令输入后都会返回响应消息，告知发送方AT命令的执行结果。响应的最后一条消息始终为“OK”或“ERROR”。

  .. list-table:: 响应消息
      :header-rows: 1
      :widths: 30 70

      * - AT响应消息
        - 描述
      * - OK
        - AT命令处理完成并返回成功
      * - ERROR
        - AT命令错误或执行过程中发生错误
      * - SEND OK
        - 数据已发送至协议栈
      * - SEND FAIL
        - 向协议栈发送数据时发生错误
      * - +<Command Name>:``...``
        - 向发送方返回AT命令处理结果的详细描述

消息报告
-----------------
AT会报告系统中的重要状态变化或消息。

.. list-table:: 消息报告
     :header-rows: 1
     :widths: 30 70

     * - AT消息报告
       - 描述
     * - ready
       - AT固件已就绪
     * - busy p...
       - 繁忙处理中。系统正在处理前一条命令，无法接受新输入
     * - ERR CODE:``<0x%08x>``
       - 不同命令的错误代码
     * - +CW:CONNECTING
       - Wi-Fi站点接口正在连接AP
     * - +CW:CONNECTED
       - Wi-Fi站点接口已连接至AP
     * - +CW:ERROR
       - Wi-Fi站点接口连接AP失败
     * - +CW:GOTIP
       - Wi-Fi站点接口已获取IPv4地址
     * - +CW:DISCONNECTED
       - Wi-Fi站点接口已与AP断开连接
     * - +CW:STA_CONNECTED <sta_mac>
       - 有站点连接至AT的Wi-Fi软AP接口
     * - +CW:STA_DISCONNECTED <sta_mac>
       - 有站点从AT的Wi-Fi软AP接口断开连接
     * - +CW:DIST_STA_IP <sta_mac>,<sta_ip>
       - AT的Wi-Fi软AP接口为站点分配IP地址
     * - +CW:SCAN_DONE
       - Wi-Fi扫描完成事件
     * - +CIP:[<conn_id>,]CONNECTED
       - 已建立ID为``<conn_id>``的网络连接（默认ID=0）
     * - +CIP:[<conn_id>,]DISCONNECTED
       - ID为``<conn_id>``的网络连接已终止（默认ID=0）
     * - +LINK_CONN
       - TCP/UDP/SSL的详细连接信息
     * - >
       - AT正在等待接收更多数据
     * - Recv ``<xxx>`` bytes
       - AT已从AT命令端口接收``<xxx>``字节数据
     * - +IPD
       - 在非透传模式下，AT已从网络接收数据。具体数据格式见下表
     * - +MQTT:CONNECTED,<linkid>
       - MQTT已连接至代理服务器
     * - +MQTT:DISCONNECTED,<linkid>
       - MQTT已与代理服务器断开连接
     * - +MQTT:SUBRECV,<LinkID>,<topic_length>,<data_length>,<"topic">,<data>
       - AT接收到已订阅主题的MQTT消息时
     * - Data in passthrough mode
       - 在透传模式下，已从网络或蓝牙接收数据
     * - SEND CANCELLED
       - 取消Wi-Fi普通传输模式下的数据发送
     * - +BLE:CONNECTED
       - 已建立蓝牙低功耗连接
     * - +BLE:DISCONNECTED
       - 蓝牙低功耗连接已终止
     * - +BLE:CONNPARAM
       - 蓝牙低功耗连接参数更新
     * - +BLE:GATTREAD
       - 蓝牙低功耗连接的读取操作
     * - +BLE:GATTWRITE
       - 蓝牙低功耗连接的写入操作
     * - +BLE:SRV
       - 发现蓝牙低功耗连接服务
     * - +BLE:SRVCHAR
       - 发现蓝牙低功耗连接特征
     * - +BLE:INDICATION
       - 蓝牙服务指示状态：0：禁用，1：启用，2：确认
     * - +BLE:NOTIFICATION
       - 蓝牙服务通知状态
     * - +BLE:NOTIDATA
       - 蓝牙服务接收通知/指示数据
     * - +BLE:MTUSIZE
       - 蓝牙MTU大小更新
     * - +BLE:PAIRINGFAILED
       - 蓝牙配对失败
     * - +BLE:PAIRINGCOMPLETED
       - 蓝牙配对完成
     * - +BLE:PAIRINGCONFIRM
       - 蓝牙配对确认通知
     * - +BLE:PASSKEYENTRY
       - 蓝牙配对密钥输入通知
     * - +BLE:PASSKEYDISPLAY
       - 蓝牙配对密钥显示通知
     * - +BLE:BASLEVEL
       - 蓝牙BAS配置文件级别
     * - +QUITT
       - AT退出Wi-Fi `Passthrough Mode`

.. note ::

    在非透传模式下，AT从网络接收数据的格式：

    - 若AT+CIPMUX=0且AT+CIPRECVTYPE=1，输出：+IPD:<length>
    - 若AT+CIPMUX=1且AT+CIPRECVTYPE=<link_id>,1，输出：+IPD:<link_id>,<length>
    - 若AT+CIPMUX=0、AT+CIPRECVTYPE=0且AT+CIPDINFO=0，输出：+IPD:<length>,<data>
    - 若AT+CIPMUX=1、AT+CIPRECVTYPE=<link_id>,0且AT+CIPDINFO=0，输出：+IPD:<link_id>,<length>,<data>
    - 若AT+CIPMUX=0、AT+CIPRECVTYPE=0且AT+CIPDINFO=1，输出：+IPD:<length>,<"remote_ip">,<remote_port>,<data>
    - 若AT+CIPMUX=1、AT+CIPRECVTYPE=<link_id>,0且AT+CIPDINFO=1，输出：+IPD:<link_id>,<length>,<"remote_ip">,<remote_port>,<data>

    其中，link_id表示连接ID，length表示数据长度，remote_ip表示远程IP地址，remote_port表示远程端口号，data表示数据内容。

    当为SSL连接时，在被动接收模式（AT+CIPRECVTYPE=1）下，AT命令返回的长度可能与实际可读的SSL数据长度不一致。这是因为AT优先返回SSL层的可读数据长度。若SSL层的可读数据长度为0，AT将返回套接字层的可读数据长度。

===================
基础AT命令
===================

基础AT命令概览
==============================
.. table:: 指令列表
    :widths: 50,50
    :width: 100%
    :align: center

    +----------------------+------------------------------------------------------------------------------+
    | 命令                | 描述                                                                         |
    +======================+==============================================================================+
    | `AT`_                | 测试AT启动                                                                 |
    +----------------------+------------------------------------------------------------------------------+
    | `AT+GMR`_            | 查看版本信息                                                               |
    +----------------------+------------------------------------------------------------------------------+
    | `AT+CMD?`_           | 列出当前固件支持的所有AT命令及类型                                        |
    +----------------------+------------------------------------------------------------------------------+
    | `AT+RST`_            | 重启模块                                                                   |
    +----------------------+------------------------------------------------------------------------------+
    | `AT+RESTORE`_        | 恢复出厂设置                                                               |
    +----------------------+------------------------------------------------------------------------------+
    | `ATE`_               | 配置AT命令回显                                                           |
    +----------------------+------------------------------------------------------------------------------+
    | `AT+SYSRAM?`_        | 查询当前剩余堆大小和lwip剩余堆大小                                       |
    +----------------------+------------------------------------------------------------------------------+
    | `AT+SYSMSG?`_        | 查询/设置系统提示信息                                                     |
    +----------------------+------------------------------------------------------------------------------+
    | `AT+SYSLOG?`_        | 启用或禁用AT错误代码提示                                                  |
    +----------------------+------------------------------------------------------------------------------+
    | `AT+SYSSTORE?`_      | 查询/设置参数存储模式                                                     |
    +----------------------+------------------------------------------------------------------------------+
    | `AT+TEMP?`_          | 查询芯片温度                                                               |
    +----------------------+------------------------------------------------------------------------------+
    | `AT+EFUSE-W`_        | Efuse写入操作                                                             |
    +----------------------+------------------------------------------------------------------------------+
    | `AT+EFUSE-R`_        | Efuse读取操作                                                             |
    +----------------------+------------------------------------------------------------------------------+
    | `AT+EFUSE-CFM`_      | Efuse写入确认（直接写入Efuse）                                            |
    +----------------------+------------------------------------------------------------------------------+
    | `AT+FLASH-W`_        | Flash写入操作                                                             |
    +----------------------+------------------------------------------------------------------------------+
    | `AT+FLASH-R`_        | Flash读取操作                                                             |
    +----------------------+------------------------------------------------------------------------------+
    | `AT+FLASH-E`_        | Flash擦除操作                                                             |
    +----------------------+------------------------------------------------------------------------------+
    | `AT+IOPUPD`_         | 将GPIO引脚初始化为上拉/下拉模式                                           |
    +----------------------+------------------------------------------------------------------------------+
    | `AT+IOOUT`_          | 设置GPIO输出高/低电平                                                     |
    +----------------------+------------------------------------------------------------------------------+
    | `AT+IOIN`_           | 查询/设置GPIO输入模式                                                     |
    +----------------------+------------------------------------------------------------------------------+
    | `AT+IORST`_          | 重置GPIO的模拟输入模式                                                     |
    +----------------------+------------------------------------------------------------------------------+
    | `AT+PART`_           | 获取分区信息                                                               |
    +----------------------+------------------------------------------------------------------------------+
    | `AT+OTASTART`_       | 启动OTA传输                                                               |
    +----------------------+------------------------------------------------------------------------------+
    | `AT+OTASEND`_        | 发送OTA数据                                                                |
    +----------------------+------------------------------------------------------------------------------+
    | `AT+OTAFIN`_         | OTA传输完成                                                               |
    +----------------------+------------------------------------------------------------------------------+
    | `AT+FS`_             | 文件系统操作                                                             |
    +----------------------+------------------------------------------------------------------------------+
    | `AT+GMAC`_           | 查询efuse中3个槽位的MAC地址                                               |
    +----------------------+------------------------------------------------------------------------------+
    | `AT+PN`_             | 查询部件编号                                                               |
    +----------------------+------------------------------------------------------------------------------+
    | `AT+VBAT`_           | 查询电源引脚电压值（单位：mV）                                             |
    +----------------------+------------------------------------------------------------------------------+

基础AT命令说明
===============================
AT
---------
功能：测试AT启动。

执行命令
^^^^^^^^^^^^^^^

**命令：**

::

    AT

**响应：**

::

    OK

AT+GMR
----------
功能：查看版本信息。

执行命令
^^^^^^^^^^^^^^^

**命令：**

::

    AT+GMR

**响应：**

::

    <AT version info>
    <macsw version info>
    <phyrf version info>
    <bthost version info>
    <btblecontroller version info>
    <SDK version info>
    <compile time>

    OK

参数
^^^^^^^^^^

-  **<AT version info>**: AT版本信息
-  **<macsw version info>**: macsw组件版本信息
-  **<phyrf version info>**: phyrf组件版本信息
-  **<bthost version info>**: bthost组件版本信息
-  **<btblecontroller version info>**: btblecontroller组件版本信息
-  **<SDK version info>**: SDK版本信息
-  **<compile time>**: 编译时间

示例
^^^^^^^^

::

    AT+GMR
    AT version:1.0.0.1(Apr 30 2025 11:47:03)
	component_version_macsw_1.6.38
	lib_version_phyrf_00f7ad715
	component_version_btble_1.8.25
	lib_version_btblecontroller_1.6.89
	component_version_sdk_2.0.75
	compile time:Apr 30 2025 11:46:58

    OK

AT+RST
---------
功能：重启模块。

执行命令
^^^^^^^^^^^^^^^

**命令：**

::

    AT+RST

**响应：**

::

    OK

AT+RESTORE
------------
功能：恢复出厂设置。

执行命令
^^^^^^^^^^^^^^^

**命令：**

::

    AT+RESTORE

**响应：**

::

    OK

AT+CMD?
------------
功能：列出当前固件支持的所有AT命令及类型。

查询命令
^^^^^^^^^^^^^

**命令：**

::

    AT+CMD?

**响应：**

::

    +CMD:<index>,<AT command name>,<support test command>,<support query command>,<support set command>,<support execute command>

    OK

参数
^^^^^^^^^^

-  **<index>**: AT命令序列号。
-  **<AT command name>**: AT命令名称。
-  **<support test command>**: 0表示不支持，1表示支持。
-  **<support query command>**: 0表示不支持，1表示支持。
-  **<support set command>**: 0表示不支持，1表示支持。
-  **<support execute command>**: 0表示不支持，1表示支持。

示例
^^^^^^^^^^^^^^^

::

    AT+CMD?
    +CMD:0,\"AT\",0,0,0,1
    +CMD:1,\"AT+RST\",0,0,0,1
    +CMD:2,\"AT+GMR\",0,0,0,1
    +CMH:3,\"AT+CMD\",0,1,0,0
    +CMD:4,\"ATE0\",0,0,0,1
    +CMD:5,\"ATE1\",0,0,0,1
    +CMD:6,\"AT+RESTORE\",0,0,0,1
    +CMD:7,\"AT+SLEEP\",0,1,1,0
    OK


ATE
---------
功能：配置AT命令回显。

执行命令
^^^^^^^^^^^^^^^

**命令：**

::

    ATE0

或

::

    ATE1

**响应：**

::

    OK

参数
^^^^^^^^^^

-  **ATE0**: 关闭回显。
-  **ATE1**: 开启回显。

AT+SYSRAM?
------------
功能：查询当前剩余堆大小和lwip剩余堆大小。

查询命令
^^^^^^^^^^^^^

**命令：**

::

    AT+SYSRAM?

**响应：**

::

    +SYSRAM:<remaining RAM size>,<lwip heap size>
    OK

参数
^^^^^^^^^^

-  **<remaining RAM size>**: 当前系统剩余堆大小，单位：字节。
-  **<lwip heap size>**: 当前lwip剩余堆大小，单位：字节。

示例
^^^^^^^^

::

    AT+SYSRAM?
    +SYSRAM:148408,84044
    OK

AT+SYSMSG?
------------
功能：查询/设置系统提示信息。

查询命令
^^^^^^^^^^^^^

**功能：**

查询当前系统提示信息状态。

**命令：**

::

    AT+SYSMSG?

**响应：**

::

    +SYSMSG:<state>
    OK

设置命令
^^^^^^^^^^^

**功能：**

配置系统提示信息。

**命令：**

::

    AT+SYSMSG=<state>

**响应：**

::

    OK

参数
^^^^^^^^^^

-  **<state>**:

   - 位0：退出Wi-Fi :term:`透传模式` 时的提示信息。

     - 0：退出Wi-Fi :term:`透传模式` 时不打印提示信息。
     - 1：退出Wi-Fi :term:`透传模式` 时打印 ``+QUITT``。

   - 位1：连接提示信息类型。

     - 0：使用简单提示信息，如 ``+CIP:XX,CONNECTED``。
     - 1：使用详细提示信息，如 ``+LINK_CONN:status_type,link_id,ip_type,terminal_type,remote_ip,remote_port,local_port``。

   - 位2：Wi-Fi :term:`透传模式`、蓝牙低功耗SPP和蓝牙SPP的连接状态提示信息。

     - 0：不打印提示信息。
     - 1：当Wi-Fi、套接字、蓝牙低功耗或蓝牙状态变化时打印以下提示信息之一：

      ::

           - "+CIP:CONNECTED\r\n" 或以 "+LINK_CONN:" 开头的消息
           - "+CIP:DISCONNECTED\r\n"
           - "+CW:CONNECTING\r\n"
           - "+CW:CONNECTED\r\n"
           - "+CW:GOTIP\r\n"
           - "+CW:ERROR\r\n"
           - "+CW:DISCONNECTED\r\n"
           - "+CW:SCAN_DONE\r\n"
           - 以 "+CW:STA_CONNECTED" 开头的消息
           - 以 "+CW:STA_DISCONNECTED" 开头的消息
           - 以 "+CW:DIST_STA_IP" 开头的消息
           - 以 "+CW:SCAN_DONE" 开头的消息
           - 以 "+BLECONN" 开头的消息
           - 以 "+BLEDISCONN" 开头的消息

注意事项
^^^^^

-  如果 ``AT+SYSSTORE=1``，配置更改将保存在easyflash区域。
- 如果将位0设置为1，退出Wi-Fi :term:`透传模式` 时将提示 "+QUITT"。
- 如果将位1设置为1，将影响命令AT+CIPSTART和AT+CIPSERVER的信息。它将提供 "+LINK_CONN:status_type,link_id,ip_type,terminal_type,remote_ip,remote_port,local_port" 而不是 "+CIP:XX,CONNECTED"。

示例
^^^^^^^^

::

    // 退出Wi-Fi透传模式时不打印提示信息
    // 打印详细连接提示信息
    // 连接状态变化时不打印提示信息
    AT+SYSMSG=2

AT+SYSLOG?
------------
功能：启用或禁用AT错误代码提示。

查询命令
^^^^^^^^^^^^^

**功能：**

查询是否启用AT错误代码提示。

**命令：**

::

    AT+SYSLOG?

**响应：**

::

    +SYSLOG:<status>

    OK

设置命令
^^^^^^^^^^^

**功能：**

启用或禁用AT错误代码提示。

**命令：**

::

    AT+SYSLOG=<status>

**响应：**

::

    OK

参数
^^^^^^^^^^

-  **<status>**: 启用或禁用

   -  0: 禁用
   -  1: 启用

示例
^^^^^^^^

::

   // 启用AT错误代码提示
   AT+SYSLOG=1

   OK
   AT+FAKE
   ERR CODE:0x01090000

   ERROR


::

   // 禁用AT错误代码提示
   AT+SYSLOG=0

   OK
   AT+FAKE
   // 无 `ERR CODE:0x01090000`

   ERROR

错误代码是一个32位的十六进制值，定义如下：

.. list-table::
   :header-rows: 1

   * - 类别
     - 子类别
     - 扩展
   * - 位32 ~ 位24
     - 位23 ~ 位16
     - 位15 ~ 位0

-  **类别:** 固定值0x01。
-  **子类别:** 错误类型。

   .. list-table:: 错误代码子类别
      :header-rows: 1

      * - 错误类型
        - 错误代码
        - 描述
      * - AT_SUB_OK
        - 0x00
        - 正常
      * - AT_SUB_COMMON_ERROR
        - 0x01
        - 保留
      * - AT_SUB_NO_TERMINATOR
        - 0x02
        - 未找到终止字符（期望 "\r\n"）
      * - AT_SUB_NO_AT
        - 0x03
        - 未找到起始AT（或输入了at、At或aT）
      * - AT_SUB_PARA_LENGTH_MISMATCH
        - 0x04
        - 参数长度不匹配
      * - AT_SUB_PARA_TYPE_MISMATCH
        - 0x05
        - 参数类型不匹配
      * - AT_SUB_PARA_NUM_MISMATCH
        - 0x06
        - 参数数量不匹配
      * - AT_SUB_PARA_VALUE_INVALID
        - 0x07
        - 参数值超出范围
      * - AT_SUB_PARA_PARSE_FAIL
        - 0x08
        - 解析参数失败
      * - AT_SUB_UNSUPPORT_CMD
        - 0x09
        - 命令不支持
      * - AT_SUB_CMD_EXEC_FAIL
        - 0x0A
        - 命令执行失败
      * - AT_SUB_CMD_PROCESSING
        - 0x0B
        - 前一个命令正在处理中
      * - AT_SUB_CMD_OP_ERROR
        - 0x0C
        - 命令操作类型错误
      * - AT_SUB_NO_MEMORY
        - 0x0D
        - 内存分配错误
      * - AT_SUB_NO_RESOURCE
        - 0x0E
        - 资源分配错误
      * - AT_SUB_TIMEOUT
        - 0x0F
        - 操作超时
      * - AT_SUB_NOT_ALLOWED
        - 0x10
        - 操作不允许
      * - AT_SUB_NOT_INIT
        - 0x11
        - 操作未初始化
      * - AT_SUB_IO_ERROR
        - 0x12
        - 设备IO错误
      * - AT_SUB_OP_ADDR_ERROR
        - 0x13
        - 操作地址错误
      * - AT_SUB_HANDLE_INVALID
        - 0x14
        - 操作句柄无效

AT+SYSSTORE?
------------
功能：查询/设置参数存储模式。

查询命令
^^^^^^^^^^^^^

**功能：**

查询AT参数存储模式。

**命令：**

::

    AT+SYSSTORE?

**响应：**

::

    +SYSSTORE:<store_mode>

    OK

设置命令
^^^^^^^^^^^

**命令：**

::

    AT+SYSSTORE=<store_mode>

**响应：**

::

    OK

参数
^^^^^^^^^^

-  **<store_mode>**:

   -  0: 命令配置不存储到闪存。
   -  1: 命令配置存储到闪存。(默认)

注意事项
^^^^^

- 此命令仅影响设置命令。查询命令始终从RAM获取。

示例
^^^^^^^^

::

   AT+SYSSTORE=0
   AT+CWMODE=1  // 不存储到闪存
   AT+CWJAP="test","1234567890" // 不存储到闪存

   AT+SYSSTORE=1
   AT+CWMODE=3  // 存储到闪存
   AT+CWJAP="test","1234567890" // 存储到闪存

   
AT+TEMP?
------------
功能：查询芯片温度。

查询命令
^^^^^^^^^^^^^

**功能：**

查询AT参数存储模式。

**命令：**

::

    AT+TEMP?

**响应：**

::

    +TEMP:<temperature>

    OK

参数
^^^^^^^^^^

-  **<temperature>**: 芯片温度（单位：°C）。


AT+EFUSE-W
------------
功能：Efuse写入操作。执行写入确认操作后，数据将写入Efuse。

设置命令
^^^^^^^^^^^

**命令：**

::

    AT+EFUSE-W=<nbytes>,<addr>

**响应：**

::

    OK

    >

此响应表示AT已准备好接收串行数据。您应输入数据，当数据长度达到 ``<nbytes>`` 值时，数据传输开始。

如果在数据传输期间无法建立连接或连接中断，系统返回：

::

    ERROR

如果数据已成功发送到协议栈（并不意味着数据已发送到对端），系统返回：

::

    SEND OK

参数
^^^^^^^^^^

-  **<nbytes>**: 要写入的字节数需要按4字节对齐。最大值：8192字节。

-  **<addr>**: 这是Efuse的地址，需要以字符串形式填写。


AT+EFUSE-R
-----------
功能：Efuse读取操作。

设置命令
^^^^^^^^^^^

**功能：**

读取指定地址处Efuse的内容。

**命令：**

::

    AT+EFUSE-R=<nbytes>,<addr>,<reload>

**响应：**

::

    +EFUSE-R:<nbytes>,[data]

    OK

注意事项
^^^^^

-  在这些参数中，'nbytes'和'addr'是必需输入，其他参数是可选的。
-  读取的字节数需要按4字节对齐，最大长度为8192字节。

示例
^^^^^^^^

::

    AT+EFUSE-R=4,"0x1c"

**响应：**

::

    +EFUSE-R:<nbytes>,[data]

    OK

参数
^^^^^^^^^^

-  **<nbytes>**: 要读取的字节数。
-  **<addr>**: 这是Efuse的地址，需要以字符串形式填写。
-  **<reload>**: 从Efuse地址重新加载读取操作。

   -  0: 表示不重新加载，读取的数据可能来自Efuse备份区。
   -  1: 表示重新加载。

示例
^^^^^^^^

::

    // 读取Efuse命令 
    AT+EFUSE-R=4,"0x1c"

    // 响应
    +EFUSE-R:1234 
    OK


    // 写入Efuse命令 
    AT+EFUSE-W=4,"0x1c" 

    // 响应 
    OK

    // 写入数据
    aaaa
    
    // 响应
    SEND OK

    // 读取Efuse命令
    AT+EFUSE-R=4,"0x1c"
    
    // 响应
    +EFUSE-R:4,aaaa
    OK

    // 读取Efuse命令
    AT+EFUSE-R=4,"0x1c",1
    
    // 响应
    +EFUSE-R:0000
    OK

AT+EFUSE-CFM
-------------
功能：Efuse写入确认操作。

设置命令
^^^^^^^^^^^

**功能：**

Efuse写入确认将直接写入Efuse。

**命令：**

::

    AT+EFUSE-CFM

**响应：**

::

    OK

示例
^^^^^^^^

::

    // 写入Efuse命令
    AT+EFUSE-W=4,"0x1c"
    
    // 响应
    OK

    // 写入数据
    aaaa
    
    // 响应
    SEND OK

    // 写入Efuse确认命令
    AT+EFUSE-CFM
    
    // 响应
    OK

    // 读取Efuse命令
    AT+EFUSE-R=4,"0x1c"
    
    // 响应
    +EFUSE-R:aaaa
    OK


AT+FLASH-W
------------
功能：Flash写入操作。

设置命令
^^^^^^^^^^^

**命令：**

::

    AT+FLASH-W=<nbytes>,<addr>

**响应：**

::

    OK

    >

此响应表示AT已准备好接收串行数据。您应输入数据，当数据长度达到 ``<nbytes>`` 值时，数据传输开始。

如果在数据传输期间无法建立连接或连接中断，系统返回：

::

    ERROR

如果数据已成功发送到协议栈（并不意味着数据已发送到对端），系统返回：

::

    SEND OK

参数
^^^^^^^^^^

-  **<nbytes>**: 要写入的字节数。最大值：8192字节。

-  **<addr>**: 这是Flash的地址，需要以字符串形式填写。


AT+FLASH-R
-----------
功能：Flash读取操作。

设置命令
^^^^^^^^^^^

**功能：**

读取指定地址处Flash的内容。

**命令：**

::

    AT+FLASH-R=<nbytes>,<addr>

**响应：**

:: 

    +FLASH-R:[data]
    OK

示例
^^^^^^^^

::
    
    // Flash读取命令 
    AT+FLASH-R=4,"0x210000"

    // 响应
    +FLASH-R:ffff
    OK

参数
^^^^^^^^^^

-  **<nbytes>**: 要读取的字节数。
-  **<addr>**: 这是Flash的地址，需要以字符串形式填写。

AT+FLASH-E
-----------
功能：Flash擦除操作。

设置命令
^^^^^^^^^^^

**功能：**

擦除指定地址处Flash的内容。

**命令：**

::

    AT+FLASH-E=<nbytes>,<addr>

**响应：**

::

    OK

示例
^^^^^^^^

::

    // Flash擦除命令
    AT+FLASH-E=4096,"0x210000"

    // 响应
    OK

参数
^^^^^^^^^^

-  **<nbytes>**: 要擦除的字节数。
-  **<addr>**: 这是Flash的地址，需要以字符串形式填写。


AT+IOPUPD
---------
功能：将GPIO引脚初始化为上拉/下拉模式。

设置命令
^^^^^^^^^^^

**命令：**

::

    AT+IOPUPD=<pin>,<state>

**响应：**

::

    OK

示例
^^^^^^^^

::

    // 初始化GPIO命令
    AT+IOPUPD=15,1

    // 响应
    OK

参数
^^^^^^^^^^

-  **<pin>**: bl616的引脚编号。
-  **<state>**: 需要初始化为上拉、下拉或浮空。

   -  0: 浮空。
   -  1: 上拉。
   -  2: 下拉。

AT+IOOUT
---------
功能：将GPIO输出设置为高/低电平。

设置命令
^^^^^^^^^^^

**命令：**

::

    AT+IOOUT=<pin>,<state>

**响应：**

::

    OK

示例
^^^^^^^^

::

    // 设置GPIO命令
    AT+IOOUT=15,1
    
    // 响应
    OK

参数
^^^^^^^^^^

-  **<pin>**: bl616的引脚编号。
-  **<state>**: GPIO输出为高/低电平。

   -  0: 低电平。
   -  1: 高电平。

AT+IOIN
---------
功能：查询/设置GPIO输入模式。

设置命令
^^^^^^^^^^^

**命令：**

::

    AT+IOIN=<pin>,<pull_state>

**响应：**

::

    OK

查询命令
^^^^^^^^^^^^^^

**命令：**

::

    AT+IOIN=<pin>?

**响应：**

::

    +IOIN=<pin>:<state>
    OK

示例
^^^^^^^^

::

    // 设置GPIO输入命令
    AT+IOIN=15
    
    // 响应
    OK

    // 查询GPIO输入状态
    AT+IOIN=15?

    // 响应
    +IOIN=15:1
    OK

参数
^^^^^^^^^^

-  **<pin>**: bl616的引脚编号。

-  **<state>**: 需要初始化为上拉、下拉或浮空。

   -  0: 浮空。
   -  1: 上拉。
   -  2: 下拉。

AT+IORST
---------
功能：将GPIO恢复为浮空输入状态。

设置命令
^^^^^^^^^^^

**命令：**

::

    AT+IORST=<pin>

**响应：**

::

    OK

示例
^^^^^^^^

::

    // 重置GPIO命令
    AT+IORST=15
    
    // 响应
    OK

参数
^^^^^^^^^^

-  **<pin>**: bl616的引脚编号。
  

AT+PART
---------
功能：获取分区信息。

查询命令
^^^^^^^^^^^^^

**命令：**

::

    AT+PART?

**响应：**

:: 

    +PART:<active_idx>,<age>,<"name">,<addr0>,<addr1>,<len0>,<len1>

    +PART:<active_idx>,<age>,<"name">,<addr0>,<addr1>,<len0>,<len1>

    ...

    OK

示例
^^^^^^^^

::

    // 重置GPIO命令
    AT+PART?

    // 响应

    +PART=0,0,"   Boot2",0x00000000,0x00000000,57344,0

    +PART=0,0,"      FW",0x00010000,0x00210000,2097152,1474560

    +PART=0,0,"     mfg",0x00210000,0x00000000,1474560,0

    +PART=0,0,"   media",0x00378000,0x00000000,462848,0

    +PART=0,0,"     PSM",0x003e9000,0x00000000,32768,0

    OK

参数
^^^^^^^^^^

-  **<active_idx>**: 

    - 0: 当前活动分区索引为0。
    - 1: 当前活动分区索引为1。

-  **<age>**: 此分区的更新次数。例如，当"FW"分区通过OTA更新时，每次OTA更新age都会增加。
-  **<name>**: 分区名称。
-  **<addr0>**: 分区索引0的地址。
-  **<addr1>**: 分区索引1的地址。
-  **<len0>**: 分区索引0的长度。
-  **<len1>**: 分区索引1的长度。


AT+OTASTART
-----------
功能：启动OTA传输。

设置命令
^^^^^^^^^^^

**命令：**

::

    AT+OTASTART=<enable>

参数
^^^^^^^^^^

-  **<enable>**: 

    - 0: 终止OTA传输。
    - 1: 启动OTA传输。

**响应：**

::

    ERROR

或

::

    OK


AT+OTASEND
-----------
发送OTA数据。此命令将数据实时写入OTA分区并进行验证。


设置命令
^^^^^^^^^^^^^^^

**命令：**

::

    AT+OTASEND=<length>

**响应：**

::

    OK

    >

符号>表示AT已准备好接收串行数据，您现在可以输入数据。当满足参数<length>确定的消息长度要求时，传输开始。

如果传输成功，AT返回：


::

    SEND OK

否则，返回：

::

    SEND FAIL


参数
^^^^^^^^^^

- **<length>**: OTA数据长度。最大长度等于系统可分配的堆大小。


AT+OTAFIN
----------
功能：验证并从另一个分区重启。

设置命令
^^^^^^^^^^^

**命令：**

::

    AT+OTAFIN

**响应：**

如果OTA已写入相应分区并成功验证完整性，即将重启，则返回：

::

    OK

如果重启失败，则返回：

::

    ERROR


AT+FS
----------
功能：文件系统操作。

设置命令
^^^^^^^^^^^

**命令：**

::

    AT+FS=<type>,<operation>,<filename>[,<offset>][,<length>]

**响应：**

::

    OK

参数
^^^^^^^^^^

- **<type>**: 当前仅支持LittleFS。

    - 0: LittleFS

- **<operation>**:

    - 0: 删除文件。
    - 1: 创建文件。
    - 2: 写入文件。
    - 3: 读取文件。
    - 4: 查询文件大小。
    - 5: 列出特定目录中的文件。当前仅支持根目录。

- **<filename>**: 需要操作的文件名。

- **<offset>**: 仅适用于写入和读取操作。

- **<length>**: 数据长度，仅适用于写入和读取操作。

示例
^^^^^^^^

::

    // 查询当前目录'.'中的文件列表
    AT+FS=0,5,"."

    // 响应
    +FS:LIST
    .
    ..
    ca_1.crt
    ca_1.key
    ca_2.crt
    ca_2.key
    client_1.crt
    client_1.key
    client_2.crt
    client_2.key
    server_1.crt
    server_1.key
    server_2.crt
    server_2.key

    OK


AT+GMAC
----------
功能：查询efuse中3个槽位的MAC地址。

查询命令
^^^^^^^^^^^

**命令：**

::

    AT+GMAC?

**响应：**

::

    +GMACSLOT0:<mac_addr>

    +GMACSLOT1:<mac_addr>

    +GMACSLOT2:<mac_addr>

    OK

参数
^^^^^^^^^^

- **<mac_addr>**: efuse中的MAC地址。

示例
^^^^^^^^

::

    // 查询efuse中3个槽位的MAC地址。
    AT+GMAC?

    // 响应
    +GMACSLOT0:9c:b7:93:0c:c1:26
    +GMACSLOT1:00:00:00:00:00:00
    +GMACSLOT2:00:b7:00:00:00:00

    OK


AT+PN
----------
功能：查询部件编号。

查询命令
^^^^^^^^^^^

**命令：**

::

    AT+PN?

**响应：**

::

    +PN:<pn_num>

    OK

参数
^^^^^^^^^^

- **<pn_num>**: efuse中的部件编号。

示例
^^^^^^^^

::

    AT+PN?

    // 响应
    +PN:CP90-79196-2

    OK



AT+VBAT
----------
功能：查询电源引脚的电压值。

查询命令
^^^^^^^^^^^

**命令：**

::

    AT+VBAT?

**响应：**

::

    +VBAT:<vbat_val>

    OK

参数
^^^^^^^^^^

- **<vbat_val>**: 电源引脚的电压值（单位：mV）。

示例
^^^^^^^^

::

    AT+VBAT?

    // 响应
    +VBAT:3326

    OK


==========================
Wi-Fi功能AT命令
==========================
.. table:: 指令列表
    :widths: 30,70
    :width: 100%
    :align: center

    +----------------------+-------------------------------------------------------------------+
    | 指令                 | 描述                                                              |
    +======================+===================================================================+
    | `AT+WIFISP`_         | 查询/设置启用/禁用WLAN射频                                      |
    +----------------------+-------------------------------------------------------------------+
    | `AT+CWMODE`_         | 设置Wi-Fi模式                                                    |
    +----------------------+-------------------------------------------------------------------+
    | `AT+CWNETMODE`_      | 查询设备工作在NCP/RCP模式                                        |
    +----------------------+-------------------------------------------------------------------+
    | `AT+CWSTATE`_        | 查询Wi-Fi状态及Wi-Fi信息                                         |
    +----------------------+-------------------------------------------------------------------+
    | `AT+CWJAP`_          | 连接到AP                                                         |
    +----------------------+-------------------------------------------------------------------+
    | `AT+CWRECONNCFG`_    | 查询/设置Wi-Fi重新连接配置                                       |
    +----------------------+-------------------------------------------------------------------+
    | `AT+CWLAPOPT`_       | 设置AT+CWLAP命令扫描结果属性                                    |
    +----------------------+-------------------------------------------------------------------+
    | `AT+CWLAP`_          | 扫描附近AP                                                       |
    +----------------------+-------------------------------------------------------------------+
    | `AT+CWQAP`_          | 断开AP连接                                                       |
    +----------------------+-------------------------------------------------------------------+
    | `AT+CWSAP`_          | 查询/设置SoftAP配置                                              |
    +----------------------+-------------------------------------------------------------------+
    | `AT+CWLIF`_          | 获取连接到SoftAP的站点IP地址                                    |
    +----------------------+-------------------------------------------------------------------+
    | `AT+CWQIF`_          | 从SoftAP断开站点连接                                             |
    +----------------------+-------------------------------------------------------------------+
    | `AT+CWDHCP`_         | 启用/禁用DHCP                                                    |
    +----------------------+-------------------------------------------------------------------+
    | `AT+CWDHCPS`_        | 查询/设置SoftAP的DHCP服务器分配的IP地址                          |
    +----------------------+-------------------------------------------------------------------+
    | `AT+CWAUTOCONN`_     | 设置自动重连                                                     |
    +----------------------+-------------------------------------------------------------------+
    | `AT+CIPSTAMAC`_      | 查询/设置站点MAC地址                                             |
    +----------------------+-------------------------------------------------------------------+
    | `AT+CIPAPMAC`_       | 查询/设置SoftAP的MAC地址                                         |
    +----------------------+-------------------------------------------------------------------+
    | `AT+CIPSTA`_         | 查询/设置站点IP地址                                               |
    +----------------------+-------------------------------------------------------------------+
    | `AT+CIPAP`_          | 查询/设置SoftAP的IP地址                                          |
    +----------------------+-------------------------------------------------------------------+
    | `AT+CWHOSTNAME`_     | 查询/设置站点主机名                                               |
    +----------------------+-------------------------------------------------------------------+
    | `AT+CWCOUNTRY`_      | 查询/设置Wi-Fi国家代码                                            |
    +----------------------+-------------------------------------------------------------------+
    | `AT+CWMONITOR`_      | 设置WiFi进入监控模式                                              |
    +----------------------+-------------------------------------------------------------------+
    | `AT+CWSTAPROTO`_     | 查询/设置站点模式的802.11 b/g/n/ax协议标准                       |
    +----------------------+-------------------------------------------------------------------+
    | `AT+CWAPPROTO`_      | 查询/设置SoftAP模式的802.11 b/g/n/ax协议标准                      |
    +----------------------+-------------------------------------------------------------------+
    | `AT+WPS`_            | 启用WPS功能                                                       |
    +----------------------+-------------------------------------------------------------------+
    | `AT+CWANTENABLE`_    | 启用/禁用天线分集功能                                             |
    +----------------------+-------------------------------------------------------------------+
    | `AT+CWANTNUM`_       | 获取当前设备的最大天线数量                                        |
    +----------------------+-------------------------------------------------------------------+
    | `AT+CWANT`_          | 设置/查询当前使用的天线                                           |
    +----------------------+-------------------------------------------------------------------+

基础AT命令说明
=============================
AT+WIFISP
------------
功能：查询/设置启用/禁用WLAN射频。

查询命令
^^^^^^^^^^^^^

**功能：**

查询WLAN射频启用状态。

**命令：**

::

    AT+WIFISP?

**响应：**

::

    +WIFISP:<enable>

    OK

设置命令
^^^^^^^^^^^

**功能：**

启用/禁用WLAN射频。

**命令：**

::

    AT+WIFISP=<enable>

**响应：**

::

    OK

参数
^^^^^^^^^^

-  **<enable>**:

   -  0: 禁用WLAN射频。
   -  1: 启用WLAN射频。


AT+CWMODE
------------
功能：查询/设置Wi-Fi模式。

查询命令
^^^^^^^^^^^^^

**功能：**

查询设备的Wi-Fi模式。

**命令：**

::

    AT+CWMODE?

**响应：**

::

    +CWMODE:<mode>

    OK

设置命令
^^^^^^^^^^^

**功能：**

设置设备的Wi-Fi模式。

**命令：**

::

    AT+CWMODE=<mode>[,<auto_connect>]

**响应：**

::

    OK

参数
^^^^^^^^^^

-  **<mode>**:

   -  0: 空模式。Wi-Fi射频将被禁用。
   -  1: 站点模式。
   -  2: 软AP模式。
   -  3: 软AP+站点模式。

-  **<auto_connect>**: 当设备从软AP模式或空模式切换到站点模式时，启用或禁用自动连接到AP。默认值：1。如果省略该参数，将使用默认值，即自动连接到AP。

   -  0: 设备不会自动连接到AP。
   -  1: 如果之前已将连接AP的配置保存到闪存中，设备将自动连接到AP。

注意事项
^^^^^

-  如果AT+SYSSTORE=1，配置更改将保存在easyflash区域。
-  软AP+站点模式要求AP和STA位于同一信道。

示例
^^^^^^^^

::

    AT+CWMODE=1


AT+CWNETMODE
------------
功能：查询设备工作在NCP/RCP模式。

查询命令
^^^^^^^^^^^^^

**功能：**

查询设备是否工作在NCP/RCP模式。

**命令：**

::

    AT+CWNETMODE?

**响应：**

::

    +CWNETMODE:<netmode>

    OK

参数
^^^^^^^^^^

-  **<netmode>**:

   -  0: RCP模式。
   -  1: NCP模式。

注意事项
^^^^^

-  当设备处于RCP模式时，所有与网络、HTTP和MQTT相关的AT命令均失效。

AT+CWSTATE
----------
功能：查询Wi-Fi状态及Wi-Fi信息。

查询命令
^^^^^^^^^^^^^

**功能：**

查询设备的Wi-Fi状态及Wi-Fi信息。

**命令：**

::

    AT+CWSTATE?

**响应：**

::

    +CWSTATE:<state>,<"ssid">

    OK

参数
^^^^^^^^^^

-  **<state>**: 当前Wi-Fi状态。

   -  0: 站点未启动任何Wi-Fi连接。
   -  1: 站点已连接到AP，但尚未获取IPv4地址。
   -  2: 站点已连接到AP，并获取了IPv4地址。
   -  3: 站点处于Wi-Fi连接或重新连接状态。
   -  4: 站点处于Wi-Fi断开状态。

-  **<\"ssid\">**: 目标AP的SSID。

注意事项
^^^^^

-  当站点未连接到AP时，建议使用此命令查询Wi-Fi信息；站点连接到AP后，建议使用AT+CWJAP查询Wi-Fi信息。

AT+CWJAP
----------------
功能：连接到AP。

查询命令
^^^^^^^^^^^^^

**功能：**

查询站点已连接的AP信息。

**命令：**

::

    AT+CWJAP?

**响应：**

::

    +CWJAP:<ssid>,<bssid>,<channel>,<rssi>,<wep_en>

    OK

设置命令
^^^^^^^^^^^

**功能：**

将站点连接到目标AP。

**命令：**

::

    AT+CWJAP=[<ssid>],[<pwd>][,<bssid>][,<wep_en>]

注意事项
^^^^^

-  在这些参数中，'ssid'和'pwd'是必需输入，其他参数可选。

**响应：**

::

    +CW:CONNECTED
    +CW:GOTIP

    OK
或

::

    +CW:CONNECTING

    OK

    +CW:ERROR,<reason_code>

或

::

    +CWJAP:<error code>
    ERROR

执行命令
^^^^^^^^^^^^^^^

**功能：**

使用上次的Wi-Fi配置连接到目标AP。

**命令：**

::

    AT+CWJAP

**响应：**

::

    +CW:CONNECTED
    +CW:GOTIP

    OK

或

::

    +CWJAP:<error code>
    ERROR

参数
^^^^^^^^^^

-  **<ssid>**: 目标AP的SSID。

   -  如果SSID或密码包含特殊字符（如`,`、`"`或`\\`），需要使用转义字符语法。

-  **<pwd>**: 密码，最大64字节ASCII。
-  **<bssid>**: 目标AP的MAC地址。当多个AP具有相同SSID时，不可省略。
-  **<channel>**: 信道。
-  **<rssi>**: 信号强度。
-  **<wep_en>**: 连接的AP是否使用WEP加密？

   -  0: 非WEP加密。
   -  1: 是WEP加密。

-  **<error code>**: （仅供参考）

   -  1: 连接超时。
   -  2: 密码错误。
   -  3: 找不到目标AP。
   -  4: 连接失败。
   -  其他: 发生未知错误。

-  **<reason_code>**: 

   - 1: 传输认证帧时内存分配失败。
   - 2: 认证过程失败。
   - 3: 认证算法未被接受或失败。
   - 4: 传输关联帧时内存分配失败。
   - 5: 与接入点的关联过程失败。
   - 6: 未连接时接入点发起去认证。
   - 7: 连接时接入点发起去认证。
   - 8: 四次握手期间超时，可能由于PSK（预共享密钥）问题。
   - 9: 四次握手期间传输去认证帧失败。
   - 10: 四次握手期间去认证帧内存分配失败。
   - 11: 等待认证或关联响应超时。
   - 12: 扫描过程中未找到BSSID或信道。
   - 13: 尝试加入网络时创建信道上下文失败。
   - 14: 加入网络失败。
   - 15: 向网络添加站点（STA）失败。
   - 16: 信标丢失，可能导致断开连接。
   - 17: 网络安全设置不匹配。
   - 18: 由于WEP密钥长度错误导致的错误。
   - 19: 用户通过去认证发起断开连接。
   - 20: 用户未发送去认证帧发起断开连接。
   - 21: 固件未能发送节能空帧导致断开连接。
   - 22: 检测到流量丢失。
   - 23: 切换到新信道失败。
   - 24: 认证或关联响应确认失败。
   - 25: 重新关联过程开始。

注意事项
^^^^^

-  如果AT+SYSSTORE=1，配置更改将保存在easyflash区域。
-  此命令需要启用站点模式。
-  此命令的参数``<reconn_interval>``与命令AT+CWRECONNCFG的``<interval_second>``相同。因此，如果运行此命令时省略``<reconn_interval>``，Wi-Fi重新连接的间隔将使用默认值1。
-  如果省略``<ssid>``和``<password>``参数，AT将使用上次的配置。
-  执行命令与设置命令的最大超时时间相同。默认值为15秒，但可以通过设置参数``<jap_timeout>``更改。

示例
^^^^^^^^

::

    // 如果目标AP的SSID为"abc"，密码为"0123456789"，命令应为：
    AT+CWJAP="abc","0123456789"

    // 如果目标AP的SSID为"ab\,c"，密码为"0123456789\"，命令应为：
    AT+CWJAP="ab\\\\,c","0123456789\"\\\\"

    // 如果多个AP的SSID均为"abc"，可通过BSSID定位目标AP：
    AT+CWJAP="abc","0123456789","ca:d7:19:d8:a6:44"

    // 如果需要通过受保护的管理帧连接到AP，命令应为：
    AT+CWJAP="abc","0123456789",,,,,,,3

AT+CWRECONNCFG
---------------
功能：查询/设置Wi-Fi重新连接配置。

查询命令
^^^^^^^^^^^^^

**功能：**

查询Wi-Fi重新连接配置。

**命令：**

::

    AT+CWRECONNCFG?

**响应：**

::

    +CWRECONNCFG:<interval_second>,<repeat_count>

    OK

设置命令
^^^^^^^^^^^

**功能：**

设置Wi-Fi重新连接配置。

**命令：**

::

    AT+CWRECONNCFG=<interval_second>,<repeat_count>

**响应：**

::

    OK

参数
^^^^^^^^^^

-  **<interval_second>**: Wi-Fi重新连接的时间间隔。单位：秒。默认值：0。最大值：7200。

   -  0: 站点断开连接后不会重新连接到AP。
   -  [1,7200]: 站点断开连接后将按指定间隔重新连接到AP。

-  **<repeat_count>**: 设备尝试重新连接到AP的次数。此参数仅在参数``<interval_second>``不为0时生效。默认值：0。最大值：1000。

   -  0: 站点将始终尝试重新连接到AP。
   -  [1,1000]: 站点将尝试重新连接到AP指定的次数。

示例
^^^^^^^^

::

    // 站点以1秒的间隔尝试重新连接AP，共100次。
    AT+CWRECONNCFG=1,100

    // 站点断开连接后不会重新连接到AP。
    AT+CWRECONNCFG=0,0

注意事项
^^^^^

-  此命令的参数``<interval_second>``与命令AT+CWJAP的参数``[<reconn_interval>]``相同。
-  此命令适用于被动断开AP连接、Wi-Fi模式切换和上电后Wi-Fi自动连接的场景。

AT+CWLAPOPT
-----------
功能：设置AT+CWLAP命令的配置。

设置命令
^^^^^^^^^^^

**命令：**

::

    AT+CWLAPOPT=<sort_enable>,<print mask>[,<rssi filter>][,<authmode mask>][,<max_count>]

**响应：**

::

    OK

或

::

    ERROR

参数
^^^^^^^^^^

-  **<sort_enable>**: 启用/禁用按RSSI排序扫描结果（默认排序）。
-  **<print mask>**: 决定AT+CWLAP结果中是否显示以下参数。默认值：0x7FF。设置为1表示显示对应参数，设置为0表示不显示。

   -  位0: 决定是否显示<ecn>。
   -  位1: 决定是否显示<ssid>。
   -  位2: 决定是否显示<rssi>。
   -  位3: 决定是否显示<mac>。
   -  位4: 决定是否显示<channel>。
   -  位5: 决定是否显示<freq_offset>。
   -  位6: 决定是否显示<freqcal_val>。
   -  位7: 决定是否显示<pairwise_cipher>。
   -  位8: 决定是否显示<group_cipher>。
   -  位9: 决定是否显示<bgn>。
   -  位10: 决定是否显示<wps>。

-  **[<rssi filter>]**: 决定AT+CWLAP结果是否根据``rssi filter``过滤。即信号强度低于``rssi filter``的AP将不出现在结果中。单位：dBm。默认值：–100。范围：[–100,40]。
-  **[<authmode mask>]**: 决定AT+CWLAP结果中是否显示具有以下认证模式的AP。默认值：0xFFFF。设置``位x``为1表示显示对应认证模式的AP，设置为0表示不显示。

   -  位0: 决定是否显示认证模式为``OPEN``的AP。
   -  位1: 决定是否显示认证模式为``WEP``的AP。
   -  位2: 决定是否显示认证模式为``WPA_PSK``的AP。
   -  位3: 决定是否显示认证模式为``WPA2_PSK``的AP。
   -  位4: 决定是否显示认证模式为``WPA_WPA2_PSK``的AP。
   -  位5: 决定是否显示认证模式为``WPA2_ENTERPRISE``的AP。
   -  位6: 决定是否显示认证模式为``WPA3_PSK``的AP。
   -  位7: 决定是否显示认证模式为``WPA2_WPA3_PSK``的AP。

-  **[<max_count>]**: 扫描到的WiFi网络最大数量默认为50，即CWLAP命令响应最多包含50条扫描结果。范围：(0,50]。

示例
^^^^^^^^

::

    // 第一个参数为1，表示AT+CWLAP结果将按RSSI排序；
    // 第二个参数为31（即0x1F），表示<print mask>对应位设为1，AT+CWLAP结果将显示所有参数。
    AT+CWLAPOPT=1,31
    AT+CWLAP

    // 仅显示认证模式为OPEN的AP
    AT+CWLAPOPT=1,31,-100,1
    AT+CWLAP

AT+CWLAP
----------
功能：列出可用AP。

设置命令
^^^^^^^^^^^

**功能：**

查询具有指定参数（如SSID、MAC地址或信道）的AP。

**命令：**

::

    AT+CWLAP=[<scan_type>,<ssid>,<mac>,<channel>,<scan_time_min>,<scan_time_max>]

执行命令
^^^^^^^^^^^^^^^

**功能：**

列出所有可用AP。

**命令：**

::

    AT+CWLAP

**响应：**

::

    +CWLAP:<ecn>,<ssid>,<rssi>,<mac>,<channel>,<freq_offset>,<freqcal_val>,<pairwise_cipher>,<group_cipher>,<bgn>,<wps>

    OK

参数
^^^^^^^^^^

-  **<ecn>**: 加密方式。

   -  0: OPEN
   -  1: WEP
   -  2: WPA_PSK
   -  3: WPA2_PSK
   -  4: WPA_WPA2_PSK
   -  5: WPAx_ENTERPRISE
   -  6: WPA3_PSK
   -  7: WPA2_WPA3_PSK

-  **<scan_type>**: Wi-Fi扫描类型：

   -  0: 主动扫描
   -  1: 被动扫描

-  **<ssid>**: 表示AP的SSID的字符串参数。
-  **<rssi>**: 信号强度。
-  **<mac>**: 表示AP的MAC地址的字符串参数。
-  **<channel>**: 信道。
-  **<scan_time_min>**: 每信道主动扫描的最小时间。单位：毫秒。范围[0,1500]。扫描类型为被动时，此参数无效。
-  **<scan_time_max>**: 每信道主动扫描的最大时间。单位：毫秒。范围[0,1500]。若此参数为0，固件将使用默认时间：主动扫描120毫秒；被动扫描360毫秒。
-  **<freq_offset>**: 频率偏移（保留项）。
-  **<freqcal_val>**: 频率校准值（保留项）。
-  **<pairwise_cipher>**: 成对密码类型。

   -  0: None
   -  1: WEP40
   -  2: WEP104
   -  3: TKIP
   -  4: CCMP
   -  5: TKIP和CCMP
   -  6: AES-CMAC-128
   -  7: Unknown

-  **<group_cipher>**: 组密码类型，枚举值与``<pairwise_cipher>``相同。
-  **<bgn>**: 802.11 b/g/n/ax。对应位为1表示启用相应模式，为0表示禁用。

   -  位0: 标识是否启用802.11b模式
   -  位1: 标识是否启用802.11g模式
   -  位2: 标识是否启用802.11n模式
   -  位3: 标识是否启用802.11ax模式

-  **<wps>**: WPS标志。

   - 0: WPS禁用
   - 1: WPS启用

示例
^^^^^^^^

::

    AT+CWLAP=0,"Wi-Fi","ca:d7:19:d8:a6:44",6,0,400,1000

    // 搜索指定SSID的AP:
    AT+CWLAP=0,"Wi-Fi"

AT+CWQAP
------------
功能：断开与AP的连接。

执行命令
^^^^^^^^^^^^^^^

**命令：**

::

    AT+CWQAP=[<restore>]

**响应：**

::

    OK


**命令：**

::

    AT+CWQAP

**响应：**

::

    OK


参数
^^^^^^^^^^

-  **可选<restore>**: 擦除保存的SSID和密码信息的标志。

   -  0: 不擦除保存的SSID和密码信息（默认）。
   -  1: 擦除保存的SSID和密码信息。

AT+CWSAP
------------
功能：查询/设置SoftAP的配置。

查询命令
^^^^^^^^^^^^^

**功能：**

查询SoftAP的配置参数。

**命令：**

::

    AT+CWSAP?

**响应：**

::

    +CWSAP:<ssid>,<pwd>,<channel>,<ecn>,<max conn>,<ssid hidden>

    OK

设置命令
^^^^^^^^^^^

**功能：**

设置SoftAP的配置。

**命令：**

::

    AT+CWSAP=<ssid>,<pwd>,<chl>,<ecn>[,<max conn>][,<ssid hidden>]

**响应：**

::

    OK

参数
^^^^^^^^^^

-  **<ssid>**: 表示AP的SSID的字符串参数。
-  **<pwd>**: 表示密码的字符串参数。长度：8~64字节ASCII。
-  **<channel>**: 信道ID。
-  **<ecn>**: 加密方式；不支持WEP。

   -  0: OPEN
   -  2: WPA_PSK
   -  3: WPA2_PSK
   -  4: WPA3_PSK

-  **[<max conn>]**: SoftAP可连接的最大站点数。范围：[1,4]。
-  **[<ssid hidden>]**:

   -  0: 广播SSID（默认）。
   -  1: 不广播SSID。

注意事项
^^^^^

-  此命令仅在AT+CWMODE=2或AT+CWMODE=3时生效。
-  如果AT+SYSSTORE=1，配置更改将保存在easyflash区域。

AT+CWLIF
--------
功能：获取连接到SoftAP的站点的IP地址。

执行命令
^^^^^^^^^^^^^^^

**命令：**

::

    AT+CWLIF

**响应：**

::

    +CWLIF:<ip addr>,<mac>

    OK

参数
^^^^^^^^^^

-  **<ip addr>**: 连接到SoftAP的站点的IP地址。
-  **<mac>**: 连接到SoftAP的站点的MAC地址。

注意事项
^^^^^

-  此命令无法获取静态IP。仅在SoftAP和连接的站点均启用DHCP时生效。

AT+CWQIF
---------
功能：从SoftAP断开站点连接。

执行命令
^^^^^^^^^^^^^^^

**功能：**

断开所有连接到SoftAP的站点。

**命令：**

::

    AT+CWQIF

**响应：**

::

    OK

设置命令
^^^^^^^^^^^

**功能：**

从SoftAP断开指定站点。

**命令：**

::

    AT+CWQIF=<mac>

示例
^^^^^^^^

::

    AT+CWQIF="18:b9:05:ed:59:cc"

**响应：**

::

    OK

参数
^^^^^^^^^^

-  **<mac>**: 要断开连接的站点的MAC地址。

AT+CWDHCP
----------
功能：启用/禁用DHCP。

查询命令
^^^^^^^^^^^^^

**命令：**

::

    AT+CWDHCP?

**响应：**

::

  <state>

设置命令
^^^^^^^^^^^

**功能：**

启用/禁用DHCP。

**命令：**

::

    AT+CWDHCP=<operate>,<mode>

**响应：**

::

    OK

参数
^^^^^^^^^^

-  **<operate>**:

   -  0: 禁用
   -  1: 启用

-  **<mode>**:

   -  位0: 站点DHCP
   -  位1: SoftAP DHCP

-  **<state>**: DHCP状态

   - 位0:

     - 0: 站点DHCP已禁用。
     - 1: 站点DHCP已启用。

   - 位1:

     - 0: SoftAP DHCP已禁用。
     - 1: SoftAP DHCP已启用。

注意事项
^^^^^
-  如果AT+SYSSTORE=1，配置更改将保存在easyflash区域。
-  此设置命令与设置静态IP的命令（如AT+CIPSTA和AT+CIPAP）相关联：

   -  启用DHCP时，静态IP地址将被禁用；
   -  启用静态IP地址时，DHCP将被禁用；
   -  最后一次配置将覆盖前一次配置。

示例
^^^^^^^^

::

    // 启用站点DHCP。如果上次DHCP模式为2，当前DHCP模式将为3。
    AT+CWDHCP=1,1

    // 禁用SoftAP DHCP。如果上次DHCP模式为3，当前DHCP模式将为1。
    AT+CWDHCP=0,2


AT+CWDHCPS
-----------------------------------------------------------------------------------------------
功能：查询/设置SoftAP DHCP服务器分配的IP地址。

查询命令
^^^^^^^^^^^^^

**命令：**

::

    AT+CWDHCPS?

**响应：**

::

    +CWDHCPS=<lease time>,<start IP>,<end IP>

    OK

设置命令
^^^^^^^^^^^

**功能：**

设置SoftAP DHCP服务器的IP地址范围。

**命令：**

::

    AT+CWDHCPS=<enable>,<lease time>,<start IP>,<end IP>

**响应：**

::

    OK

参数
^^^^^^^^^^

-  **<enable>**:

   -  1: 启用DHCP服务器设置，需设置以下参数。
   -  0: 禁用DHCP服务器设置，使用默认IP地址范围。

-  **<lease time>**: 租约时间，单位：分钟。范围[1,2880]。
-  **<start IP>**: 可从SoftAP DHCP服务器获取的IP地址范围起始IP。
-  **<end IP>**: 可从SoftAP DHCP服务器获取的IP地址范围结束IP。

注意事项
^^^^^

-  如果AT+SYSSTORE=1，配置更改将保存在easyflash区域。
-  此AT命令仅在设备启用SoftAP和DHCP服务器时生效。
-  IP地址需与SoftAP的IP地址处于同一网段。

示例
^^^^^^^^

::

    AT+CWDHCPS=1,3,"192.168.4.10","192.168.4.15"

    AT+CWDHCPS=0 // 禁用设置并使用默认IP地址范围。

AT+CWAUTOCONN
--------------------------------------------------------------------------------
功能：上电时自动连接到AP

设置命令
^^^^^^^^^^^

**命令：**

::

    AT+CWAUTOCONN=<enable>

**响应：**

::

    OK

参数
^^^^^^^^^^

-  **<enable>**:

   -  1: 启用上电自动连接AP（默认）。
   -  0: 禁用上电自动连接AP。

注意事项
^^^^^

-  配置更改将保存在easyflash区域。

示例
^^^^^^^^

::

    AT+CWAUTOCONN=1

AT+CIPSTAMAC
----------------------------------------------------------------------------
功能：查询/设置BL61x站点的MAC地址

查询命令
^^^^^^^^^^^^^

**功能：**

查询站点的MAC地址。

**命令：**

::

    AT+CIPSTAMAC?

**响应：**

::

    +CIPSTAMAC:<mac>

    OK

设置命令
^^^^^^^^^^^

**功能：**

设置站点的MAC地址。

**命令：**

::

    AT+CIPSTAMAC=<mac>

**响应：**

::

    OK

参数
^^^^^^^^^^

-  **<mac>**: 表示站点MAC地址的字符串参数。

注意事项
^^^^^

-  如果AT+SYSSTORE=1，配置更改将保存在easyflash区域。
-  SoftAP的MAC地址与站点相同，设置站点MAC时，SoftAP的MAC也将自动更新。
-  MAC地址的第0位不能为1。例如，MAC地址可以是"1a:…"，但不能是"15:…"。
-  FF:FF:FF:FF:FF:FF和00:00:00:00:00:00是无效MAC地址，无法设置。

示例
^^^^^^^^

::

    AT+CIPSTAMAC="1a:fe:35:98:d3:7b"

AT+CIPAPMAC
--------------------------------------------------------------------------
功能：查询/设置SoftAP的MAC地址

查询命令
^^^^^^^^^^^^^
**功能：**

查询SoftAP的MAC地址。

**命令：**

::

    AT+CIPAPMAC?

**响应：**

::

    +CIPAPMAC:<mac>

    OK

设置命令
^^^^^^^^^^^

**功能：**

设置SoftAP的MAC地址。

**命令：**

::

    AT+CIPAPMAC=<mac>

**响应：**

::

    OK

参数
^^^^^^^^^^

-  **<mac>**: 表示SoftAP MAC地址的字符串参数。

注意事项
^^^^^

-  如果AT+SYSSTORE=1，配置更改将保存在easyflash区域。
-  SoftAP的MAC地址与站点相同，设置SoftAP MAC时，站点的MAC也将自动更新。
-  MAC地址的第0位不能为1。例如，MAC地址可以是"18:…"，但不能是"15:…"。
-  FF:FF:FF:FF:FF:FF和00:00:00:00:00:00是无效MAC地址，无法设置。

示例
^^^^^^^^

::

    AT+CIPAPMAC="18:fe:35:98:d3:7b"

AT+CIPSTA
------------------------------------------------------------------------
功能：查询/设置站点的IP地址

查询命令
^^^^^^^^^^^^^

**功能：**

查询站点的IP地址。

**命令：**

::

    AT+CIPSTA?

**响应：**

::

    +CIPSTA:ip:<"ip">
    +CIPSTA:gateway:<"gateway">
    +CIPSTA:netmask:<"netmask">
    +CIPSTA:ip6ll:<"ipv6 addr">
    +CIPSTA:ip6gl:<"ipv6 addr">
    OK

设置命令
^^^^^^^^^^^

**功能：**

设置站点的IPv4地址。

**命令：**

::

    AT+CIPSTA=<"ip">[,<"gateway">,<"netmask">,<"dns">]

**响应：**

::

    OK

参数
^^^^^^^^^^

-  **<\"ip\">**: 表示站点IPv4地址的字符串参数。
-  **<\"gateway\">**: 网关。
-  **<\"netmask\">**: 子网掩码。
-  **<”ipv6 addr”>**: 表示BFLB站点IPv6地址的字符串参数。

注意事项
^^^^^

-  查询命令仅在站点连接到AP或配置静态IP地址后可查询IP地址。
-  如果AT+SYSSTORE=1，配置更改将保存在easyflash区域。
-  此设置命令与设置DHCP的命令（如AT+CWDHCP）相关联：

   -  启用静态IP地址时，DHCP将被禁用；
   -  启用DHCP时，静态IP地址将被禁用；
   -  最后一次配置将覆盖前一次配置。

示例
^^^^^^^^

::

    AT+CIPSTA="192.168.6.100","192.168.6.1","255.255.255.0"

AT+CIPAP
----------------------------------------------------------------------
功能：查询/设置SoftAP的IP地址

查询命令
^^^^^^^^^^^^^

**功能：**

查询SoftAP的IP地址。

**命令：**

::

    AT+CIPAP?

**响应：**

::

    +CIPAP:ip:<"ip">
    +CIPAP:gateway:<"gateway">
    +CIPAP:netmask:<"netmask">

    OK

设置命令
^^^^^^^^^^^

**功能：**

设置SoftAP的IPv4地址。

**命令：**

::

    AT+CIPAP=<"ip">[,<"gateway">,<"netmask">]

**响应：**

::

    OK

参数
^^^^^^^^^^

-  **<"ip\">**: 表示SoftAP IPv4地址的字符串参数。
-  **<\"gateway\">**: 网关。
-  **<\"netmask\">**: 子网掩码。

注意事项
^^^^^

-  如果AT+SYSSTORE=1，配置更改将保存在easyflash区域。
-  此设置命令与设置DHCP的命令（如AT+CWDHCP）相关联：

   -  启用静态IP地址时，DHCP将被禁用；
   -  启用DHCP时，静态IP地址将被禁用；
   -  最后一次配置将覆盖前一次配置。

示例
^^^^^^^^

::

    AT+CIPAP="192.168.5.1","192.168.5.1","255.255.255.0"

AT+CWHOSTNAME
--------------------------------------------------------------------------
功能：查询/设置站点的主机名

查询命令
^^^^^^^^^^^^^

**功能：**

查询站点的主机名。

**命令：**

::

    AT+CWHOSTNAME?

**响应：**

::

    +CWHOSTNAME:<hostname>

    OK

设置命令
^^^^^^^^^^^

**功能：**

设置站点的主机名。

**命令：**

::

    AT+CWHOSTNAME=<hostname>

**响应：**

::

    OK

若未启用站点模式，命令将返回：

::

    ERROR

参数
^^^^^^^^^^

-  **<hostname>**: 站点的主机名，最大长度32字节。

注意事项
^^^^^

-  配置更改不保存到闪存。

示例
^^^^^^^^

::

    AT+CWMODE=3
    AT+CWHOSTNAME="my_test"

AT+CWCOUNTRY
--------------------------------------------------------------------
功能：查询/设置Wi-Fi国家代码

查询命令
^^^^^^^^^^^^^

**功能：**

查询Wi-Fi国家代码信息。

**命令：**

::

    AT+CWCOUNTRY?

**响应：**

::

    +CWCOUNTRY:<country_policy>,<country_code>

    OK

设置命令
^^^^^^^^^^^

**功能：**

设置Wi-Fi国家代码信息。

**命令：**

::

    AT+ CWCOUNTRY=<country_policy>,<country_code>

**响应：**

::

    OK

参数
^^^^^^^^^^

-  **<country_policy>**:

   -  0: 国家代码将与设备连接的AP所在国家代码一致。
   -  1: 国家代码不改变，始终为命令设置的值。

-  **<country_code>**: 国家代码，最大长度3个字符。

注意事项
^^^^^

-  配置更改不保存到闪存。

示例
^^^^^^^^

::

    AT+CWMODE=3
    AT+CWCOUNTRY=1,"CN"


AT+CWMONITOR
--------------------------------------------------------------------
功能：设置WiFi进入监控模式

设置命令
^^^^^^^^^^^

**功能：**

设置WiFi进入监控模式。

**命令：**

::

    AT+ CWMONITOR=<enable>,<channel>,[<min_pkg_len>],[<max_pkg_len>]

**响应：**

::

    OK

    +CWMONITOR,<channel>,<pkg_len>:<data>
    ...

参数
^^^^^^^^^^

-  **<enable>**:

   -  0: 停止监控模式。
   -  1: 设置WiFi进入监控模式。

-  **<channel>**: 需要监控的信道。
-  **<min_pkg_len>**: 过滤接收的最小数据包长度。
-  **<max_pkg_len>**: 过滤接收的最大数据包长度。
-  **<pkg_len>**: 接收的数据包长度。
-  **<data>**: 接收的原始数据包，以十六进制格式显示。


注意事项
^^^^^

-  监控的信道需在通过`AT+CWCOUNTRY`_设置的信道范围内。

示例
^^^^^^^^

::

    AT+CWMONITOR=1,6

    OK

    +CWMONITOR,6,177:xxxxxxxxxxxxxx
    ...

AT+CWSTAPROTO
-----------------------------------------------------------------------
功能：查询/设置站点模式的802.11 b/g/n/ax协议标准

查询命令
^^^^^^^^^^^

**功能：**

查询站点模式的802.11 b/g/n/ax协议标准。

**命令：**

::

    AT+CWSTAPROTO?

**响应：**

::

    +CWSTAPROTO:<protocol>

    OK

设置命令
^^^^^^^^^^^

**功能：**

设置站点模式的802.11 b/g/n/ax协议标准。

**命令：**

::

    AT+CWSTAPROTO=<protocol>

**响应：**

::

    OK

参数
^^^^^^^^^^

-  **<enable>**:

   - 位0: 802.11b协议标准。

   - 位1: 802.11g协议标准。

   - 位2: 802.11n协议标准。

   - 位3: 802.11ax协议标准。


注意事项
^^^^^

-  仅在下一次连接时生效。

-  默认情况下，BFLB的PHY模式为802.11bgn/ax模式。

示例
^^^^^^^^

::

    AT+CWSTAPROTO=1

    OK

    AT+CWMODE=1

    OK

    AT+CWJAP="SSID","12345678"

    ...


AT+CWAPPROTO
-----------------------------------------------------------------------
查询/设置SoftAP模式的802.11 b/g/n/ax协议标准


查询命令
^^^^^^^^^^^

**功能：**

查询SoftAP模式的802.11 b/g/n/ax协议标准。

**命令：**

::

    AT+CWAPPROTO?

**响应：**

::

    +CWAPPROTO:<protocol>

    OK

设置命令
^^^^^^^^^^^

**功能：**

设置SoftAP模式的802.11 b/g/n/ax协议标准。

**命令：**

::

    AT+CWAPPROTO=<protocol>

**响应：**

::

    OK

参数
^^^^^^^^^^

-  **<enable>**:

   - 位0: 802.11b协议标准。

   - 位1: 802.11g协议标准。

   - 位2: 802.11n协议标准。

   - 位3: 802.11ax协议标准。


注意事项
^^^^^

-  仅在下一次连接时生效。

-  默认情况下，BFLB的PHY模式为802.11bgn/ax模式。

示例
^^^^^^^^

::

    AT+CWAPPROTO=1

    OK

    AT+CWMODE=2

    OK
    
    AT+CWSAP="AP_SSID","12345678",1,3,10,0

    ...


AT+WPS
-------------------------
启用WPS功能

设置命令
^^^^^^^^^^^

**功能：**

启用WPS功能。

**命令：**

::

    AT+WPS=<enable>[,<auth floor>]

**响应：**

::

    OK

参数
^^^^^^^^^^

-  **<enable>**:

   - 1: 启用使用PBC（按钮配置）模式的WPS（Wi-Fi保护设置）。

   - 0: 禁用使用PBC模式的WPS。

-  **<auth floor>**:

   - 0: 开放认证（默认）。

   - 1: WEP认证。
   
   - 2: WPA PSK认证。
   
   - 3: WPA2 PSK认证。

   - 4: WPA/WPA2 PSK认证。

注意事项
""""""

-  WPS只能在启用BFLB站点时使用。
-  WPS不支持WEP（有线等效隐私）加密。

示例
^^^^^^^^

::

    AT+CWMODE=1

    OK
    
    AT+WPS=1

    OK

    ...


AT+CWANTENABLE
----------------------------------------------------
启用/禁用天线分集功能。

查询命令
^^^^^^^^^^^

**功能：**

查询天线分集功能是否启用。  
**命令：**

::

    AT+CWANTENABLE?

**响应：**

::

    +CWANTENABLE:<dynamic_enable>,<static_enable>,<pin>

    OK


设置命令
^^^^^^^^^^^

**功能：**

启用天线分集功能。

**命令：**

::

    AT+CWANTENABLE=<dynamic_enable>,<static_enable>[,<pin>]

**响应：**

::

    OK

参数
^^^^^^^^^^

-  **<dynamic_enable>**:

   - 1: 启用动态天线分集功能。

   - 0: 禁用动态天线分集功能。

-  **<static_enable>**:

   - 1: 启用静态天线分集功能。

   - 0: 禁用静态天线分集功能。

-  **<pin>**: 引脚编号。

示例
^^^^^^^^

::

    AT+CWANTENABLE=1,1,0

    OK
    
    AT+RST

    OK 

    AT+CWMODE=1

    OK
    
    AT+CWJAP="SSID","password"

    OK

    ...

注意事项
^^^^^

-  此参数在重启后生效。
 

AT+CWANTNUM
----------------------------------------------------------
获取当前设备的最大天线数量。

查询命令
^^^^^^^^^^^^^

**功能：**

获取当前设备的最大天线数量。

**命令：**

::

    AT+CWANTNUM?

**响应：**

::

    +CWANTNUM:<numbers>

    OK



AT+CWANT
-------------------------------------
设置/查询当前使用的天线。

查询命令
^^^^^^^^^^^

**功能：**

查询当前使用的天线。

**命令：**

::

    AT+CWANT?

**响应：**

::

    +CWANT:<ant_id>

    OK


设置命令
^^^^^^^^^^^

**功能：**

启用自动天线分集功能。

**命令：**

::

    AT+CWANT=<ant_id>

**响应：**

::

    OK

参数
^^^^^^^^^^

-  **<ant_id>**:

   - 天线编号ID。

示例
^^^^^^^^

::

    AT+CWANT=1

    OK

    AT+CWANT=0

    OK


===========================
TCP/IP相关AT命令
===========================
.. table:: 指令列表
    :widths: 25,75
    :width: 100%
    :align: center

    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | 指令                    | 描述                                                                                                      |
    +=========================+===========================================================================================================+
    | `AT+CIPV6`_             | 启用/禁用IPv6（互联网协议第6版）网络                                                                          |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+CIFSR`_             | 获取本地IP地址和MAC地址                                                                                      |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+CIPDOMAIN`_         | 解析域名                                                                                                    |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+CIPDNS`_            | 查询/设置DNS服务器信息                                                                                      |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+CIPSTATE`_          | 获取TCP/UDP/SSL连接信息                                                                                     |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+CIPRECVBUF`_        | 查询/设置TCP/UDP/SSL接收缓冲区大小                                                                             |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+CIPSTART`_          | 建立TCP连接、UDP传输或SSL连接                                                                                  |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+CIPSTARTEX`_        | 建立具有自动分配ID的TCP连接、UDP传输或SSL连接                                                                     |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+CIPTCPOPT`_         | 查询/设置套接字选项                                                                                          |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+CIPCLOSE`_          | 关闭TCP/UDP/SSL连接                                                                                          |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+CIPSEND`_           | 在正常传输模式或Wi-Fi透传模式下发送数据                                                                           |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+CIPSENDL`_          | 在正常传输模式下并行发送长数据                                                                                   |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+CIPSENDLCFG`_       | 设置AT+CIPSENDL命令的配置                                                                                     |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+CIPSENDEX`_         | 以扩展方式在正常传输模式下发送数据                                                                                |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+CIPDINFO`_          | 设置"+IPD"消息模式                                                                                           |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+CIPMUX`_            | 启用/禁用多连接模式                                                                                          |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+CIPSERVER`_         | 删除/创建TCP/SSL服务器                                                                                        |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+CIPSERVERMAXCONN`_  | 查询/设置服务器允许的最大连接数                                                                                   |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+CIPSTO`_            | 查询/设置本地TCP服务器超时时间                                                                                   |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+SAVETRANSLINK`_     | 设置上电时是否进入Wi-Fi透传模式                                                                                   |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+CIPSNTPCFG`_        | 查询/设置时区和SNTP服务器                                                                                       |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+CIPSNTPTIME`_       | 查询SNTP时间                                                                                                 |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+CIPSNTPINTV`_       | 查询/设置SNTP时间同步间隔                                                                                        |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+CIPRECONNINTV`_     | 查询/设置Wi-Fi透传模式下TCP/UDP/SSL重新连接间隔                                                                      |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+CIPRECVMODE`_       | 查询/设置套接字接收模式                                                                                        |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+CIPRECVDATA`_       | 在被动接收模式下获取套接字数据                                                                                     |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+CIPRECVLEN`_        | 在被动接收模式下获取套接字数据长度                                                                                  |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+PING`_              | ping远程主机                                                                                                |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+CIPEVT`_            | 打开或关闭以+CIP开头的事件消息通知                                                                                 |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+CWEVT`_             | 打开或关闭以+CW开头的事件消息通知                                                                                  |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+CIPSSLCCONF`_       | 查询/设置SSL客户端                                                                                            |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+CIPSSLCSNI`_        | 查询/设置SSL客户端服务器名称                                                                                      |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+CIPSSLCALPN`_       | 查询/设置SSL客户端应用层协议协商（ALPN）                                                                             |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+CIPSSLCPSK`_        | 查询/设置字符串格式的SSL客户端预共享密钥（PSK）                                                                       |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+CIPSSLCPSKHEX`_     | 查询/设置十六进制格式的SSL客户端预共享密钥（PSK）                                                                      |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+IPERF`_             | 测试BFLB独立模式下的吞吐量                                                                                       |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+IPERFSTOP`_         | 停止BFLB的吞吐量测试                                                                                          |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+


基本AT命令描述
==============================
AT+CIPV6
-----------------------------------------------------------------------
功能：启用/禁用IPv6（互联网协议第6版）网络。

查询命令
^^^^^^^^^^^^^^^

**功能：**

查询是否启用IPv6。

**命令：**

::

    AT+CIPV6?

**响应：**

::

    +CIPV6:<enable>

    OK

设置命令
^^^^^^^^^^^^^^^

**功能：**

启用/禁用IPv6网络。

**命令：**

::

    AT+CIPV6=<enable>

**响应：**

::

    OK

参数
^^^^^^^^^^

- **<enable>**: IPv6网络状态。默认值：0。

  - 0: 禁用IPv6网络。
  - 1: 启用IPv6网络。


AT+CIFSR
-----------------------------------------------------------------------
功能：获取本地IP地址和MAC地址。

执行命令
^^^^^^^^^^^^^^^

**命令：**

::

    AT+CIFSR

**响应：**

::

    // AP模式
    // AT+CWMODE=2
    +CIFSR:APIP,<"APIP">
    +CIFSR:APIP6LL,<"APIP6LL">
    +CIFSR:APMAC,<"APMAC">

    // STA模式
    // AT+CWMODE=1
    +CIFSR:STAIP,<"STAIP">
    +CIFSR:STAIP6LL,<"STAIP6LL">
    +CIFSR:STAIP6GL,<"STAIP6GL">
    +CIFSR:STAMAC,<"STAMAC">

    OK

参数
^^^^^^^^^^

- **<\"APIP\">**: Wi-Fi软AP接口的IPv4地址
- **<”APIP6GL”>**: Wi-Fi软AP接口的全局IPv6地址
- **<\"APMAC\">**: Wi-Fi软AP接口的MAC地址
- **<\"STAIP\">**: Wi-Fi站点接口的IPv4地址
- **<”STAIP6LL”>**: Wi-Fi站点接口的链路本地IPv6地址
- **<”STAIP6GL”>**: Wi-Fi站点接口的全局IPv6地址
- **<\"STAMAC\">**: Wi-Fi站点接口的MAC地址

AT+CIPDOMAIN
------------------------------------------------------
功能：解析域名。

设置命令
^^^^^^^^^^^

**命令：**

::

    AT+CIPDOMAIN=<"domain name">[,<ip network>]

**响应：**

::

    +CIPDOMAIN:<"IP address">

    OK

参数
^^^^^^^^^^

-  **<\"domain name\">**: 域名。
-  **<ip network>**: 首选IP网络。默认值：1。

   - 1: 优先解析IPv4地址
   - 2: 仅解析IPv4地址
   - 3: 仅解析IPv6地址

-  **<\"IP address\">**: 解析出的IPv4地址或IPv6地址。

示例
^^^^^^^^

::

    AT+CWMODE=1                       // 设置站点模式
    AT+CWJAP="SSID","password"        // 接入互联网
    AT+CIPDOMAIN="www.google.com"   // 域名解析功能

    // 仅解析IPv4地址的域名解析功能
    AT+CIPDOMAIN="www.google.com",2

    // 仅解析IPv6地址的域名解析功能
    AT+CIPDOMAIN="www.google.com",3

AT+CIPDNS
------------------------------------------------------
功能：设置/查询当前DNS服务器信息。

查询命令
^^^^^^^^^^^^^^^

**功能：**

查询当前DNS服务器信息。

**命令：**

::

    AT+CIPDNS?

**响应：**

::

    +CIPDNS:<enable>[,<"DNS IP1">][,<"DNS IP2">][,<"DNS IP3">]
    
    OK

设置命令
^^^^^^^^^^^

**功能：**

设置DNS服务器信息。

**命令：**

::

    AT+CIPDNS=<enable>[,<"DNS IP1">][,<"DNS IP2">][,<"DNS IP3">]

**响应：**

::

    OK

或

::

    ERROR

参数
^^^^^^^^^^

-  **<enable>**: 域名。

   - 0: 启用从DHCP自动获取DNS服务器设置。DNS将恢复为208.67.222.222和8.8.8.8。
     仅当BFLB站点完成DHCP过程后，BFLB站点的DNS服务器才能更新。
   - 1: 启用手动DNS服务器设置。如果未为<DNS IPx>设置值，默认将使用208.67.222.222和8.8.8.8。

-  **<”DNS IP1”>**: 第一个DNS服务器IP地址。对于设置命令，仅当将<enable>设置为1（即启用手动DNS设置）时，此参数才有效。如果将<enable>设置为1并为此参数设置值，则运行查询命令时，BLC-AT将返回此参数作为当前DNS设置。

-  **<”DNS IP2”>**: 第二个DNS服务器IP地址。对于设置命令，仅当将<enable>设置为1（即启用手动DNS设置）时，此参数才有效。如果将<enable>设置为1并为此参数设置值，则运行查询命令时，BLC-AT将返回此参数作为当前DNS设置。

-  **<”DNS IP3”>**: 第三个DNS服务器IP地址。对于设置命令，仅当将<enable>设置为1（即启用手动DNS设置）时，此参数才有效。如果将<enable>设置为1并为此参数设置值，则运行查询命令时，BLC-AT将返回此参数作为当前DNS设置。


注意事项
^^^^^^^^^^

- 如果AT+SYSSTORE=1，配置更改将保存在NVS区域。
- 三个参数不能设置为同一服务器。
- 当<enable>设置为1时，DNS服务器可能会根据BFLB连接的路由器配置而变化。


示例
^^^^^^^^

::

    AT+CIPDNS=0
    AT+CIPDNS=1,"114.114.114.114"

AT+CIPSTATE
----------------------------------------------------------------------------------------
功能：获取TCP/UDP/SSL连接信息。

查询命令
^^^^^^^^^^^^^^^

**命令：**

::

    AT+CIPSTATE?

**响应：**

当存在连接时，AT返回：

::

    +CIPSTATE:<link ID>,<"type">,<"remote IP">,<remote port>,<local port>,<tetype>

    OK

当无连接时，AT返回：

::

    OK

参数
^^^^^^^^^^

-  **<link ID>**: 连接ID（0~4），用于多连接场景。
-  **<\"type\">**: 表示传输类型的字符串参数："TCP"、"TCPv6"、"UDP"、"UDPv6"、"SSL"或"SSLv6"。
-  **<\"remote IP\">**: 远程IPv4地址的字符串参数。
-  **<remote port>**: 远程端口号。
-  **<local port>**: 本地端口号。
-  **<tetype>**:

   -  0: BL61x作为客户端运行。
   -  1: BL61x作为服务器运行。

AT+CIPRECVBUF
----------------------------------------------------------------------------------------
功能：查询/设置TCP/UDP/SSL接收缓冲区大小。

设置命令
^^^^^^^^^^^^^^^

**命令：**

::
    
    // 单连接（AT+CIPMUX=0）:
    AT+CIPRECVBUF=<size>

    // 多连接（AT+CIPMUX=1）:
    AT+CIPRECVBUF=<linkid>,<size>

**响应：**

此命令需在对应ID无连接时使用，否则返回ERROR。

::

    +CIPRECVBUF

    OK

参数
^^^^^^^^^^

-  **<linkid>**: 连接ID（0~4），用于多连接场景。
-  **<size>**: 设置缓冲区大小，单位字节。


查询命令
^^^^^^^^^^^^^^^

**命令：**

::
    
    // 单连接（AT+CIPMUX=0）:
    AT+CIPRECVBUF?

    // 多连接（AT+CIPMUX=1）:
    AT+CIPRECVBUF=<linkid>?

**响应：**

返回对应linkid的缓冲区大小，默认缓冲区大小为2920。

::

    +CIPRECVBUF:<size>

    OK


AT+CIPSTART
--------------------------------------------------------------------------------------------
功能：建立TCP连接、UDP传输或SSL连接。

建立TCP连接
^^^^^^^^^^^^^^^^^^^^^^^^

设置命令
""""""""""""

**命令：**

::

    // 单连接（AT+CIPMUX=0）:
    AT+CIPSTART=<"type">,<"remote host">,<remote port>[,<keep_alive>][,<"local IP">][,<timeout>]

    // 多连接（AT+CIPMUX=1）:
    AT+CIPSTART=<link ID>,<"type">,<"remote host">,<remote port>[,<keep_alive>][,<"local IP">][,<timeout>]

**响应：**

单连接时返回：

::

    +CIP:CONNECTED

    OK

多连接时返回：

::

    +CIP:<link ID>,CONNECTED

    OK

参数
"""""""""""

-  **<link ID>**: 网络连接ID（0~4），用于多连接场景。
-  **<\"type\">**: 表示传输类型的字符串参数："TCP"、"TCPv6"、"UDP"、"UDPv6"、"SSL"、"SSLv6"。默认值："TCP"。
-  **<\"remote host\">**: 远程主机的IPv4/IPv6地址或域名，最大长度64字节。若需使用长度超过64字节的域名，需先用AT+CIPDOMAIN命令获取域名对应的IP地址，再使用IP地址建立连接。
-  **<remote port>**: 远程端口号。
-  **<keep_alive>**: 为套接字配置`SO_KEEPALIVE <https://man7.org/linux/man-pages/man7/socket.7.html#SO_KEEPALIVE>`_选项，单位：秒。

   - 范围：[0,7200]。

     - 0: 禁用保活功能（默认）。
     - 1~7200: 启用保活功能。`TCP_KEEPIDLE <https://man7.org/linux/man-pages/man7/tcp.7.html#TCP_KEEPIDLE>`_值为**<keep_alive>**，`TCP_KEEPINTVL <https://man7.org/linux/man-pages/man7/tcp.7.html#TCP_KEEPINTVL>`_值为1，`TCP_KEEPCNT <https://man7.org/linux/man-pages/man7/tcp.7.html#TCP_KEEPCNT>`_值为3。

   - 此命令的该参数与AT+CIPTCPOPT命令的``<keep_alive>``参数功能相同，两者中后设置的值优先。若省略或未设置，默认使用最后一次配置的值。

-  **<\"local IP\">**: 连接绑定的本地IPv4或IPv6地址，适用于多网络接口或多IP地址场景。默认禁用，如需使用需显式指定，允许为空。
-  **<timeout>**: 命令超时时间，单位：毫秒。默认值：0，范围：[0,20000]。设置为0时，超时时间由网络和lwIP协议栈决定；非零值时，命令将在指定超时时间内返回。

注意事项
""""""

- 基于IPv6网络建立TCP连接需执行以下操作：

    - 确保AP支持IPv6
    - 设置AT+CIPV6=1
    - 通过AT+CWJAP命令获取IPv6地址
    - （可选）使用AT+CIPSTA?命令检查BFLB是否已获取IPv6地址


示例
"""""""""

::

    AT+CIPSTART="TCP","192.168.101.110",1000
    AT+CIPSTART="TCP","192.168.101.110",2500,60
    AT+CIPSTART="TCP","192.168.101.110",1000,,"192.168.101.100"
    AT+CIPSTART="TCPv6","test-ipv6.com",80
    AT+CIPSTART="TCPv6","fe80::860d:8eff:fe9d:cd90",1000,,"fe80::411c:1fdb:22a6:4d24"

查询命令
""""""""""""""

**命令：**

::

    AT+CIPSTART?

**响应：**

单连接时返回：

::

    +CIPSTART:<link ID>,<"type">,<"ip">,<remote_port>,<local_port>,<tetype>

    OK

参数
^^^^^^^^^^

-  **<link ID>**: 连接ID（0~4），用于多连接场景。
-  **<\"type\">**: 表示传输类型的字符串参数："TCP"、"TCPv6"、"UDP"、"UDPv6"、"SSL"或"SSLv6"。
-  **<\"remote IP\">**: 远程IPv4地址的字符串参数。
-  **<remote port>**: 远程端口号。
-  **<local port>**: 本地端口号。
-  **<tetype>**:

   -  0: BL61x作为客户端运行。
   -  1: BL61x作为服务器运行。

AT+CIPSTARTEX
--------------------------------------------------------------------------------------------------------------------------------
功能：建立具有自动分配ID的TCP连接、UDP传输或SSL连接。

此命令与AT+CIPSTART类似，但在多连接模式（AT+CIPMUX=1）下无需手动分配ID，系统会为新连接自动分配ID。

[数据模式专用] +++ : 退出数据模式
-------------------------------------------------------------------

特殊执行命令
^^^^^^^^^^^^^^^^^^^^^^^^

**功能：**

退出数据模式并进入命令模式。

**命令：**

::

    // 仅用于数据模式
    +++

注意事项
""""""

- 此特殊执行命令由三个连续的``+``字符（ASCII码0x2b）组成，命令尾部不附加CR-LF。
- 第一个``+``字符前需间隔超过20毫秒，第三个``+``字符后需间隔超过20毫秒，三个``+``字符之间间隔需小于20毫秒，否则``+``字符将作为普通数据发送。
- 此命令无响应。
- 发送下一条AT命令前请至少等待1秒。

AT+CIPTCPOPT
-------------------------------------------------------------
功能：查询/设置套接字选项。

查询命令
^^^^^^^^^^^^^

**功能：**

查询当前套接字选项。

**命令：**

::

    AT+CIPTCPOPT?

**响应：**

::

    +CIPTCPOPT:<link_id>,<so_linger>,<tcp_nodelay>,<so_sndtimeo>,<keepalive>

    OK

设置命令
^^^^^^^^^^^

**命令：**

::

    // 单TCP连接（AT+CIPMUX=0）:
    AT+CIPTCPOPT=[<so_linger>],[<tcp_nodelay>],[<so_sndtimeo>],[<keepalive>]

    // 多TCP连接（AT+CIPMUX=1）:
    AT+CIPTCPOPT=<link ID>,[<so_linger>],[<tcp_nodelay>],[<so_sndtimeo>],[<keepalive>]

**响应：**

::

    OK

或

::

    ERROR

参数
^^^^^^^^^^

-  **<link_id>**: 连接ID（0 ~ max），多连接场景中若值为max，表示所有连接。默认max为5。
-  **<so_linger>**: 为套接字配置``SO_LINGER``选项（参考`SO_LINGER说明 <https://man7.org/linux/man-pages/man7/socket.7.html#SO_LINGER>`_），单位：秒。默认值：-1。

   - = -1: 关闭
   - = 0: 开启，延迟时间=0
   - > 0: 开启，延迟时间=<so_linger>

-  **<tcp_nodelay>**: 为套接字配置``TCP_NODELAY``选项（参考`TCP_NODELAY说明 <https://man7.org/linux/man-pages/man7/tcp.7.html#TCP_NODELAY>`_），默认值：0。

   - 0: 禁用TCP_NODELAY
   - 1: 启用TCP_NODELAY

-  **<so_sndtimeo>**: 为套接字配置``SO_SNDTIMEO``选项（参考`SO_SNDTIMEO说明 <https://man7.org/linux/man-pages/man7/socket.7.html#SO_SNDTIMEO>`_），单位：毫秒。默认值：0。
-  **<keepalive>**: 为套接字配置`SO_KEEPALIVE <https://man7.org/linux/man-pages/man7/socket.7.html#SO_KEEPALIVE>`_选项，单位：秒。

   - 范围：[0,7200]。

     - 0: 禁用保活功能（默认）。
     - 1~7200: 启用保活功能。`TCP_KEEPIDLE <https://man7.org/linux/man-pages/man7/tcp.7.html#TCP_KEEPIDLE>`_值为**<keepalive>**，`TCP_KEEPINTVL <https://man7.org/linux/man-pages/man7/tcp.7.html#TCP_KEEPINTVL>`_值为1，`TCP_KEEPCNT <https://man7.org/linux/man-pages/man7/tcp.7.html#TCP_KEEPCNT>`_值为3。

   - 此命令的该参数与AT+CIPTCPOPT命令的``<keepalive>``参数功能相同，两者中后设置的值优先。若省略或未设置，默认使用最后一次配置的值。低功耗模式下设置较小的保活值会导致功耗增加。

注意事项
^^^^^

- 配置这些套接字选项前，**请确保充分理解其功能及配置后的潜在影响**。
- 不建议将SO_LINGER选项设置为较大值。例如，若设置SO_LINGER值为60，当BL61x因网络问题无法接收远程TCP对等端的FIN包时，AT+CIPCLOSE命令将阻塞60秒，导致BL61x无法响应其他AT命令。因此，建议保持SO_LINGER选项的默认值。
- TCP_NODELAY选项适用于吞吐量小但实时性要求高的场景。启用此选项后，LwIP会加速TCP传输，但在网络环境较差时，重传会导致吞吐量下降。因此，建议保持TCP_NODELAY选项的默认值。
- SO_SNDTIMEO选项用于AT+CIPSTART命令未配置keepalive参数的场景。配置此选项后，AT+CIPSEND、AT+CIPSENDL和AT+CIPSENDEX命令将在该超时时间内退出，无论数据是否发送成功。建议将SO_SNDTIMEO设置为5~10秒。
- SO_KEEPALIVE选项用于主动定期检测连接是否断开，通常建议AT作为TCP服务器时配置此选项。配置后会消耗额外网络带宽，建议SO_KEEPALIVE值不小于60秒。低功耗模式下设置较小的保活值会导致功耗增加。

AT+CIPCLOSE
-----------------------------------------------------------
功能：关闭TCP/UDP/SSL连接。

设置命令
^^^^^^^^^^^^^

**功能：**

在多连接模式下关闭TCP/UDP/SSL连接。

**命令：**

::

    AT+CIPCLOSE=<link ID>

**响应：**

::

    <link ID>,CLOSED

    OK

执行命令
^^^^^^^^^^^^^^^^^

**功能：**

在单连接模式下关闭TCP/UDP/SSL连接。

::

    AT+CIPCLOSE

**响应：**

::

    CLOSED

    OK

参数
^^^^^^^^^^

-  **<link ID>**: 需关闭的连接ID。若设置为5，将关闭所有连接。

AT+CIPSEND
-----------------------------------------------------------------------------------------------------------------
功能：在正常传输模式或Wi-Fi透传模式下发送数据。

设置命令
^^^^^^^^^^^

**功能：**

在正常传输模式下设置待发送数据长度。若需发送的数据长度超过8192字节，请使用AT+CIPSENDL命令。

**命令：**

::

    // 单连接：(AT+CIPMUX=0)
    AT+CIPSEND=<length>

    // 多连接：(AT+CIPMUX=1)
    AT+CIPSEND=<link ID>,<length>

    // UDP传输可设置远程主机和端口：
    AT+CIPSEND=[<link ID>,]<length>[,<"remote host">,<remote port>]

**响应：**

::

    OK

    >

此响应表示AT已准备好接收串口数据。输入数据后，当数据长度达到``<length>``值时，开始传输数据。

若连接未建立或在数据传输过程中中断，系统返回：

::

    ERROR

若数据已成功发送至协议栈（不表示数据已发送至对端），系统返回：

::

    SEND OK

执行命令
^^^^^^^^^^^^^^^

**功能：**

进入Wi-Fi透传模式。

**命令：**

::

    AT+CIPSEND

**响应：**

::

    OK
    >

或

::

    ERROR

进入Wi-Fi透传模式后，BL61x每次最多可接收8192字节、发送2920字节。若接收数据达到或超过2920字节，将立即以2920字节为块发送；否则等待20毫秒后发送（可通过AT+TRANSINTVL命令配置此间隔）。当接收到包含+++的单个数据包时，BL61x将退出Wi-Fi透传模式下的数据发送模式。发送下一条AT命令前请至少等待1秒。

此命令仅适用于单连接的Wi-Fi透传模式。对于UDP透传，使用AT+CIPSTART时``<mode>``参数需为0。

参数
^^^^^^^^^^

-  **<link ID>**: 连接ID（0~4），用于多连接场景。
-  **<length>**: 数据长度，最大值：8192字节。
-  **<\"remote host\">**: 远程主机的IPv4地址或域名，UDP传输时可设置。
-  **<remote port>**: 远程端口号。

注意事项
^^^^^

- 可使用AT+CIPTCPOPT命令为每个TCP连接配置套接字选项。例如，将<so_sndtimeo>设置为5000，可使TCP发送操作在5秒内返回结果（无论成功或失败），节省MCU等待AT命令响应的时间。

AT+CIPSENDL
--------------------------------------------------------------------------------------------------
功能：在正常传输模式下并行发送长数据。

设置命令
^^^^^^^^^^^

**功能：**

在正常传输模式下设置待发送数据长度，然后并行向远程主机发送数据（AT命令端口与AT向远程主机发送数据并行接收数据）。可使用AT+CIPSENDLCFG命令配置此命令。若需发送的数据长度小于8192字节，也可使用AT+CIPSEND命令。

**命令：**

::

    // 单连接：(AT+CIPMUX=0)
    AT+CIPSENDL=<length>

    // 多连接：(AT+CIPMUX=1)
    AT+CIPSENDL=<link ID>,<length>

    // UDP传输可设置远程主机和端口：
    AT+CIPSENDL=[<link ID>,]<length>[,<"remote host">,<remote port>]

**响应：**

::

    OK

    >

此响应表示AT进入数据模式，AT命令端口准备好接收数据。此时可输入数据，端口一旦接收数据，将推送到底层协议栈并开始传输。

若传输开始，系统根据AT+CIPSENDLCFG配置报告消息：

::

    +CIPSENDL:<had sent len>,<port recv len>

若传输被+++命令取消，系统返回：

::

    SEND CANCELLED

若未发送完所有数据，系统最终返回：

::

    SEND FAIL

若数据已成功发送至协议栈（不表示数据已发送至对端），系统最终返回：

::

    SEND OK

当连接断开时，可发送+++命令取消传输，BL61x将退出数据模式；否则数据模式将持续至AT命令端口接收指定``<length>``的全部数据。

参数
^^^^^^^^^^

-  **<link ID>**: 连接ID（0~4），用于多连接场景。
-  **<length>**: 数据长度，最大值：2 :sup:`31` - 1字节。
-  **<\"remote host\">**: 远程主机的IPv4地址或域名，UDP传输时可设置。
-  **<remote port>**: 远程端口号。
-  **<had sent len>**: 成功发送至底层协议栈的数据长度。
-  **<port recv len>**: AT命令端口接收的数据长度。

注意事项
^^^^^

- 建议使用UART流控制，因为若UART接收数据速率超过网络发送速率，可能发生数据丢失。
- 可使用AT+CIPTCPOPT命令为每个TCP连接配置套接字选项。例如，将<so_sndtimeo>设置为5000，可使TCP发送操作在5秒内返回结果（无论成功或失败），节省MCU等待AT命令响应的时间。

AT+CIPSENDLCFG
------------------------------------------------------------------------------------------------------
功能：设置AT+CIPSENDL命令的配置。

查询命令
^^^^^^^^^^^^^

**功能：**

查询AT+CIPSENDL的配置。

**命令：**

::

    AT+CIPSENDLCFG?

**响应：**

::

    +CIPSENDLCFG:<report size>,<transmit size>

    OK

设置命令
^^^^^^^^^^^

**功能：**

设置AT+CIPSENDL的配置。

**命令：**

::

    AT+CIPSENDLCFG=<report size>[,<transmit size>]

**响应：**

::

    OK

参数
^^^^^^^^^^

-  **<report size>**: AT+CIPSENDL的报告块大小，默认值：1024，范围：[100, 2 :sup:`20`]。例如，设置``<report size>``为100，AT+CIPSENDL响应中的``<had sent len>``报告序列为（100, 200, 300, 400, ...）。最终的``<had sent len>``报告始终等于已发送的数据长度。
-  **<transmit size>**: AT+CIPSENDL的传输块大小，指定发送至底层协议栈的数据块大小，默认值：2920，范围：[100, 2920]。若BL61x接收的数据达到或超过``<transmit size>``字节，将立即以``<transmit size>``字节为块发送；否则等待20毫秒后发送（可通过AT+TRANSINTVL命令配置此间隔）。

注意事项
""""""

- 对于吞吐量小但实时性要求高的设备，建议设置较小的``<transmit size>``，同时建议通过AT+CIPTCPOPT命令设置``TCP_NODELAY``。
- 对于吞吐量大的设备，建议设置较大的``<transmit size>``。

AT+CIPSENDEX
----------------------------------------------------------------------------------------------------
功能：以扩展方式在正常传输模式下发送数据。

设置命令
^^^^^^^^^^^

**功能：**

在正常传输模式下设置待发送数据长度，或使用``\0``（0x5c, 0x30 ASCII）触发数据传输。

**命令：**

::

    // 单连接：(AT+CIPMUX=0)
    AT+CIPSENDEX=<length>

    // 多连接：(AT+CIPMUX=1)
    AT+CIPSENDEX=<link ID>,<length>

    // UDP传输可设置远程主机和端口：
    AT+CIPSENDEX=[<link ID>,]<length>[,<"remote host">,<remote port>]

**响应：**

::

    OK

    >

此响应表示AT准备好接收数据。需输入指定长度的数据，当数据长度达到``<length>``值或数据中出现字符串``\0``时，开始传输。

若连接未建立或传输过程中断，系统返回：

::

    ERROR

若数据已成功发送至协议栈（不表示数据已发送至对端），系统返回：

::

    SEND OK

参数
^^^^^^^^^^

-  **<link ID>**: 连接ID（0~4），用于多连接场景。
-  **<length>**: 数据长度，最大值：8192字节。
-  **<\"remote host\">**: 远程主机的IPv4地址或域名，UDP传输时可设置。
-  **<remote port>**: UDP传输时可设置的远程端口号。

注意事项
^^^^^^

- 当满足数据长度要求或出现字符串``\0``（ASCII码0x5c、0x30）时，开始传输数据并返回正常命令模式等待下一条AT命令。
- 若数据包含``\<any>``，表示删除反斜杠符号，仅使用``<any>``字符。
- 发送``\0``时，需用反斜杠转义为``\\0``。
- 可使用AT+CIPTCPOPT命令为每个TCP连接配置套接字选项。例如，将<so_sndtimeo>设置为5000，可使TCP发送操作在5秒内返回结果（无论成功或失败），节省MCU等待AT命令响应的时间。

AT+CIPDINFO
------------------------------------------------------
功能：设置“+IPD”消息模式。

查询命令
^^^^^^^^^^^^^

**命令：**

::

    AT+CIPDINFO?

**响应：**

::

    +CIPDINFO:true

    OK

或

::

    +CIPDINFO:false

    OK

设置命令
^^^^^^^^^^^

**命令：**

::

    AT+CIPDINFO=<mode>

**响应：**

::

    OK

参数
^^^^^^^^^^

-  **<mode>**:

   -  0: 在“+IPD”消息中不显示远程主机和端口。
   -  1: 在“+IPD”消息中显示远程主机和端口。

示例
^^^^^^^^

::

    AT+CIPDINFO=1

AT+CIPMUX
----------------------------------------------------------------
功能：启用/禁用多连接。

查询命令
^^^^^^^^^^^^^

**功能：**

查询连接类型。

**命令：**

::

    AT+CIPMUX?

**响应：**

::

    +CIPMUX:<mode>

    OK

设置命令
^^^^^^^^^^^

**功能：**

设置连接类型。

**命令：**

::

    AT+CIPMUX=<mode>

**响应：**

::

    OK

参数
^^^^^^^^^^

-  **<mode>**: 连接模式，默认值：0。

   -  0: 单连接。
   -  1: 多连接。

注意事项
^^^^^

- 此模式需在所有连接断开后才能更改。
- 若TCP/SSL服务器运行时设置单连接模式，需先删除服务器（AT+CIPSERVER=0）。

示例
^^^^^^^^

::

    AT+CIPMUX=1

AT+CIPSERVER
--------------------------------------------------------------
功能：删除/创建TCP/SSL服务器。

查询命令
^^^^^^^^^^^^^

**功能：**

查询TCP/SSL服务器状态。

**命令：**

::

    AT+CIPSERVER?

**响应：**

::

    +CIPSERVER:<mode>[,<port>,<"type">][,<CA enable>][,<keepalive>]

    OK

设置命令
^^^^^^^^^^^

**命令：**

::

    AT+CIPSERVER=<mode>[,<param2>][,<"type">][,<CA enable>][,<keepalive>]

**响应：**

::

    OK

参数
^^^^^^^^^^

-  **<mode>**:

   -  0: 删除服务器。
   -  1: 创建服务器。

-  **<param2>**: 含义随参数``<mode>``不同而变化：

  - 若``<mode>``为1，``<param2>``表示端口号，默认值：333。
  - 若``<mode>``为0，``<param2>``表示服务器是否关闭所有连接，默认值：0。

    - 0: 关闭服务器并保留现有连接。
    - 1: 关闭服务器并关闭所有连接。

-  **<\"type\">**: 服务器类型："TCP", "TCPv6", "SSL", 或 "SSLv6"，默认值："TCP"。
-  **<CA enable>**:

   -  0: 禁用CA。
   -  1: 启用CA。
   
-  **<keepalive>**: 为套接字配置`SO_KEEPALIVE <https://man7.org/linux/man-pages/man7/socket.7.html#SO_KEEPALIVE>`_选项，单位：秒。

   - 范围：[0,7200]。

     - 0: 禁用保活功能（默认）。
     - 1~7200: 启用保活功能。`TCP_KEEPIDLE <https://man7.org/linux/man-pages/man7/tcp.7.html#TCP_KEEPIDLE>`_值为**<keepalive>**，`TCP_KEEPINTVL <https://man7.org/linux/man-pages/man7/tcp.7.html#TCP_KEEPINTVL>`_值为1，`TCP_KEEPCNT <https://man7.org/linux/man-pages/man7/tcp.7.html#TCP_KEEPCNT>`_值为3。

   - 此命令的该参数与AT+CIPTCPOPT命令的``<keepalive>``参数功能相同，两者中后设置的值优先。若省略或未设置，默认使用最后一次配置的值。低功耗模式下设置较小的保活值会导致功耗增加。

注意事项
^^^^^

- 仅在多连接模式（AT+CIPMUX=1）下可创建TCP/SSL服务器。
- 创建服务器时自动创建服务器监控器，最多只能创建一个服务器。
- 客户端连接服务器时将占用一个连接并分配ID。
- 删除服务器时必须省略参数``<\"type\">``和``<CA enable>``。

示例
^^^^^^^^

::

    // 创建TCP服务器
    AT+CIPMUX=1
    AT+CIPSERVER=1,80

    // 创建SSL服务器
    AT+CIPMUX=1
    AT+CIPSERVER=1,443,"SSL",1

    // 删除服务器并关闭所有客户端
    AT+CIPSERVER=0,1

AT+CIPSERVERMAXCONN
---------------------------------------------------------------------------------------------
功能：查询/设置服务器允许的最大连接数。

查询命令
^^^^^^^^^^^^^

**功能：**

获取TCP/SSL服务器允许的最大客户端连接数。

**命令：**

::

    AT+CIPSERVERMAXCONN?

**响应：**

::

    +CIPSERVERMAXCONN:<num>

    OK

设置命令
^^^^^^^^^^^

**功能：**

设置TCP/SSL服务器允许的最大客户端连接数。

**命令：**

::

    AT+CIPSERVERMAXCONN=<num>

**响应：**

::

    OK

参数
^^^^^^^^^^

-  **<num>**: 允许连接到TCP/SSL服务器的最大客户端数，范围：[1,5]。如需更改此范围上限，请参考AT+CIPSTART命令中``<link ID>``参数的说明。

注意事项
^^^^^

- 应在创建服务器前调用``AT+CIPSERVERMAXCONN=<num>``命令。

示例
^^^^^^^^

::

    AT+CIPMUX=1
    AT+CIPSERVERMAXCONN=2
    AT+CIPSERVER=1,80

AT+CIPSTO
-----------------------------------------------------------------------
功能：查询/设置本地TCP/SSL服务器超时时间。

查询命令
^^^^^^^^^^^^^

**功能：**

查询本地TCP/SSL服务器超时时间。

**命令：**

::

    AT+CIPSTO?

**响应：**

::

    +CIPSTO:<time>

    OK

设置命令
^^^^^^^^^^^

**功能：**

设置本地TCP/SSL服务器超时时间。

**命令：**

::

    AT+CIPSTO=<time>

**响应：**

::

    OK

参数
^^^^^^^^^^

-  **<time>**: 本地TCP/SSL服务器超时时间，单位：秒，范围：[0,7200]。

注意事项
^^^^^

- 若TCP/SSL客户端在``<time>``内未与BL61x服务器通信，服务器将终止该连接。
- 若设置``<time>``为0，连接永不超时，不建议此配置。
- 若客户端与服务器在设定时间内发起通信，定时器将重启。超时后客户端将被关闭。

示例
^^^^^^^^

::

    AT+CIPMUX=1
    AT+CIPSERVER=1,1001
    AT+CIPSTO=10

AT+SAVETRANSLINK
----------------------------------------------------------------------------------------------------
功能：设置上电时是否进入Wi-Fi透传模式。

针对TCP/SSL单连接
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

设置命令
""""""""""""""

**命令：**

::

    AT+SAVETRANSLINK=<mode>,<"remote host">,<remote port>[,<"type">,<keep alive>]

**响应：**

::

    OK

参数
""""""""""""""

-  **<mode>**:

   -  0: BL61x上电后不进入Wi-Fi透传模式。
   -  1: BL61x上电后进入Wi-Fi透传模式。

-  **<\"remote host\">**: 字符串参数，表示远程主机的IPv4地址或域名。
-  **<remote port>**: 远程端口号。
-  **<\"type\">**: 字符串参数，表示传输类型："TCP"、"TCPv6"、"SSL"或"SSLv6"，默认值："TCP"。
-  **<keep alive>**: TCP保活间隔，默认值：0。

   -  0: 禁用保活功能。
   -  1~7200: 检测间隔，单位：秒。

注意事项
"""""""

-  此命令会将Wi-Fi透传模式配置保存到易失闪存区域。若将``<mode>``设为1，BL61x设备在后续任何上电周期都会进入Wi-Fi透传模式。配置在BL61x重启后生效。
-  只要远程主机和端口有效，配置就会保存到闪存中。

示例
""""""""

::

    AT+SAVETRANSLINK=1,"192.168.6.110",1002,"TCP"
    AT+SAVETRANSLINK=1,"www.google.com",443,"SSL"
    AT+SAVETRANSLINK=1,"240e:3a1:2070:11c0:55ce:4e19:9649:b75",8080,"TCPv6"
    AT+SAVETRANSLINK=1,"240e:3a1:2070:11c0:55ce:4e19:9649:b75",8080,"SSLv6"

针对UDP传输
^^^^^^^^^^^^^^^^^^^^

设置命令
""""""""""""""

**命令：**

::

    AT+SAVETRANSLINK=<mode>,<"remote host">,<remote port>,[<"type">,<local port>]

**响应：**

::

    OK

参数
""""""""""""""

-  **<mode>**:

   -  0: BL61x上电后不进入Wi-Fi透传模式。
   -  1: BL61x上电后进入Wi-Fi透传模式。

-  **<\"remote host\">**: 字符串参数，表示远程主机的IPv4地址或域名。
-  **<remote port>**: 远程端口号。
-  **<\"type\">**: 字符串参数，表示传输类型："UDP"或"UDPv6"，默认值："TCP"。
-  **<local port>**: 上电启用UDP Wi-Fi透传时的本地端口。

注意事项
"""""""

-  此命令会将Wi-Fi透传模式配置保存到易失闪存区域。若将``<mode>``设为1，BL61x设备在后续任何上电周期都会进入Wi-Fi透传模式。配置在BL61x重启后生效。
-  只要远程主机和端口有效，配置就会保存到闪存中。

示例
"""""""""

::

    AT+SAVETRANSLINK=1,"192.168.6.110",1002,"UDP",1005
    AT+SAVETRANSLINK=1,"240e:3a1:2070:11c0:55ce:4e19:9649:b75",8081,"UDPv6",1005

AT+CIPSNTPCFG
----------------------------------------------------------------------------
功能：查询/设置时区和SNTP服务器。

查询命令
^^^^^^^^^^^^^

**命令：**

::

    AT+CIPSNTPCFG?

**响应：**

::

    +CIPSNTPCFG:<enable>,<timezone>,<SNTP server1>[,<SNTP server2>,<SNTP server3>]

    OK

设置命令
^^^^^^^^^^^

**命令：**

::

    AT+CIPSNTPCFG=<enable>,<timezone>[,<SNTP server1>,<SNTP server2>,<SNTP server3>]

**响应：**

::

    OK

参数
^^^^^^^^^^

-  **<enable>**: 配置SNTP服务器：

   -  1: 配置SNTP服务器。
   -  0: 不配置SNTP服务器。

-  **<timezone>**: 支持以下两种格式：

   -  第一种格式范围是[-12,14]，它通过与协调世界时(UTC)的**整小时**偏移量来标记大多数时区(`UTC–12:00 <https://en.wikipedia.org/wiki/UTC%E2%88%9212:00>`__到`UTC+14:00 <https://en.wikipedia.org/wiki/UTC%2B14:00>`_)。
   -  第二种格式是``UTC offset``。``UTC offset``指定了必须添加到UTC时间以获得本地时间值的时间值。它的语法类似于``[+|-][hh]mm``。如果本地时区在本初子午线以西，则为负值；如果在以东，则为正值。小时(hh)必须在-12到14之间，分钟(mm)在0到59之间。例如，如果要将时区设置为新西兰(查塔姆群岛)，即``UTC+12:45``，则应将参数``<timezone>``设置为``1245``。更多信息请参考`UTC offset wiki <https://en.wikipedia.org/wiki/Time_zone#List_of_UTC_offsets>`_。

-  **[<SNTP server1>]**: 第一个SNTP服务器。
-  **[<SNTP server2>]**: 第二个SNTP服务器。
-  **[<SNTP server3>]**: 第三个SNTP服务器。

注意事项
^^^^^

-  如果未配置三个SNTP服务器，将使用以下默认服务器之一："cn.ntp.org.cn"、"ntp.sjtu.edu.cn"和"us.pool.ntp.org"。
-  对于查询命令，响应中的``<timezone>``参数可能与设置命令中的``<timezone>``参数不同。因为``<timezone>``参数支持第二种``UTC offset``格式，例如，设置``AT+CIPSNTPCFG=1,015``，对于查询命令，BL61x-AT会忽略``<timezone>``参数的前导零，有效值为``15``。它不属于第一种格式，因此根据第二种``UTC offset``格式解析，即``UTC+00:15``，即在响应中``timezone``为0。

示例
^^^^^^^^

::

    // 启用SNTP服务器，将时区设置为美国纽约(UTC–05:00)
    AT+CIPSNTPCFG=1,-5,"0.pool.ntp.org","time.google.com"
    或
    AT+CIPSNTPCFG=1,-500,"0.pool.ntp.org","time.google.com"

    // 启用SNTP服务器，将时区设置为新西兰(查塔姆群岛，UTC+12:45)
    AT+CIPSNTPCFG=1,1245,"0.pool.ntp.org","time.google.com"

AT+CIPSNTPTIME
-----------------------------------------------------
功能：查询SNTP时间。

查询命令
^^^^^^^^^^^^^

**命令：**

::

    AT+CIPSNTPTIME?

**响应：**

::

    +CIPSNTPTIME:<asctime style time>

    OK

注意事项
^^^^^

-  asctime风格的时间在`asctime man page <https://linux.die.net/man/3/asctime>`_中定义。
-  当BL61x进入轻睡眠或深度睡眠模式然后唤醒时，系统时间可能变得不准确。建议重新发送AT+CIPSNTPCFG命令从NTP服务器获取新时间。

示例
^^^^^^^^

::

    AT+CWMODE=1
    AT+CWJAP="AP_TEST","1234567890"
    AT+CIPSNTPCFG=1,-5,"0.pool.ntp.org","time.google.com"
    AT+CIPSNTPTIME?
    +CIPSNTPTIME:Tue Oct 19 17:47:56 2021

    OK

    或

    AT+CWMODE=1
    AT+CWJAP="AP_TEST","1234567890"
    AT+CIPSNTPCFG=1,530
    AT+CIPSNTPTIME?
    +CIPSNTPTIME:Tue Oct 19 15:17:56 2021

    OK

AT+CIPSNTPINTV
----------------------------------------------------------------------------------
功能：查询/设置SNTP时间同步间隔。

查询命令
^^^^^^^^^^^^^

**命令：**

::

    AT+CIPSNTPINTV?

**响应：**

::

    +CIPSNTPINTV:<interval second>

    OK

设置命令
^^^^^^^^^^^

**命令：**

::

    AT+CIPSNTPINTV=<interval second>

**响应：**

::

    OK

参数
""""""""""

-  **<interval second>**: SNTP时间同步间隔，单位：秒，范围：[15,4294967]。

注意事项
^^^^^

-  它配置同步间隔，这意味着它设置BL61x连接到NTP服务器获取新时间的频率间隔。

示例
^^^^^^^^

::

    AT+CIPSNTPCFG=1,-5,"0.pool.ntp.org","time.google.com"

    OK

    // 每小时同步一次SNTP时间
    AT+CIPSNTPINTV=3600

    OK

AT+CIPRECONNINTV
--------------------------------------------------------------------------------------------------------------------------
功能：查询/设置Wi-Fi透传模式下TCP/UDP/SSL的重连间隔。

查询命令
^^^^^^^^^^^^^

**功能：**

查询Wi-Fi透传模式下的自动连接间隔。

**命令：**

::

    AT+CIPRECONNINTV?

**响应：**

::

    +CIPRECONNINTV:<interval>

    OK

设置命令
^^^^^^^^^^^

**功能：**

设置Wi-Fi透传模式下TCP/UDP/SSL传输中断时的自动重连间隔。

**命令：**

::

    AT+CIPRECONNINTV=<interval>

**响应：**

::

    OK

参数
^^^^^^^^^^

-  **<interval>**: 自动重连之间的持续时间，单位：100毫秒，默认值：1，范围：[1,36000]。

注意事项
^^^^^

-  如果AT+SYSSTORE=1，配置更改将保存在易失闪存区域。

示例
^^^^^^^^

::

    AT+CIPRECONNINTV=10

AT+CIPRECVMODE
--------------------------------------------------------------------------------------------------------------------------
功能：查询/设置套接字接收模式。

查询命令
^^^^^^^^^^^^^

**功能：**

查询套接字接收模式。

**命令：**

::

    AT+CIPRECVMODE?

**响应：**

::

    +CIPRECVMODE:<mode>

    OK

设置命令
^^^^^^^^^^^

**命令：**

::

    AT+CIPRECVMODE=<mode>

**响应：**

::

    OK

参数
^^^^^^^^^^

-  **<mode>**: 套接字数据的接收模式，默认值：0。

    - 0: 主动模式。BLC-AT会立即将所有接收到的套接字数据以“+IPD”头部发送到主机MCU。(默认情况下，套接字接收窗口为2920字节。每次发送到MCU的最大有效字节数为2920字节。)

    - 1: 被动模式。BLC-AT会将接收到的套接字数据保存在内部缓冲区(套接字接收窗口，默认2920字节)中，并等待主机MCU读取。如果缓冲区已满，TCP/SSL连接的套接字传输将被阻塞，或者UDP连接的数据将丢失。

注意事项
^^^^^

-  此配置不能在Wi-Fi透传模式下使用。如果在被动模式下是UDP传输，当缓冲区满时数据将丢失。

-  当BLC-AT在被动模式下接收到套接字数据时，会在不同场景下提示以下消息：

    对于多连接模式(AT+CIPMUX=1)，消息为+IPD:<link ID>,<len>。

    对于单连接模式(AT+CIPMUX=0)，消息为+IPD:<len>。

-  <len>是缓冲区中套接字数据的总长度。

-  一旦有+IPD报告，就应该运行AT+CIPRECVDATA读取数据。否则，下一个+IPD不会报告给主机MCU，直到前一个+IPD被读取。

-  当连接断开时，缓存将被清除。

示例
^^^^^^^^

::

    AT+CIPRECVMODE=1

AT+CIPRECVDATA
--------------------------------------------------------------------------------------------------------------------------
在被动接收模式下获取套接字数据。

设置命令
^^^^^^^^^^^

**命令：**

::

    // 单连接：(AT+CIPMUX=0)
    AT+CIPRECVDATA=<len>

    // 多连接：(AT+CIPMUX=1)
    AT+CIPRECVDATA=<link_id>,<len>

**响应：**

::

    +CIPRECVDATA:<actual_len>,<data>

    OK

参数
^^^^^^^^^^

-  **<mode>**: 套接字数据的接收模式，默认值：0。

-  **<link_id>**: 多连接模式下的连接ID。

-  **<len>**: 最大值为0x7fffffff。如果接收到的数据的实际长度小于len，将返回实际长度。

-  **<actual_len>**: 实际获取的数据长度。

-  **<data>**: 想要获取的数据。

示例
^^^^^^^^

::

    AT+CIPRECVMODE=1

    // 例如，如果主机MCU收到在连接0中接收到100字节数据的消息，
    // 消息将是"+IPD:0,100"。
    // 然后可以使用以下命令读取这100字节的数据。
    AT+CIPRECVDATA=0,100

AT+CIPRECVLEN
--------------------------------------------------------------------------------------------------------------------------
功能：在被动接收模式下获取套接字数据长度。

查询命令
^^^^^^^^^^^^^

**功能：**

查询为连接缓冲的整个数据的长度。

**命令：**

::

    AT+CIPRECVLEN?

**响应：**

::

    // 单连接：(AT+CIPMUX=0)
    +CIPRECVLEN:<data length of link>

    OK

    // 多连接：(AT+CIPMUX=1)
    +CIPRECVLEN:<data length of link0>,<data length of link1>,<data length of link2>,<data length of link3>,<data length of link4>

    OK

注意事项
^^^^^

-  对于SSL连接，BLC-AT返回的数据长度可能小于实际数据长度。

示例
^^^^^^^^

::
    
    AT+CIPRECVLEN?
    
    // 多连接：(AT+CIPMUX=1)
    +CIPRECVLEN:100,0,0,0,0,

    // 单连接：(AT+CIPMUX=0)
    +CIPRECVLEN:100

    OK


AT+PING
-----------------------------------------------
功能：Ping 远程主机。

设置命令
^^^^^^^^^^^

**功能：**

向远程主机发送 Ping 请求。

**命令：**

::

    AT+PING=<"host">

    AT+PING=<"host">,[<len>,<count>,<interval>]

**响应：**

::

    +PING:<time>

    OK

或

::

    +PING:TIMEOUT   // 仅当域名解析失败或 Ping 超时返回此响应

    ERROR

参数
^^^^^^^^^^

- **<\"host\">**: 字符串参数，表示主机的 IPv4 或 IPv6 地址或域名。
- **<len>**: Ping 数据包的长度，单位：字节，范围：(0, 65535)。
- **<count>**: Ping 数据包的数量。
- **<interval>**: Ping 数据包之间的间隔，单位：毫秒，范围：(0, 65535)。
- **<time>**: Ping 的响应时间，单位：毫秒，范围：(0, 1000)。

注意事项
^^^^^

- 若远程主机为域名字符串，Ping 会先从 DNS（域名服务器）解析域名（优先解析 IPv4 地址），然后向解析后的 IP 地址发送 Ping 请求。

示例
^^^^^^^^

::

    AT+PING="192.168.1.1"
    AT+PING="www.google.com"
    AT+PING="192.168.1.1",64,8,500

    // 中国未来互联网工程中心
    AT+PING="240c::6666"


AT+CIPEVT
-----------------------------------------------
功能：开启或关闭以 +CIP 为前缀的事件消息通知。

设置命令
^^^^^^^^^^^

**功能：**

开启或关闭以 +CIP 为前缀的事件消息通知。

**命令：**

::

    AT+CIPEVT=<enable>

**响应：**

::

    +CIPEVT

    OK

参数
^^^^^^^^^^

- **<enable>**: 开启或关闭以 +CIP 为前缀的事件消息通知。
  
   -  1: 启用 "+CIP" 事件打印。
   -  0: 禁用 "+CIP" 事件打印。

查询命令
^^^^^^^^^^^^^

**功能：**

查询以 +CIP 为前缀的事件消息通知状态。

**命令：**

::

    AT+CIPEVT?

**响应：**

::

    +CIPEVT:<enable>

    OK


AT+CWEVT
-----------------------------------------------
功能：开启或关闭以 +CW 为前缀的事件消息通知。

设置命令
^^^^^^^^^^^

**功能：**

开启或关闭以 +CW 为前缀的事件消息通知。

**命令：**

::

    AT+CWEVT=<enable>

**响应：**

::

    +CWEVT

    OK

参数
^^^^^^^^^^

- **<enable>**: 开启或关闭以 +CW 为前缀的事件消息通知。
  
   -  1: 启用 "+CW" 事件打印。
   -  0: 禁用 "+CW" 事件打印。

查询命令
^^^^^^^^^^^^^

**功能：**

查询以 +CW 为前缀的事件消息通知状态。

**命令：**

::

    AT+CWEVT?

**响应：**

::

    +CWEVT:<enable>

    OK


AT+CIPSSLCCONF
-----------------------------------------------
功能：查询/设置 SSL 客户端配置。

查询命令
^^^^^^^^^^^^^

**功能：**

查询 BFLB 作为 SSL 客户端时各连接的配置。

**命令：**

::

    AT+CIPSSLCCONF?

**响应：**

::

    +CIPSSLCCONF:<linkid>,<auth_mode>,"<cert_name>","<key_name>","<ca_name>"

    OK

设置命令
^^^^^^^^^^^

**命令：**

::

    // 单连接：(AT+CIPMUX=0)
    AT+CIPSSLCCONF=<auth_mode>[,"<cert_name>"][,"<key_name>"][,"<ca_name>"]

    // 多连接：(AT+CIPMUX=1)
    AT+CIPSSLCCONF=<linkid>,<auth_mode>[,"<cert_name>"][,"<key_name>"][,"<ca_name>"]

**响应：**

::

    OK

参数
^^^^^^^^^^

- **<linkid>**: 连接 ID（0~4），用于多连接场景。
- **<auth_mode>**: 
  
    - 0: 无认证，此时无需提供 <pki_number> 和 <ca_number>。
    - 1: 客户端提供证书供服务器验证。
    - 2: 客户端加载 CA 证书验证服务器证书。
    - 3: 双向认证。

- **<cert_name>**: 证书文件名。
- **<key_name>**: 私钥文件名。
- **<ca_name>**: 客户端用于验证服务器的 CA 文件名。

示例
^^^^^^^^

::

    // 单连接：(AT+CIPMUX=0)
    AT+CIPSSLCCONF=3,"cert_01.crt","private_01.key","ca_01.crt"

    // 无认证 (AT+CIPMUX=1)
    AT+CIPSSLCCONF=0,0

    // 客户端认证 (AT+CIPMUX=1)
    AT+CIPSSLCCONF=0,1,"","","ca_01.crt"

    // 服务器认证 (AT+CIPMUX=1)
    AT+CIPSSLCCONF=0,2,"cert_01.crt","private_01.key"

    // 双向认证 (AT+CIPMUX=1)
    AT+CIPSSLCCONF=0,3,"cert_01.crt","private_01.key","ca_01.crt"


注意事项
^^^^^

- 若需配置立即生效，请在建立 SSL 连接前执行此命令。
- 下载 AT 固件时需同时下载 littlefs 文件系统，默认挂载至 /lfs。
- 如需动态修改证书内容，可参考命令:`AT+FS_`。
- 若 <auth_mode> 配置为 2 或 3，为校验服务器证书有效期，需确保 BFLB 在发送 AT+CIPSTART 命令前已获取当前时间（可通过 AT+CIPSNTPCFG 配置 SNTP 获取时间，并通过 AT+CIPSNPTIME? 查询）。



AT+CIPSSLCSNI
-----------------------------------------------
功能：查询/设置 SSL 客户端服务器名称指示（SNI）。

查询命令
^^^^^^^^^^^^^

**功能：**

查询各连接的 SNI 配置。

**命令：**

::

    AT+CIPSSLCSNI?

**响应：**

::

    +CIPSSLCSNI:<link ID>,<"sni">

    OK


设置命令
^^^^^^^^^^^

**命令：**

::

    // 单连接：(AT+CIPMUX=0)
    AT+CIPSSLCSNI=<"sni">

    // 多连接：(AT+CIPMUX=1)
    AT+CIPSSLCSNI=<link ID>,<"sni">

**响应：**

::

    OK

参数
^^^^^^^^^^

- **<linkid>**: 连接 ID（0~4），用于多连接场景。
- **<”sni”>**: ClientHello 中的服务器名称指示，用于校验服务器证书中的通用名称（Common Name），最大长度 64 字节。


注意事项
^^^^^

- 若需配置立即生效，请在建立 SSL 连接前执行此命令。
- 下载 AT 固件时需同时下载 romfs 文件系统，默认挂载至 /romfs。



AT+CIPSSLCALPN
-----------------------------------------------
功能：查询/设置 SSL 客户端应用层协议协商（ALPN）。

查询命令
^^^^^^^^^^^^^

**功能：**

查询 BFLB 作为 SSL 客户端时各连接的 ALPN 配置。

**命令：**

::

    AT+CIPSSLCALPN?

**响应：**

::

    +CIPSSLCALPN:<link ID>[,<"alpn">][,<"alpn">][,<"alpn">]

    OK


设置命令
^^^^^^^^^^^

**命令：**

::

    // 单连接：(AT+CIPMUX=0)
    AT+CIPSSLCALPN=<counts>[,<"alpn">][,<"alpn">][,<"alpn">]

    // 多连接：(AT+CIPMUX=1)
    AT+CIPSSLCALPN=<link ID>,<counts>[,<"alpn">][,<"alpn">][,<"alpn">]

**响应：**

::

    OK

参数
^^^^^^^^^^

- **<linkid>**: 连接 ID（0~4），用于多连接场景。
- **<counts>**: ALPN 数量，范围：[0,5]。

    - 0: 清除 ALPN 配置。
    - [1,5]: 设置 ALPN 配置。
  
- **<"alpn">**: ClientHello 中的应用层协议协商字符串，长度受命令长度限制。


注意事项
^^^^^

- 若需配置立即生效，请在建立 SSL 连接前执行此命令。


AT+CIPSSLCPSK
-----------------------------------------------
功能：查询/设置 SSL 客户端预共享密钥（PSK）字符串格式。

查询命令
^^^^^^^^^^^^^

**功能：**

查询 BFLB 作为 SSL 客户端时各连接的 PSK 配置。

**命令：**

::

    AT+CIPSSLCPSK?

**响应：**

::

    +CIPSSLCPSK:<link ID>,<"psk">,<"hint">
    
    OK


设置命令
^^^^^^^^^^^

**命令：**

::

    // 单连接：(AT+CIPMUX=0)
    AT+CIPSSLCPSK=<"psk">,<"hint">

    // 多连接：(AT+CIPMUX=1)
    AT+CIPSSLCPSK=<link ID>,<"psk">,<"hint">

**响应：**

::

    OK

参数
^^^^^^^^^^

- **<linkid>**: 连接 ID（0~4），用于多连接场景。
- **<"psk">**: 字符串格式的预共享密钥，最大长度 32 字节。若包含 \0 字符，请使用 `AT+CIPSSLCPSKHEX`_ 命令。
- **<"hint">**: 预共享密钥标识，最大长度 32 字节。


注意事项
^^^^^

- 若需配置立即生效，请在建立 SSL 连接前执行此命令。


AT+CIPSSLCPSKHEX
-----------------------------------------------
功能：查询/设置 SSL 客户端预共享密钥（PSK）十六进制格式。

注意事项
^^^^^

- 与 `AT+CIPSSLCPSK`_ 命令功能类似，但 <"psk"> 以十六进制格式输入，其中 \0 表示 00。

示例
^^^^^^^^

::

    // 单连接：(AT+CIPMUX=0)，预共享密钥为"psk"，标识为"myhint"
    AT+CIPSSLCPSKHEX="70736b","myhint"

    // 多连接：(AT+CIPMUX=1)，预共享密钥为"psk"，标识为"myhint"
    AT+CIPSSLCPSKHEX=0,"70736b","myhint"



AT+IPERF
-----------------------------------------------
功能：测试 BFLB 独立模式下的吞吐量。

设置命令
^^^^^^^^^^^

**命令：**

::

    AT+IPERF=<"direct">,<"type">,[<"ipaddr">],[<"time">],[<"port>]

**响应：**

::

    OK

参数
^^^^^^^^^^

- **<"direct">**: iperf 传输方向，"TX" 或 "RX"。
- **<"type">**: 连接类型，"TCP" 或 "UDP"。
- **<"ipaddr">**: 目标 IP 地址（客户端模式必须设置）。
- **<"time">**: iperf 测试持续时间，默认 10 秒（单位：秒）。
- **<"port">**: iperf 端口号，默认 5001。


示例
^^^^^^^^

::

    AT+IPERF="RX","TCP"

    AT+IPERF="TX","TCP","192.168.1.2",1000

    AT+IPERF="TX","TCP","192.168.1.2",1000,5001


AT+IPERFSTOP
-----------------------------------------------
功能：停止 BFLB 吞吐量测试。

设置命令
^^^^^^^^^^^

**命令：**

::

    AT+IPERFSTOP

**响应：**

::

    OK

示例
^^^^^^^^

::

    AT+IPERF="TX","TCP","192.168.1.2",1000

    AT+IPERFSTOP


=================
HTTP AT 命令
=================
.. table:: 指令列表
    :widths: 25,75
    :width: 100%
    :align: center

    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | 指令                    | 描述                                                                                                      |
    +=========================+===========================================================================================================+
    | `AT+HTTPCLIENT`_        | 发送 HTTP 客户端请求                                                                                      |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+HTTPGETSIZE`_       | 获取 HTTP 资源大小                                                                                        |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+HTTPCGET`_          | 获取 HTTP 资源                                                                                            |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+HTTPCPOST`_         | 发送指定长度的 HTTP POST 数据                                                                             |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+HTTPCPUT`_          | 发送指定长度的 HTTP PUT 数据                                                                              |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+HTTPURLCFG`_        | 设置/获取长 HTTP URL                                                                                      |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+HTTPSSLCFG`_        | 设置/获取 HTTPS 证书                                                                                      |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+HTTPRECVMODE`_      | 查询/设置套接字接收模式                                                                                  |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+HTTPRECVDATA`_      | 在被动接收模式下获取 HTTP 数据                                                                           |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+HTTPRECVLEN`_       | 在被动接收模式下获取 HTTP 数据长度                                                                       |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+ 
    | `AT+HTTPRECVBUF`_       | 查询/设置 HTTP 接收缓冲区大小                                                                           |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+

HTTP AT 命令说明
============================
AT+HTTPCLIENT
---------------------------
发送 HTTP 客户端请求。

设置命令
^^^^^^^^^^^^^^^

**命令：**

::

    AT+HTTPCLIENT=<linkid>,<opt>,<content-type>,<"url">,[,<"data">]

**响应：**

::

    OK

    +HTTPCGET:<linkid>,<size>,<data>

    +HTTPSTATUS:<linkid>,<err_code>


    或 


    +HTTPCPOST:<linkid>,<size>,<data>

    +HTTPSTATUS:<linkid>,<err_code>


    或 


    +HTTPCPUT:<linkid>,<size>,<data>

    +HTTPSTATUS:<linkid>,<err_code>


参数
^^^^^^^^^^
- **<linkid>**: HTTP 客户端请求的连接 ID，范围 [0~2]。

- **<opt>**: HTTP 客户端请求方法：
  - 1: HEAD
  - 2: GET
  - 3: POST
  - 4: PUT

- **<content-type>**: HTTP 客户端请求的数据类型：
  - 0: application/x-www-form-urlencoded
  - 1: application/json
  - 2: multipart/form-data
  - 3: text/xml

- **<url>**: HTTP/HTTPS 网址。

- **<data>**: 若 <opt> 为 POST 请求，此参数包含发送至 HTTP 服务器的数据；否则无此参数（无需输入逗号表示该参数）。

- **<err_code>**: 错误原因：
  - 0: 文件成功接收
  - 1: 未知错误
  - 2: 连接服务器失败
  - 3: 服务器主机名解析失败
  - 4: 远程服务器意外关闭连接
  - 5: 连接超时（服务器未及时响应）
  - 6: 服务器返回错误码
  - 7: 本地内存错误
  - 8: 本地中止
  - 9: 内容长度不匹配

注意事项
^^^^^

- 若包含 URL 的完整命令长度超过 256 字节，请先使用 AT+HTTPURLCFG 命令预设 URL，再将本命令的 <"url"> 参数设为 ""。

- 若 url 参数非空，HTTP 客户端将使用该参数并忽略主机参数和路径参数；若 url 参数省略或为空字符串，HTTP 客户端将使用主机参数和路径参数。

- 该命令不支持重定向。从服务器获取状态码 301（永久重定向）或 302（临时重定向）后，AT 不会自动重定向到新 URL 地址。您可使用工具获取实际 URL，再通过本命令访问。

- 若包含 <"data"> 的完整命令长度超过 256 字节，请使用 AT+HTTPCPOST 命令。

- 启用被动模式时，响应将变为 +HTTPC:<linkid>,<size>。


示例
^^^^^^^^

::

    // HEAD 请求
    AT+HTTPCLIENT=0,1,0,"http://httpbin.org/get"

    // GET 请求
    AT+HTTPCLIENT=0,2,0,"http://httpbin.org/get"

    // POST 请求
    AT+HTTPCLIENT=0,3,0,"http://httpbin.org/post","field1=value1&field2=value2"

    // HTTPS HEAD 请求
    AT+HTTPCLIENT=0,1,0,"https://httpbin.org/get"


AT+HTTPGETSIZE
---------------------------
获取 HTTP 资源大小。

设置命令
^^^^^^^^^^^^^^^

**命令：**

::

    AT+HTTPGETSIZE=<linkid>,<"url">[,<timeout>]

**响应：**

::

    OK
    
    +HTTPGETSIZE:<linkid>,<size>

    +HTTPSTATUS:<linkid>,<err_code>


参数
^^^^^^^^^^
- **<linkid>**: HTTP 客户端请求的连接 ID。

- **<url>**: HTTP/HTTPS 网址，字符串参数需用引号包裹。

- **<timeout>**: 网络超时时间，单位：毫秒，默认值：5000，范围：[0,180000]。

- **<size>**: HTTP 资源大小。


注意事项
^^^^^

- 若包含 URL 的完整命令长度超过 256 字节，请先使用 AT+HTTPURLCFG 命令预设 URL，再将本命令的 <"url"> 参数设为 ""。


示例
^^^^^^^^

::

    AT+HTTPGETSIZE=0,"https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_92x30dp.png"

    OK
    
    // 响应
    +HTTPGETSIZE:0,1575

    +HTTPSTATUS:0,0



AT+HTTPCGET
---------------------------
获取 HTTP 资源。

设置命令
^^^^^^^^^^^^^^^

**命令：**

::

    AT+HTTPCGET=<linkid>,<"url">[,<timeout>]

**响应：**

::

    OK
    
    +HTTPCGET:<linkid>,<size>,<data>

    +HTTPSTATUS:<linkid>,<err_code>


参数
^^^^^^^^^^
- **<linkid>**: HTTP 客户端请求的连接 ID。

- **<url>**: HTTP/HTTPS 网址，字符串参数需用引号包裹。

- **<timeout>**: 网络超时时间，单位：毫秒，默认值：5000，范围：[0,180000]。

- **<size>**: HTTP 资源大小。


注意事项
^^^^^

- 若包含 URL 的完整命令长度超过 256 字节，请先使用 AT+HTTPURLCFG 命令预设 URL，再将本命令的 <"url"> 参数设为 ""。

- 启用被动模式时，响应将变为 +HTTPC:<linkid>,<size>。


AT+HTTPCPOST
---------------------------
发送指定长度的 HTTP POST 数据。

设置命令
^^^^^^^^^^^^^^^

**命令：**

::

    AT+HTTPCPOST=<linkid>,<"url">,<length>

**响应：**

::

    OK

    >

符号 > 表示 AT 已准备好接收串口数据，此时可输入数据。当输入数据长度达到 <length> 参数指定的长度时，传输开始。

若传输成功，AT 返回：

::

    SEND OK

否则返回：

::

    SEND FAIL


参数
^^^^^^^^^^
- **<linkid>**: HTTP 客户端请求的连接 ID。

- **<url>**: HTTP/HTTPS 网址，字符串参数需用引号包裹。

- **<length>**: 需 POST 的 HTTP 数据长度，最大长度等于系统可分配的堆内存大小。


注意事项
^^^^^

- 若包含 URL 的完整命令长度超过 256 字节，请先使用 AT+HTTPURLCFG 命令预设 URL，再将本命令的 <"url"> 参数设为 ""。

- 本命令默认的 content-type 类型为 application/x-www-form-urlencoded。

- 启用被动模式时，响应将变为 +HTTPC:<linkid>,<size>。


AT+HTTPCPUT
---------------------------
发送指定长度的 HTTP PUT 数据。

设置命令
^^^^^^^^^^^^^^^

**命令：**

::

    AT+HTTPCPUT=<linkid>,<"url">,<content_type>,<length>

**响应：**

::

    OK

    >

符号 > 表示 AT 已准备好接收串口数据，此时可输入数据。当输入数据长度达到 <length> 参数指定的长度时，传输开始。

若传输成功，AT 返回：

::

    SEND OK

否则返回：

::

    SEND FAIL


参数
^^^^^^^^^^
- **<linkid>**: HTTP 客户端请求的连接 ID。

- **<url>**: HTTP/HTTPS 网址，字符串参数需用引号包裹。

- **<content_type>**: HTTP 客户端请求的数据类型：
  - 0: application/x-www-form-urlencoded
  - 1: application/json
  - 2: multipart/form-data
  - 3: text/xml

- **<length>**: 需 PUT 的 HTTP 数据长度，最大长度等于系统可分配的堆内存大小。


注意事项
^^^^^

- 若包含 URL 的完整命令长度超过 256 字节，请先使用 AT+HTTPURLCFG 命令预设 URL，再将本命令的 <"url"> 参数设为 ""。

- 启用被动模式时，响应将变为 +HTTPC:<linkid>,<size>。


AT+HTTPURLCFG
---------------------------
设置/获取长 HTTP URL。

查询命令
^^^^^^^^^^^^^^^

**命令：**

::

    AT+HTTPURLCFG=0?

**响应：**

::

    +HTTPURLCFG:<linkid>,<url length>,<url>
    
    OK

设置命令
^^^^^^^^^^^^^^^

**命令：**

::

    AT+HTTPURLCFG=<linkid>,<url length>

**响应：**

::

    OK

    >

此响应表示 AT 已准备好接收串口数据，此时应输入 URL。当 URL 长度达到 <url length> 值时，系统返回：

::

    SEND OK

否则返回：

::

    SEND FAIL


参数
^^^^^^^^^^
- **<linkid>**: HTTP 客户端请求的连接 ID。

- **<url length>**: HTTP URL 长度，单位：字节：
  - 0: 清除 HTTP URL 配置。
  - [8,8192]: 设置 HTTP URL 配置。

- **<url>**: HTTP/HTTPS URL 数据。


AT+HTTPSSLCFG
---------------------------
设置/获取 HTTPS 证书。

查询命令
^^^^^^^^^^^^^^^

**命令：**

::

    AT+HTTPSSLCFG=0?

**响应：**

::

    +HTTPSSLCFG:<linkid>,<scheme>,[<"cert_file">][,<"key_file">][,<"ca_file">]
    
    OK

设置命令
^^^^^^^^^^^^^^^

**命令：**

::

    AT+HTTPSSLCFG=<linkid>,<scheme>,[<"cert_file">][,<"key_file">][,<"ca_file">]

**响应：**

::

    OK


参数
^^^^^^^^^^
- **<linkid>**: HTTP 客户端请求的连接 ID。

- **<scheme>**: 
  - 0: HTTPS 不验证证书。
  - 1: HTTPS 验证服务器证书。
  - 2: HTTPS 提供客户端证书。
  - 3: HTTPS 验证服务器证书并提供客户端证书。

- **<"cert_file">**: 证书文件名。

- **<"key_file">**: 私钥文件名。

- **<"ca_file">**: 客户端用于验证服务器的 CA 文件名。

AT+HTTPRECVMODE
--------------------------------------------------------------------------------------------------------------------------
功能：查询/设置HTTP接收模式。

查询命令
^^^^^^^^^^^^^

**功能：**

查询HTTP接收模式。

**命令：**

::

    AT+HTTPRECVMODE?

**响应：**

::

    +HTTPRECVMODE:<mode>

    OK

设置命令
^^^^^^^^^^^

**命令：**

::

    AT+HTTPRECVMODE=<mode>

**响应：**

::

    OK

参数
^^^^^^^^^^

- **<mode>**: HTTP数据的接收模式，默认值：0。
  - 0: 主动模式。BLC-AT会将所有接收到的HTTP数据立即通过“+HTTPC”头部发送至主机MCU。
  - 1: 被动模式。BLC-AT会将接收到的HTTP数据存储在内部缓冲区（HTTP接收缓冲区，默认1024字节），等待主机MCU读取。若缓冲区已满，套接字传输将被阻塞。

注意事项
^^^^^

- 该参数适用于所有连接ID。
- <len>为缓冲区中套接字数据的总长度。
- 当收到+HTTPC通知后，需通过AT+HTTPRECVDATA命令读取数据，否则下一条+HTTPC通知将在当前数据读取完成后才会发送至主机MCU。
- 连接断开时，缓存数据仍会保留。

示例
^^^^^^^^

::

    AT+HTTPRECVMODE=1


AT+HTTPRECVBUF
----------------------------------------------------------------------------------------
功能：查询/设置HTTP接收缓冲区大小。

设置命令
^^^^^^^^^^^^^^^

**命令：**

::
    
    AT+HTTPRECVBUF=<size>

**响应：**

::

    +HTTPRECVBUF

    OK

参数
^^^^^^^^^^

- **<size>**: 设置缓冲区大小，单位：字节。

查询命令
^^^^^^^^^^^^^^^

**命令：**

::
    
    AT+HTTPRECVBUF?

**响应：**

返回缓冲区大小，默认缓冲区大小为15360（该值不占用系统堆内存）。

::

    +HTTPRECVBUF:<size>

    OK

注意事项
^^^^^

- 该值理论上限为lwip堆内存大小。


AT+HTTPRECVDATA
--------------------------------------------------------------------------------------------------------------------------
在被动接收模式下获取HTTP数据。

设置命令
^^^^^^^^^^^

**命令：**

::

    AT+HTTPRECVDATA=<linkid>,<len>

**响应：**

::

    +HTTPRECVDATA:<actual_len>,<data>

    OK

参数
^^^^^^^^^^
- **<linkid>**: HTTP客户端请求的连接ID。
- **<len>**: 最大取值为0x7fffffff。若实际接收数据长度小于len，将返回实际长度。
- **<actual_len>**: 实际获取的数据长度。
- **<data>**: 需要获取的数据。

示例
^^^^^^^^

::

    AT+HTTPRECVMODE=1

    // 例如，主机MCU在连接0中收到100字节数据的通知，消息为“+HTTPC:0,100”。
    // 可通过以下命令读取这100字节数据：
    AT+HTTPRECVDATA=0,100


AT+HTTPRECVLEN
--------------------------------------------------------------------------------------------------------------------------
功能：在被动接收模式下获取HTTP数据长度。

查询命令
^^^^^^^^^^^^^

**功能：**

查询连接中缓存的完整数据长度。

**命令：**

::

    AT+HTTPRECVLEN=0?

**响应：**

::

    +HTTPRECVLEN:<linkid>,<data length of link>

    OK

示例
^^^^^^^^

::
    
    AT+HTTPRECVLEN=0?
    
    +CIPRECVLEN:0,100

    OK


=================
MQTT AT 命令
=================
.. table:: 指令列表
    :widths: 25,75
    :width: 100%
    :align: center

    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | 指令                    | 描述                                                                                                      |
    +=========================+===========================================================================================================+
    | `AT+MQTTUSERCFG:`_      | 获取/设置MQTT用户配置                                                                                    |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+MQTTCLIENTID`_      | 获取/设置MQTT客户端ID                                                                                   |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+MQTTUSERNAME`_      | 获取/设置MQTT用户名                                                                                      |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+MQTTPASSWORD`_      | 获取/设置MQTT密码                                                                                      |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+MQTTCONNCFG`_       | 获取/设置MQTT连接配置                                                                                  |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+MQTTALPN`_          | 获取/设置MQTT应用层协议协商（ALPN）                                                                     |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+MQTTSNI`_           | 获取/设置MQTT服务器名称指示（SNI）                                                                      |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+MQTTCONN`_          | 连接到MQTT代理服务器                                                                                    |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+MQTTPUB`_           | 以字符串形式发布MQTT消息                                                                                |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+MQTTPUBRAW`_        | 发布长MQTT消息                                                                                          |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+MQTTSUB`_           | 订阅MQTT主题                                                                                            |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+MQTTUNSUB`_         | 取消订阅MQTT主题                                                                                        |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+
    | `AT+MQTTCLEAN`_         | 关闭MQTT连接                                                                                            |
    +-------------------------+-----------------------------------------------------------------------------------------------------------+


MQTT AT 命令说明
============================
AT+MQTTUSERCFG
--------------------------------
获取/设置MQTT用户配置。

查询命令
^^^^^^^^^^^^^^^

查询MQTT用户配置。

**命令：**

::

    AT+MQTTUSERCFG?

**响应：**

::

    +MQTTUSERCFG:<LinkID>,<scheme>,<"client_id">,<"username">,<"password">,<"cert_file">,<"key_file">,<"ca_file">
    
    OK


设置命令
^^^^^^^^^^^^^^^

设置MQTT用户配置。

**命令：**

::

    AT+MQTTUSERCFG=<LinkID>,<scheme>,<"client_id">,<"username">,<"password">[,<"cert_file">][,<"key_file">][,<"ca_file">]

**响应：**

::

    OK

参数
^^^^^^^^^^

- **<LinkID>**: 当前仅支持连接ID 0。
- **<scheme>**: 
  - 0: 基于TCP的MQTT。
  - 1: 基于TLS的MQTT（不验证证书）。
  - 2: 基于TLS的MQTT（验证服务器证书）。
  - 3: 基于TLS的MQTT（提供客户端证书）。
  - 4: 基于TLS的MQTT（验证服务器证书并提供客户端证书）。
- **<client_id>**: MQTT客户端ID，最大长度：23字节。
- **<username>**: 登录MQTT代理服务器的用户名，最大长度：128字节。
- **<password>**: 登录MQTT代理服务器的密码，最大长度：128字节。
- **<"cert_file">**: 证书文件名。
- **<"key_file">**: 私钥文件名。
- **<"ca_file">**: 客户端用于验证服务器的CA文件名。

注意事项
^^^^^

- 整个AT命令长度应小于256字节。
- 若<scheme>配置为3、5、8或10，为校验服务器证书有效期，需确保BLC7X4x在发送AT+MQTTCONN命令前已获取当前时间（可通过AT+CIPSNTPCFG配置SNTP获取时间，并通过AT+CIPSNPTIME?查询）。


AT+MQTTCLIENTID
-----------------------
获取/设置MQTT客户端ID。

查询命令
^^^^^^^^^^^^^^^

查询MQTT客户端ID。

**命令：**

::

    AT+MQTTCLIENTID?

**响应：**

::

    +MQTTCLIENTID:<LinkID>,<"client_id">
    
    OK

注意事项
^^^^^

- 查询命令最大长度不超过128字节（受AT命令长度限制）。

设置命令
^^^^^^^^^^^^^^^

设置MQTT客户端ID。

**命令：**

::

    AT+MQTTLONGCLIENTID=<LinkID>,<length>

**响应：**

::

    OK

    >

此响应表示AT已准备好接收MQTT客户端ID，此时应输入客户端ID。当客户端ID长度达到<length>值时，系统返回：

::

    OK


参数
^^^^^^^^^^

- **<LinkID>**: 当前仅支持连接ID 0。
- **<length>**: MQTT客户端ID长度，范围：[1,23]。

注意事项
^^^^^

  - AT+MQTTUSERCFG命令也可设置MQTT客户端ID，两者区别：
  - AT+MQTTLONGCLIENTID可设置较长的客户端ID（AT+MQTTUSERCFG命令长度受限）。
  - 需在设置AT+MQTTUSERCFG命令后设置AT+MQTTLONGCLIENTID。


AT+MQTTUSERNAME
-----------------------
获取/设置MQTT用户名。

查询命令
^^^^^^^^^^^^^^^

查询MQTT用户名。

**命令：**

::

    AT+MQTTUSERNAME?

**响应：**

::

    +MQTTUSERNAME:<LinkID>,<"user_name">
    
    OK

注意事项
^^^^^

- 查询命令最大长度不超过128字节（受AT命令长度限制）。

设置命令
^^^^^^^^^^^^^^^

设置MQTT用户名。

**命令：**

::

    AT+MQTTUSERNAME=<LinkID>,<length>

**响应：**

::

    OK

    >

此响应表示AT已准备好接收MQTT用户名，此时应输入用户名。当用户名长度达到<length>值时，系统返回：

::

    OK


参数
^^^^^^^^^^

- **<LinkID>**: 当前仅支持连接ID 0。
- **<length>**: MQTT用户名长度，范围：[1,128]。

注意事项
^^^^^

- AT+MQTTUSERCFG命令也可设置MQTT用户名，两者区别：
  - AT+MQTTLONGUSERNAME可设置较长的用户名（AT+MQTTUSERCFG命令长度受限）。
  - 需在设置AT+MQTTUSERCFG命令后设置AT+MQTTLONGUSERNAME。


AT+MQTTPASSWORD
-----------------------
获取/设置MQTT密码。

查询命令
^^^^^^^^^^^^^^^

查询MQTT密码。

**命令：**

::

    AT+MQTTPASSWORD?

**响应：**

::

    +MQTTPASSWORD:<LinkID>,<"password">
    
    OK

注意事项
^^^^^

- 查询命令最大长度不超过128字节（受AT命令长度限制）。

设置命令
^^^^^^^^^^^^^^^

设置MQTT密码。

**命令：**

::

    AT+MQTTPASSWORD=<LinkID>,<length>

**响应：**

::

    OK

    >

此响应表示AT已准备好接收MQTT密码，此时应输入密码。当密码长度达到<length>值时，系统返回：

::

    OK


参数
^^^^^^^^^^

- **<LinkID>**: 当前仅支持连接ID 0。
- **<length>**: MQTT密码长度，范围：[1,128]。

注意事项
^^^^^

- AT+MQTTUSERCFG命令也可设置MQTT密码，两者区别：
  - AT+MQTTLONGPASSWORD可设置较长的密码（AT+MQTTUSERCFG命令长度受限）。
  - 需在设置AT+MQTTUSERCFG命令后设置AT+MQTTLONGPASSWORD。

AT+MQTTCONNCFG
-----------------------------------------
获取/设置MQTT连接配置。

查询命令
^^^^^^^^^^^^^^^

查询MQTT连接配置。

**命令：**

::

    AT+MQTTCONNCFG?

**响应：**

::

    +MQTTCONNCFG:<LinkID>,<keepalive>,<disable_clean_session>,<"lwt_topic">,<"lwt_msg">,<lwt_qos>,<lwt_retain>
    
    OK


设置命令
^^^^^^^^^^^^^^^

设置MQTT连接配置。

**命令：**

::

    AT+MQTTCONNCFG=<LinkID>,<keepalive>,<disable_clean_session>,<"lwt_topic">,<"lwt_msg">,<lwt_qos>,<lwt_retain>

**响应：**

::

    OK


参数
^^^^^^^^^^

- **<LinkID>**: 当前仅支持连接ID 0。
- **<keepalive>**: MQTT心跳超时时间，单位：秒，范围[0,7200]。默认值为0，会被强制改为120秒。
- **<disable_clean_session>**: 设置MQTT Clean Session。关于此参数的详细信息，请参考MQTT 3.1.1版本中的Clean Session部分。
  - 0: 启用Clean Session
  - 1: 禁用Clean Session
- **<lwt_topic>**: LWT（遗嘱）消息主题，最大长度：128字节。
- **<lwt_msg>**: LWT消息，最大长度：128字节。
- **<lwt_qos>**: LWT QoS等级，可设置为0、1或2，默认：0。
- **<lwt_retain>**: LWT保留标志，可设置为0或1，默认：0。


AT+MQTTALPN
-----------------------------------------------------------
获取/设置MQTT应用层协议协商（ALPN）。

查询命令
^^^^^^^^^^^^^^^

查询MQTT应用层协议协商（ALPN）。

**命令：**

::

    AT+MQTTALPN?

**响应：**

::

    +MQTTALPN:<LinkID>[,<"alpn">][,<"alpn">][,<"alpn">]

    OK


设置命令
^^^^^^^^^^^^^^^

设置MQTT应用层协议协商（ALPN）。

**命令：**

::

    AT+MQTTALPN=<LinkID>,<alpn_counts>[,<"alpn">][,<"alpn">][,<"alpn">]

**响应：**

::

    OK


参数
^^^^^^^^^^

- **<LinkID>**: 当前仅支持连接ID 0。
- **<alpn_counts>**: <”alpn”>参数的数量，范围：[0,5]。
  - 0: 清除MQTT ALPN配置。
  - [1,5]: 设置MQTT ALPN配置。
- **<"alpn">**: 可在ClientHello中向服务器发送多个ALPN。

注意事项
^^^^^

- 整个AT命令长度应小于256字节。
- MQTT ALPN仅在MQTT连接基于TLS或WSS时生效。
- 需在设置AT+MQTTUSERCFG命令后设置AT+MQTTALPN。


示例
^^^^^^^^

::

    AT+CWMODE=1

    AT+CWJAP="ssid","password"

    AT+CIPSNTPCFG=1,-5,"0.pool.ntp.org","time.google.com"

    AT+MQTTUSERCFG=0,4,"Bflb","bl","123456789","client_1.crt","client_1.key","ca_1.crt"

    AT+MQTTALPN=0,2,"mqtt-ca.cn","mqtt-ca.us"

    AT+MQTTCONN=0,"192.168.31.112",8883,1


AT+MQTTSNI
-------------------------------------------
获取/设置MQTT服务器名称指示（SNI）。

查询命令
^^^^^^^^^^^^^^^

查询MQTT服务器名称指示（SNI）。

**命令：**

::

    AT+MQTTSNI?

**响应：**

::

    +MQTTSNI:<LinkID>,<"sni">

    OK


设置命令
^^^^^^^^^^^^^^^

设置MQTT服务器名称指示（SNI）。

**命令：**

::

    AT+MQTTSNI=<LinkID>,<"sni">

**响应：**

::

    OK


参数
^^^^^^^^^^

- **<LinkID>**: 当前仅支持连接ID 0。
- **<"sni">**: MQTT服务器名称指示，可在ClientHello中发送至服务器。

注意事项
^^^^^

- 整个AT命令长度应小于256字节。
- MQTT SNI仅在MQTT连接基于TLS或WSS时生效。
- 需在设置AT+MQTTUSERCFG命令后设置AT+MQTTSNI。


示例
^^^^^^^^

::

    AT+CWMODE=1

    AT+CWJAP="ssid","password"

    AT+CIPSNTPCFG=1,-5,"0.pool.ntp.org","time.google.com"

    AT+MQTTUSERCFG=0,4,"Bflb","bl","123456789","client_1.crt","client_1.key","ca_1.crt"

    AT+MQTTSNI=0,"my_specific_prefix.iot.my_aws_region.amazonaws.com"

    AT+MQTTCONN=0,"192.168.31.112",8883,1


AT+MQTTCONN
------------------------
连接到MQTT代理服务器。

查询命令
^^^^^^^^^^^^^^^

查询已连接的MQTT代理服务器。

**命令：**

::

    AT+MQTTCONN?

**响应：**

::

    +MQTTCONN:<LinkID>,<state>,<scheme><"host">,<port>,<reconnect>

    OK


设置命令
^^^^^^^^^^^^^^^

连接到MQTT代理服务器。

**命令：**

::

    AT+MQTTCONN=<LinkID>,<"host">,<port>,<reconnect>

**响应：**

::

    OK

    +MQTT:CONNECTED,0

或

::

    +MQTT:DISCONNECTED,0


参数
^^^^^^^^^^

- **<LinkID>**: 当前仅支持连接ID 0。
- **<"host">**: MQTT代理服务器域名，最大长度：128字节。
- **<port>**: MQTT代理服务器端口，最大值：65535。
- **<reconnect>**:
  - 0: MQTT不会自动重连。若连接建立后断开，无法使用此命令重建连接，需先发送AT+MQTTCLEAN=0清除连接，重新配置参数后再建立新连接。
  - 1: MQTT会自动重连，需占用更多资源。
- **<state>**:
  - 0: MQTT未初始化
  - 1: 已设置AT+MQTTUSERCFG
  - 2: 已设置AT+MQTTCONNCFG
  - 3: 连接已断开
  - 4: 连接已建立
  - 5: 已连接，但未订阅任何主题
  - 6: 已连接，并订阅了MQTT主题
- **<scheme>**:
  - 0: 基于TCP的MQTT
  - 1: 基于TLS的MQTT（不验证证书）
  - 2: 基于TLS的MQTT（验证服务器证书）
  - 3: 基于TLS的MQTT（提供客户端证书）
  - 4: 基于TLS的MQTT（验证服务器证书并提供客户端证书）


AT+MQTTPUB
-------------------------------
以字符串形式发布MQTT消息。

设置命令
^^^^^^^^^^^^^^^

**功能：**

以字符串形式向指定主题发布MQTT消息。若发布数据量较大，单个AT命令长度超过256字节的阈值时，请使用AT+MQTTPUBRAW命令。

**命令：**

::

    AT+MQTTPUB=<LinkID>,<"topic">,<"data">,<qos>,<retain>

**响应：**

::

    OK


参数
^^^^^^^^^^

- **<LinkID>**: 当前仅支持连接ID 0。
- **<"topic">**: MQTT主题，最大长度：128字节。
- **<"data">**: 字符串形式的MQTT消息。
- **<qos>**: 消息QoS等级，可设置为0、1或2，默认：0。
- **<retain>**: 保留标志。


注意事项
^^^^^

- 整个AT命令长度应小于256字节。
- 此命令无法发送\0数据。若需要发送\0，请使用AT+MQTTPUBRAW命令。


示例
^^^^^^^^

::

    AT+CWMODE=1

    AT+CWJAP="ssid","password"

    AT+CIPSNTPCFG=1,-5,"0.pool.ntp.org","time.google.com"

    AT+MQTTUSERCFG=0,4,"Bflb","bl","123456789","client_1.crt","client_1.key","ca_1.crt"

    AT+MQTTALPN=0,2,"mqtt-ca.cn","mqtt-ca.us"

    AT+MQTTCONN=0,"192.168.31.112",8883,1

    AT+MQTTPUB=0,"topic","\"{\"timestamp\":\"20201121085253\"}\"",0,0  // 发送此命令时，请注意特殊字符是否需要转义。


AT+MQTTPUBRAW
-------------------------------
发布长MQTT消息。

设置命令
^^^^^^^^^^^^^^^

**功能：**

向指定主题发布长MQTT消息。若发布数据量较小，单个AT命令长度不超过256字节的阈值，也可使用AT+MQTTPUB命令。

**命令：**

::

    AT+MQTTPUBRAW=<LinkID>,<"topic">,<length>,<qos>,<retain>

**响应：**

::

    OK

    >

符号>表示AT已准备好接收串口数据，此时可输入数据。当达到<length>参数指定的消息长度时，开始传输。

若传输成功，AT返回：

::

    SEND OK

否则返回：

::

    SEND FAIL


参数
^^^^^^^^^^

- **<LinkID>**: 当前仅支持连接ID 0。
- **<"topic">**: MQTT主题，最大长度：128字节。
- **<length>**: MQTT消息长度，最大长度受可用内存限制。
- **<qos>**: 发布消息的QoS等级，可设置为0、1或2，默认：0。
- **<retain>**: 保留标志。


AT+MQTTSUB
------------------------
订阅MQTT主题。

查询命令
^^^^^^^^^^^^^^^

查询已订阅的MQTT主题。

**命令：**

::

    AT+MQTTSUB?

**响应：**

::

    +MQTTSUB:<LinkID>,<state>,<"topic1">,<qos>

    +MQTTSUB:<LinkID>,<state>,<"topic2">,<qos>

    +MQTTSUB:<LinkID>,<state>,<"topic3">,<qos>
    
    ...

    OK


设置命令
^^^^^^^^^^^^^^^

**功能：**

以指定QoS订阅MQTT主题，支持订阅多个主题。

**命令：**

::

    AT+MQTTSUB=<LinkID>,<"topic">,<qos>

**响应：**

::

    OK

若主题已被订阅，将提示：

::

    +MQTTSUB,ALREADY_SUBSCRIBE

    OK

当AT接收到已订阅主题的MQTT消息时，将提示：

::

    +MQTT:SUBRECV,<LinkID>,<topic_length>,<data_length>,<"topic">,<data>

参数
^^^^^^^^^^

- **<LinkID>**: 当前仅支持连接ID 0。
- **<state>**:
  - 0: MQTT未初始化
  - 1: 已设置AT+MQTTUSERCFG
  - 2: 已设置AT+MQTTCONNCFG
  - 3: 连接已断开
  - 4: 连接已建立
  - 5: 已连接，但未订阅任何主题
  - 6: 已连接，并订阅了MQTT主题
- **<topic>**: 订阅的主题
- **<qos>**: 订阅的QoS等级


AT+MQTTUNSUB
----------------------------
取消订阅MQTT主题。

设置命令
^^^^^^^^^^^^^^^

**功能：**

取消客户端对指定主题的订阅。可多次调用此命令取消不同主题的订阅。

**命令：**

::

    AT+MQTTUNSUB=<LinkID>,<"topic">

**响应：**

::

    OK

若主题未被订阅，将提示：

::

    +MQTTUNSUB:NO_UNSUBSCRIBE

    OK


参数
^^^^^^^^^^

- **<LinkID>**: 当前仅支持连接ID 0。
- **<topic>**: MQTT主题，最大长度：128字节。


AT+MQTTCLEAN
----------------------------
关闭MQTT连接。

设置命令
^^^^^^^^^^^^^^^

**功能：**

关闭MQTT连接并释放资源。

**命令：**

::

    AT+MQTTCLEAN=<LinkID>

**响应：**

::

    OK

参数
^^^^^^^^^^

- **<LinkID>**: 当前仅支持连接ID 0。

=========================
BLE 相关 AT 命令
=========================
.. table:: 指令列表
    :widths: 50,100
    :width: 100%
    :align: center

    +----------------------------+------------------------------------------------------------------------------------+
    | 指令                        | 描述                                                                                 |
    +============================+====================================================================================+
    | `AT+BLEINIT`_              | 初始化 BLE                                                                          |
    +----------------------------+------------------------------------------------------------------------------------+
    | `AT+BLEADDR`_              | BLE 地址                                                                           |
    +----------------------------+------------------------------------------------------------------------------------+
    | `AT+BLENAME`_              | 设置 BLE 设备名称                                                                   |
    +----------------------------+------------------------------------------------------------------------------------+
    | `AT+BLESCANPARAM`_         | 设置 BLE 扫描参数                                                                   |
    +----------------------------+------------------------------------------------------------------------------------+
    | `AT+BLESCAN`_              | 启用 BLE 扫描                                                                       |
    +----------------------------+------------------------------------------------------------------------------------+
    | `AT+BLESCANRSPDATA`_       | 设置 BLE 扫描响应数据                                                               |
    +----------------------------+------------------------------------------------------------------------------------+
    | `AT+BLEADVPARAM`_          | 设置 BLE 广播参数                                                                   |
    +----------------------------+------------------------------------------------------------------------------------+
    | `AT+BLEADVDATA`_           | 设置 BLE 广播数据                                                                   |
    +----------------------------+------------------------------------------------------------------------------------+
    | `AT+BLEADVSTART`_          | 启用 BLE 广播                                                                       |
    +----------------------------+------------------------------------------------------------------------------------+
    | `AT+BLEADVSTOP`_           | 停止 BLE 广播                                                                       |
    +----------------------------+------------------------------------------------------------------------------------+
    | `AT+BLECONN`_              | 建立 BLE 连接                                                                       |
    +----------------------------+------------------------------------------------------------------------------------+
    | `AT+BLECONNPARAM`_         | 更新 BLE 连接参数                                                                   |
    +----------------------------+------------------------------------------------------------------------------------+
    | `AT+BLEDISCONN`_           | 断开 BLE 连接                                                                       |
    +----------------------------+------------------------------------------------------------------------------------+
    | `AT+BLEDATALEN`_           | 设置 BLE 数据包长度                                                                 |
    +----------------------------+------------------------------------------------------------------------------------+
    | `AT+BLEEXCHANGEMTU`_       | 交换 BLE MTU 大小                                                                   |
    +----------------------------+------------------------------------------------------------------------------------+
    | `AT+BLEGATTSSRV`_          | GATTS 发现服务                                                                      |
    +----------------------------+------------------------------------------------------------------------------------+
    | `AT+BLEGATTSSRVCRE`_       | GATTS 创建服务                                                                      |
    +----------------------------+------------------------------------------------------------------------------------+
    | `AT+BLEGATTSSRVDEL`_       | GATTS 删除服务                                                                      |
    +----------------------------+------------------------------------------------------------------------------------+
    | `AT+BLEGATTSREGISTER`_     | GATTS 服务注册/注销                                                                 |
    +----------------------------+------------------------------------------------------------------------------------+
    | `AT+BLEGATTSCHAR`_         | GATTS 发现特征值                                                                   |
    +----------------------------+------------------------------------------------------------------------------------+
    | `AT+BLEGATTSCHARCRE`_      | GATTS 创建特征值                                                                   |
    +----------------------------+------------------------------------------------------------------------------------+
    | `AT+BLEGATTSNTFY`_         | GATTS 特征值通知                                                                   |
    +----------------------------+------------------------------------------------------------------------------------+
    | `AT+BLEGATTSIND`_          | GATTS 特征值指示                                                                   |
    +----------------------------+------------------------------------------------------------------------------------+
    | `AT+BLEGATTSRD`_           | GATTS 特征值读取                                                                   |
    +----------------------------+------------------------------------------------------------------------------------+
    | `AT+BLEGATTCSRVDIS`_       | GATTC 发现服务                                                                      |
    +----------------------------+------------------------------------------------------------------------------------+
    | `AT+BLEGATTCCHARDIS`_      | GATTC 发现特征值                                                                   |
    +----------------------------+------------------------------------------------------------------------------------+
    | `AT+BLEGATTCWR`_           | GATTC 特征值写入                                                                   |
    +----------------------------+------------------------------------------------------------------------------------+
    | `AT+BLEGATTCRD`_           | GATTC 特征值读取                                                                   |
    +----------------------------+------------------------------------------------------------------------------------+
    | `AT+BLEGATTCSUBSCRIBE`_    | GATTC 订阅服务器                                                                   |
    +----------------------------+------------------------------------------------------------------------------------+
    | `AT+BLEGATTCUNSUBSCRIBE`_  | GATTC 取消订阅服务器                                                               |
    +----------------------------+------------------------------------------------------------------------------------+
    | `AT+BLETXPWR`_             | BLE 发射功率                                                                       |
    +----------------------------+------------------------------------------------------------------------------------+
    | `AT+BLESECPARAM`_          | 设置/查询 BLE 安全参数                                                             |
    +----------------------------+------------------------------------------------------------------------------------+
    | `AT+BLESECCANCEL`_         | BLE 取消配对                                                                       |
    +----------------------------+------------------------------------------------------------------------------------+
    | `AT+BLESECPASSKEYCONFIRM`_ | BLE 配对密钥确认                                                                   |
    +----------------------------+------------------------------------------------------------------------------------+
    | `AT+BLESECPAIRINGCONFIRM`_ | BLE 配对确认                                                                       |
    +----------------------------+------------------------------------------------------------------------------------+
    | `AT+BLESECPASSKEY`_        | BLE 输入配对密钥                                                                   |
    +----------------------------+------------------------------------------------------------------------------------+
    | `AT+BLESECGETLTKLIST`_     | 查询 BLE 已配对设备列表                                                            |
    +----------------------------+------------------------------------------------------------------------------------+
    | `AT+BLESECUNPAIR`_         | BLE 取消配对                                                                       |
    +----------------------------+------------------------------------------------------------------------------------+
    | `AT+BLESECSTART`_          | BLE 开始配对                                                                       |
    +----------------------------+------------------------------------------------------------------------------------+
    | `AT+BLEBASINIT`_           | BLE BAS 配置文件初始化                                                             |
    +----------------------------+------------------------------------------------------------------------------------+
    | `AT+BLEBASDEINIT`_         | BLE BAS 配置文件反初始化                                                           |
    +----------------------------+------------------------------------------------------------------------------------+
    | `AT+BLEBASLVLGET`_         | 获取 BLE BAS 配置文件等级                                                          |
    +----------------------------+------------------------------------------------------------------------------------+
    | `AT+BLEBASLVLSET`_         | 设置 BLE BAS 配置文件等级                                                          |
    +----------------------------+------------------------------------------------------------------------------------+
    | `AT+BLEIASINIT`_           | BLE IAS 配置文件初始化                                                             |
    +----------------------------+------------------------------------------------------------------------------------+
    | `AT+BLEIASDEINIT`_         | BLE IAS 配置文件反初始化                                                           |
    +----------------------------+------------------------------------------------------------------------------------+
    | `AT+BLEDISINIT`_           | BLE DIS 配置文件初始化                                                             |
    +----------------------------+------------------------------------------------------------------------------------+
    | `AT+BLEDISDEINIT`_         | BLE DIS 配置文件反初始化                                                           |
    +----------------------------+------------------------------------------------------------------------------------+
    | `AT+BLEDISSET`_            | BLE DIS 配置文件设置                                                               |
    +----------------------------+------------------------------------------------------------------------------------+


BLE AT 命令说明
===============================
AT+BLEINIT
--------------
功能：BLE 初始化。

查询命令
^^^^^^^^^^^^^

**功能：**

检查 BLE 的初始化状态。

**命令：**

::

    AT+BLEINIT?

**响应：**

若 BLE 已初始化，AT 将返回：

::

    +BLEINIT:<role>
    OK

若 BLE 未初始化，AT 将返回：

::

    +BLEINIT:0
    OK

设置命令
^^^^^^^^^^^

**功能：**

初始化 BLE。

**命令：**

::

    AT+BLEINIT=<init>

**响应：**

::

    OK

参数
^^^^^^^^^^

- <init>:
  * 0: 反初始化 BLE
  * 1: 客户端角色
  * 2: 服务器角色


AT+BLEADDR
-------------
功能：查询/设置 BLE 地址。

查询命令
^^^^^^^^^^^^^

**功能：**

查询 BLE 设备地址。

**命令：**

::

    AT+BLEADDR?

**响应：**

::

    +BLEADDR:<BLE_public_addr>
    OK

设置命令
^^^^^^^^^^^

**功能：**

设置 BLE 设备地址。

**命令：**

::

    AT+BLEADDR=<BLE_public_addr>

**响应：**

::

    OK

参数
^^^^^^^^^^

- <BLE_public_addr>: 


AT+BLENAME
-------------
功能：查询/设置 BLE 设备名称。

查询命令
^^^^^^^^^^^^^

**功能：**

查询 BLE 设备名称。

**命令：**

::

    AT+BLENAME?

**响应：**

::

    +BLENAME:<device_name>
    OK

设置命令
^^^^^^^^^^^

**功能：**

设置 BLE 设备名称。

**命令：**

::

    AT+BLENAME=<device_name>

**响应：**

::

    OK

参数
^^^^^^^^^^

- <device_name>: BLE 设备名称，最大长度为 29。


AT+BLESCANPARAM
--------------------
功能：查询/设置 BLE 扫描参数。

查询命令
^^^^^^^^^^^^^

**功能：**

查询 BLE 扫描参数。

**命令：**

::

    AT+BLESCANPARAM?

**响应：**

::

    +BLESCANPARAM:<scan_type>,<own_addr_type>,<filter_policy>,<scan_interval>,<scan_window>
    OK

设置命令
^^^^^^^^^^^

**功能：**

设置 BLE 扫描参数。

**命令：**

::

    AT+BLESCANPARAM=<scan_type>,<own_addr_type>,<filter_policy>,<scan_interval>,<scan_window>

**响应：**

::

    OK

参数
^^^^^^^^^^

- <scan_type>:
  * 0: 被动扫描
  * 1: 主动扫描

- <own_addr_type>:
  * 0: 公共地址
  * 1: 随机地址
  * 2: RPA 公共地址
  * 3: RPA 随机地址

- <filter_policy>:
  * 0: BLE_SCAN_FILTER_ALLOW_ALL
  * 1: BLE_SCAN_FILTER_ALLOW_ONLY_WLST
  * 2: BLE_SCAN_FILTER_ALLOW_UND_RPA_DIR
  * 3: BLE_SCAN_FILTER_ALLOW_WLIST_PRA_DIR

- <scan_interval>: 扫描间隔，必须大于或等于 <scan_window> 的值。参数范围为 [0x0004,0x4000]，实际扫描间隔为该参数乘以 0.625 ms，因此实际间隔范围为 [2.5,10240] ms。

- <scan_window>: 扫描窗口，必须小于或等于 <scan_interval> 的值。参数范围为 [0x0004,0x4000]，实际扫描窗口为该参数乘以 0.625 ms，因此实际窗口范围为 [2.5,10240] ms。


AT+BLESCAN
--------------------
功能：启用 BLE 扫描。

设置命令
^^^^^^^^^^^

**功能：**

启用/禁用扫描。

**命令：**

::

    AT+BLESCAN=<enable>

**响应：**

::

    +BLESCAN:<addr>,<rssi>,<adv_data>,<scan_rsp_data>,<addr_type>
    OK

参数
^^^^^^^^^^

- <enable>:
  * 1: 启用连续扫描
  * 0: 禁用连续扫描

- <addr>: BLE 地址
- <rssi>: 信号强度
- <adv_data>: 广播数据
- <scan_rsp_data>: 扫描响应数据
- <addr_type>: 广播设备的地址类型


示例
^^^^^^^^^^^^^^^^

::

    AT+BLEINIT=1    // 角色：客户端
    AT+BLESCAN=1    // 开始扫描
    AT+BLESCAN=0    // 停止扫描


AT+BLESCANRSPDATA
---------------------
功能：设置 BLE 扫描响应数据。

设置命令
^^^^^^^^^^^

**功能：**

设置扫描响应数据。

**命令：**

::

    AT+BLESCANRSPDATA=<scan_rsp_data>

**响应：**

::

    OK

参数
^^^^^^^^^^^^^^

- <scan_rsp_data>: 扫描响应数据为十六进制字符串。例如，若要将响应数据设置为 “02010606095757575757”，命令应为 AT+BLESCANRSPDATA="02010606095757575757"。BT_DATA_NAME_COMPLETE 数据索引必须为 2，如 AT+BLESCANRSPDATA="02010606095757575757"。


示例
^^^^^^^^^^

::

    AT+BLEINIT=2   // 角色：服务器
    AT+BLESCANRSPDATA="02010606095757575757" 


AT+BLEADVPARAM
------------------
功能：查询/设置 BLE 广播参数。

查询命令
^^^^^^^^^^^^^

**功能：**

查询广播参数。

**命令：**

::

    AT+BLEADVPARAM?

**响应：**

::

    +BLEADVPARAM:<adv_int_min>,<adv_int_max>,<adv_type>,<channel_map>
    OK

设置命令
^^^^^^^^^^^

**功能：**

设置广播参数。

**命令：**

::

    AT+BLEADVPARAM=<adv_int_min>,<adv_int_max>,<adv_type>,<channel_map>

**响应：**

::

    OK

参数
^^^^^^^^^^

- <adv_int_min>: 最小广播间隔，参数范围为 [0x0020,0x4000]，实际广播间隔为该参数乘以 0.625 ms，因此实际最小间隔范围为 [20, 10240] ms，且必须小于或等于 <adv_int_max> 的值。

- <adv_int_max>: 最大广播间隔，参数范围为 [0x0020,0x4000]，实际广播间隔为该参数乘以 0.625 ms，因此实际最大间隔范围为 [20, 10240] ms，且必须大于或等于 <adv_int_min> 的值。

- <adv_type>:
  * 0: ADV_TYPE_IND
  * 1: ADV_TYPE_SCAN_IND
  * 2: ADV_TYPE_NONCONN_IND

- <channel_map>: 广播通道
  * 1: ADV_CHNL_37
  * 2: ADV_CHNL_38
  * 4: ADV_CHNL_39
  * 7: ADV_CHNL_ALL

示例
^^^^^^^^^

::

    AT+BLEINIT=2   // 角色：服务器
    AT+BLEADVPARAM=160,320,0,7

AT+BLEADVDATA
-------------------
功能：设置 BLE 广播数据。

设置命令
^^^^^^^^^^^

**功能：**

设置广播数据。

**命令：**

::

    AT+BLEADVDATA=<adv_data>

**响应：**

::

    OK

参数
^^^^^^^^^^

- <adv_data>: 十六进制字符串格式的广播数据。例如，若要将广播数据设置为“02010606095757575757”，命令应为AT+BLEADVDATA="02010606095757575757"，最大长度为31字节。

示例
^^^^^^^^^^^^^^

::

    AT+BLEINIT=2   // 角色：服务器
    AT+BLEADVDATA="02010606095757575757"


AT+BLEADVSTART
---------------------------------
功能：启动 BLE 广播。

执行命令
^^^^^^^^^^^^^^^

**功能：**

启动广播。

**命令：**

::

    AT+BLEADVSTART

**响应：**

::

    OK

示例
^^^^^^^^^^^^^^

::

    AT+BLEINIT=2   // 角色：服务器
    AT+BLEADVSTART


AT+BLEADVSTOP
---------------
功能：停止 BLE 广播。

执行命令
^^^^^^^^^^^^^^^

**功能：**

停止广播。

**命令：**

::

    AT+BLEADVSTOP

**响应：**

::

    OK

示例
^^^^^^^^^^^^^^

::

    AT+BLEINIT=2   // 角色：服务器
    AT+BLEADVSTART
    AT+BLEADVSTOP


AT+BLECONN
--------------
功能：建立 BLE 连接。

查询命令
^^^^^^^^^^^^^

**功能：**

查询蓝牙低功耗连接状态。

**命令：**

::

    AT+BLECONN?

**响应：**

::

    +BLECONN:<conn_index>,<remote_address>

    OK

若尚未建立连接，响应中将不含<conn_index>和<remote_address>。

设置命令
^^^^^^^^^^^

**功能：**

建立 BLE 连接。

**命令：**

::

    AT+BLECONN=<conn_index>,<remote_address>[,<addr_type>,<timeout>]

**响应：**

若连接成功，将提示：

::

    +BLECONN:<conn_index>,<remote_address>
    OK

若连接失败，将提示：

::

    +BLECONN:<conn_index>,-1
    ERROR

若因参数错误或其他原因导致连接失败，将提示：

::

    ERROR

参数
^^^^^^^^^^

- <conn_index>: BLE 连接索引，范围：[0,1]。
- <remote_address>: 对端 BLE 地址。
- <addr_type>: 广播设备的地址类型：
  * 0: 公共地址
  * 1: 随机地址
- <timeout>: 连接请求超时时间（可选），范围：[3,30]。

示例
^^^^^^^^^^^^
::

    AT+BLEINIT=1   // 角色：客户端
    AT+BLECONN=0,"11:22:33:44:55:66",0,10


AT+BLECONNPARAM
----------------------
功能：查询/更新 BLE 连接参数。

查询命令
^^^^^^^^^^^^^

**功能：**

查询 BLE 连接参数。

**命令：**

::

    AT+BLECONNPARAM?

**响应：**

::

    +BLECONNPARAM:<conn_index>,<min_interval>,<max_interval>,<cur_interval>,<latency>,<timeout>
    OK

设置命令
^^^^^^^^^^^

**功能：**

更新 BLE 连接参数。

**命令：**

::

    AT+BLECONNPARAM=<conn_index>,<min_interval>,<max_interval>,<latency>,<timeout>

**响应：**

::

    OK

若设置失败，将提示以下信息：

::

    +BLECONNPARAM: <conn_index>,-1

参数
^^^^^^^^^^^^^^^

- <conn_index>: BLE 连接索引，范围：[0,1]。
- <min_interval>: 最小连接间隔，必须小于或等于<max_interval>的值。参数范围为[0x0006,0x0C80]，实际连接间隔为该参数乘以1.25 ms，因此实际最小间隔范围为[7.5,4000] ms。
- <max_interval>: 最大连接间隔，必须大于或等于<min_interval>的值。参数范围为[0x0006,0x0C80]，实际连接间隔为该参数乘以1.25 ms，因此实际最大间隔范围为[7.5,4000] ms。
- <cur_interval>: 当前连接间隔。
- <latency>: 延迟，范围：[0x0000,0x01F3]。
- <timeout>: 超时时间，参数范围为[0x000A,0x0C80]，实际超时时间为该参数乘以10 ms，因此实际超时范围为[100,32000] ms。

示例
^^^^^^^^^^^^^^^
::

    AT+BLEINIT=1   // 角色：客户端
    AT+BLECONN=0,"11:22:33:44:55:66",0,10
    AT+BLECONNPARAM=0,12,14,1,500


AT+BLEDISCONN
-----------------
功能：断开 BLE 连接。

执行命令
^^^^^^^^^^^^^^^^

**功能：**

断开 BLE 连接。

**命令：**

::

    AT+BLEDISCONN=<conn_index>

**响应：**

::

    OK  // 收到 AT+BLEDISCONN 命令。
    +BLEDISCONN:<conn_index>,<remote_address>  // 命令执行成功。

参数
^^^^^^^^^^

- <conn_index>：BLE 连接索引，范围：[0,1]。
- <remote_address>: 对端 BLE 地址。

示例
^^^^^^^^^^^
::

    AT+BLEINIT=1   // 角色：客户端
    AT+BLECONN=0,"11:22:33:44:55:66",0,10
    AT+BLEDISCONN=0


AT+BLEDATALEN
---------------
功能：设置 BLE 数据包长度。

查询命令
^^^^^^^^^^^^^

**功能：**

设置 BLE 数据包长度。

**命令：**

::

    AT+BLEDATALEN=<conn_index>,<tx_octets>,<tx_time>

**响应：**

::

    OK

参数
^^^^^^^^^^

- <conn_index>: BLE 连接索引，范围：[0,1]。
- <tx_octets>: 数据包长度，范围：[27,251]。
- <tx_time>: 数据包传输时间。

.. note::
    必须先建立 BLE 连接。

示例
^^^^^^^^^^^^^^
::

    AT+BLEINIT=1   // 角色：客户端
    AT+BLECONN=0,"11:22:33:44:55:66",0,10
    AT+BLEDATALEN=0,251,2120


AT+BLEEXCHANGEMTU
--------------
功能：交换 BLE MTU 长度。

设置命令
^^^^^^^^^^^

**功能：**

设置最大传输单元（MTU）长度。

**命令：**

::

    AT+BLEEXCHANGEMTU=<conn_index>

**响应：**

::

    OK

参数
^^^^^^^^^^^^^^

- <conn_index>: BLE 连接索引，范围：[0,1]。

示例
^^^^^^^^^^^^
::

    AT+BLEINIT=1   // 角色：客户端
    AT+BLECONN=0,"11:22:33:44:55:66",0,10
    BLEEXCHANGEMTU=0


AT+BLEGATTSSRV
--------------
功能：GATTS 发现服务。

查询命令
^^^^^^^^^^^^^

**功能：**

GATTS 发现服务。

**命令：**

::

    AT+BLEGATTSSRV?

**响应：**

::

    +BLEGATTSSRV:<srv_index>,<srv_uuid>,<srv_type>,<uuid_type>

    OK

参数
^^^^^^^^^^^^^^

- <srv_index>: 服务索引，从0开始到2
- <srv_uuid>: 服务UUID
- <srv_type>: 服务类型
  * 0: 非主服务
  * 1: 主服务
- <uuid_type>: UUID 类型
  * 0: 16位 UUID
  * 2: 128位 UUID

示例
^^^^^^^^^^^^
::

    AT+BLEINIT=2 // 角色：服务器
    AT+BLEGATTSSRV?


AT+BLEGATTSSRVCRE
-----------------------------------------------------------------------
功能：GATTS 创建服务。

设置命令
^^^^^^^^^^^

**功能：**

通用属性服务器（GATTS）创建 BLE 服务。

**命令：**

::

    AT+BLEGATTSSRVCRE=<srv_index>,<srv_uuid>,<srv_type>,<uuid_type>

**响应：**

::

    OK

参数
^^^^^^^^^^

- <srv_index>: 服务索引，从0开始到1
- <srv_uuid>: 服务UUID
- <srv_type>: 服务类型
  * 0: 非主服务
  * 1: 主服务
- <uuid_type>: UUID 类型
  * 0: 16位 UUID
  * 2: 128位 UUID

示例
^^^^^^^^^^^^
::

    AT+BLEINIT=2 // 角色：服务器
    AT+BLEGATTSSRVCRE=0,"01020304010203040102030401020304",1,2


AT+BLEGATTSSRVDEL
-----------------------------------------------------------------------
功能：GATTS 删除服务。

设置命令
^^^^^^^^^^^

**功能：**

通用属性服务器（GATTS）删除 BLE 服务。

**命令：**

::

    AT+BLEGATTSSRVDEL=<srv_index>

**响应：**

::

    OK

参数
^^^^^^^^^^

- <srv_index>: 服务索引，从0开始到2

示例
^^^^^^^^^^^^
::

    AT+BLEINIT=2 // 角色：服务器
    AT+BLEGATTSSRVDEL=0

AT+BLEGATTSREGISTER
---------------------
功能：GATTS 服务注册/注销。

设置命令
^^^^^^^^^^^

**功能：**

GATTS 服务注册/注销。

**命令：**

::

    AT+BLEGATTSREGISTER=<enable>

**响应：**

::

    OK

参数
^^^^^^^^^^

- <enable>: 1 表示注册，0 表示注销。

示例
^^^^^^^^^^^^
::

    AT+BLEINIT=2 // 角色：服务器
    AT+BLEGATTSSRVCRE=0,"01020304010203040102030401020304",1,2 // 先创建服务
    AT+BLEGATTSCHARCRE=0,0,"01020304010203040102030401020305",2,3,2 // 写入属性（读取）（读取|写入） 
    AT+BLEGATTSREGISTER=1 // 注册服务

AT+BLEGATTSCHAR
---------------------
功能：GATTS 发现特征值。

查询命令
^^^^^^^^^^^^^

**功能：**

GATTS 发现特征值。

**命令：**

::

    AT+BLEGATTSCHAR?

**响应：**

::

    +BLEGATTSCHAR:<srv_index>,<char_index>,<char_uuid>,<char_prop>,<uuid_type>

    OK

参数
^^^^^^^^^^^^^^

- <srv_index>: 服务索引，从 0 到 2
- <char_index>: 特征值索引，从 0 到 4
- <char_uuid>: 特征值 UUID
- <char_prop>: 特征值属性
  * 2: 特征值可读属性
  * 4: 特征值无响应写入属性
  * 8: 特征值有响应写入属性
  * 16: 特征值通知属性
  * 32: 特征值指示属性
- <uuid_type>: UUID 类型
  * 0: 16 位 UUID
  * 2: 128 位 UUID  

AT+BLEGATTSCHARCRE
-----------------------------------------------------------------------
功能：GATTS 创建特征值。

设置命令
^^^^^^^^^^^

**功能：**

通用属性服务器（GATTS）创建 BLE 服务的特征值。

**命令：**

::

    AT+BLEGATTSCHARCRE=<srv_index>,<char_index>,<char_uuid>,<char_prop>,<char_perm>,<uuid_type>

**响应：**

::

    OK

参数
^^^^^^^^^^^^^^

- <srv_index>: 服务索引，从 0 到 2
- <char_index>: 特征值索引，从 0 到 4
- <char_uuid>: 特征值 UUID
- <char_prop>: 特征值属性
  * 2: 特征值可读属性
  * 4: 特征值无响应写入属性
  * 8: 特征值有响应写入属性
  * 16: 特征值通知属性
  * 32: 特征值指示属性
- <char_perm>: 特征值权限
  * 1: 读取权限
  * 2: 写入权限
- <uuid_type>: UUID 类型
  * 0: 16 位 UUID
  * 2: 128 位 UUID  
示例
^^^^^^^^^^^^
::

    AT+BLEINIT=2 // 角色：服务器
    AT+BLEGATTSSRVCRE=0,"01020304010203040102030401020304",1,2 // 先创建服务
    AT+BLEGATTSCHARCRE=0,0,"01020304010203040102030401020305",2,3,2 // 写入属性（读取）（读取|写入） 


AT+BLEGATTSNTFY
-----------------------------------------------------------------------------------
功能：从服务器向客户端通知特征值。

设置命令
^^^^^^^^^^^

**功能：**

从服务器向客户端通知特征值。

**命令：**

::

    AT+BLEGATTSNTFY=<srv_index>,<char_index>,<length>

**响应：**

::

    >

符号 > 表示 AT 已准备好接收串口数据，此时可输入数据。当达到参数 <length> 指定的数据长度时，通知开始。

若数据传输成功，AT 返回：

::

    OK

参数
^^^^^^^^^^^^^^

- <srv_index>: 服务索引，从 0 到 2
- <char_index>: 特征值索引，从 0 到 4
- <length>: 最大数据长度为 244。

示例
^^^^^^^^^^^^
::

    AT+BLEINIT=2 // 角色：服务器
    AT+BLEGATTSSRVCRE=0,"01020304010203040102030401020304",1,2// 先创建服务
    AT+BLEGATTSCHARCRE=0,0,"01020304010203040102030401020305",8,2 // 通知属性
    AT+BLEGATTSNTFY=0,0,4
    // 出现符号 ">" 后，输入 4 字节数据，如 "1234"，数据将自动传输。


AT+BLEGATTSIND
-----------------------------------------------------------------------------------
功能：从服务器向客户端指示特征值。

设置命令
^^^^^^^^^^^

**功能：**

从服务器向客户端指示特征值。

**命令：**

::

    AT+BLEGATTSIND=<srv_index>,<char_index>,<length>

**响应：**

::

    >

符号 > 表示 AT 已准备好接收串口数据，此时可输入数据。当达到参数 <length> 指定的数据长度时，通知开始。

若数据传输成功，AT 返回：

::

    OK

参数
^^^^^^^^^^^^^^

- <srv_index>: 服务索引，从 0 到 2
- <char_index>: 特征值索引，从 0 到 4
- <length>: 最大数据长度为 244。

示例
^^^^^^^^^^^^
::

    AT+BLEINIT=2 // 角色：服务器
    AT+BLEGATTSSRVCRE=0,"01020304010203040102030401020304",1,2 // 创建服务
    AT+BLEGATTSCHARCRE=0,0,"01020304010203040102030401020305",16,2 // 指示属性
    AT+BLEGATTSIND=0,0,4
    // 出现符号 ">" 后，输入 4 字节数据，如 "1234"，数据将自动传输。


AT+BLEGATTSRD
-----------------------------------------------------------------------------------
功能：设置客户端从服务器读取特征值时的数据。

设置命令
^^^^^^^^^^^

**功能：**

设置客户端从服务器读取特征值时的数据。

**命令：**

::

    AT+BLEGATTSRD=<srv_index>,<char_index>,<length>

**响应：**

::

    >

符号 > 表示 AT 已准备好接收串口数据，此时可输入数据。当达到参数 <length> 指定的数据长度时，通知开始。

若数据传输成功，AT 返回：

::

    OK

参数
^^^^^^^^^^^^^^

- <srv_index>: 服务索引，从 0 到 2
- <char_index>: 特征值索引，从 0 到 4
- <length>: 最大数据长度为 244。

示例
^^^^^^^^^^^^
::

    AT+BLEINIT=2 // 角色：服务器
    AT+BLEGATTSSRVCRE=0,"01020304010203040102030401020304",1,2 // 创建服务
    AT+BLEGATTSCHARCRE=0,0,"01020304010203040102030401020305",1,2 // 读取属性
    AT+BLEGATTSRD=0,0,4
    // 出现符号 ">" 后，输入 4 字节数据，如 "1234"，当客户端读取特征值时数据将自动传输。


AT+BLEGATTCSRVDIS
-----------------------------------------------------------------------------------
功能：GATTC 发现服务。

设置命令
^^^^^^^^^^^

**功能：**

GATTC 发现服务。

**命令：**

::

    AT+BLEGATTCSRVDIS=<conn_index>

**响应：**

::

    +BLESRV=<conn_index>,<srv_index>,<srv_uuid>,<srv_type>,<start_handle>,<end_handle>
    OK

参数
^^^^^^^^^^^^^^

- <conn_index>: BLE 连接索引，范围：[0,1]。
- <srv_index>: 服务索引，从 1 开始。
- <srv_uuid>: 服务 UUID。
- <srv_type>: 服务类型
  * 0: 非主服务
  * 1: 主服务

.. note::
    必须先建立 BLE 连接。

示例
^^^^^^^^^^^^
::

    AT+BLEINIT=1 // 角色：客户端
    AT+BLECONN=0,"11:22:33:44:55:66",0,10
    AT+BLEGATTCSRVDIS=0


AT+BLEGATTCCHARDIS
-----------------------------------------------------------------------------------
功能：GATTC 发现特征值。

设置命令
^^^^^^^^^^^

**功能：**

GATTC 发现特征值。

**命令：**

::

    AT+BLEGATTCCHARDIS=<conn_index>,<srv_index>

**响应：**

::

    +BLESRVCHAR=<conn_index>,<srv_index>,<char_index>,<char_uuid>,<char_prop>,<char_handle>,<char_value_handle>
    OK

参数
^^^^^^^^^^^^^^

- <conn_index>: BLE 连接索引，范围：[0,1]。
- <srv_index>: 服务索引，从 1 开始。
- <char_index>: 特征值索引，从 1 开始。
- <char_uuid>: 特征值 UUID。
- <char_prop>: 特征值属性
  * 1: 特征值可读属性
  * 2: 特征值无响应写入属性
  * 4: 特征值有响应写入属性
  * 8: 特征值通知属性
  * 16: 特征值指示属性

.. note::
    必须先建立 BLE 连接且先发现服务。

示例
^^^^^^^^^^^^
::

    AT+BLEINIT=1 // 角色：客户端
    AT+BLECONN=0,"11:22:33:44:55:66",0,10
    AT+BLEGATTCSRVDIS=0
    AT+BLEGATTCCHARDIS=0,1


AT+BLEGATTCWR
-----------------------------------------------------------------------------------
功能：GATTC 写入特征值。

设置命令
^^^^^^^^^^^

**功能：**

GATTC 写入特征值。

**命令：**

::

    AT+BLEGATTCWR=<conn_index>,<srv_index>,<char_index>,<length>

**响应：**

::

    >

符号 > 表示 AT 已准备好接收串口数据，此时可输入数据。当达到参数 <length> 指定的数据长度时，通知开始。

若数据传输成功，AT 返回：

::

    OK

参数
^^^^^^^^^^^^^^

- <conn_index>: BLE 连接索引，范围：[0,1]。
- <srv_index>: 服务索引，从 1 开始。
- <char_index>: 特征值索引，从 1 开始。
- <length>: 最大数据长度为 244。

示例
^^^^^^^^^^^^
::

    AT+BLEINIT=1 // 角色：客户端
    AT+BLECONN=0,"11:22:33:44:55:66",0,10
    AT+BLEGATTCSRVDIS=0
    AT+BLEGATTCCHARDIS=0,1
    AT+BLEGATTCWR=0,1,2,4
    // 出现符号 ">" 后，输入 4 字节数据，如 "1234"，数据将自动传输。


AT+BLEGATTCRD
-----------------------------------------------------------------------------------
功能：GATTC 读取特征值。

设置命令
^^^^^^^^^^^

**功能：**

GATTC 读取特征值。

**命令：**

::

    AT+BLEGATTCRD=<conn_index>,<srv_index>,<char_index>

**响应：**

::

    +BLEREAD=<conn_index>,<srv_index>,<char_index>,<length>
    OK

参数
^^^^^^^^^^^^^^

- <conn_index>: BLE 连接索引，范围：[0,1]。
- <srv_index>: 服务索引，从 1 开始。
- <char_index>: 特征值索引，从 1 开始。
- <length>: 数据长度

示例
^^^^^^^^^^^^
::

    AT+BLEINIT=1 // 角色：客户端
    AT+BLECONN=0,"11:22:33:44:55:66",0,10
    AT+BLEGATTCSRVDIS=0
    AT+BLEGATTCCHARDIS=0,1
    AT+BLEGATTCRD=0,1,1


AT+BLEGATTCSUBSCRIBE
-----------------------------------------------------------------------------------
功能：GATTC 订阅服务器。

设置命令
^^^^^^^^^^^

**功能：**

GATTC 订阅服务器。

**命令：**

::

    AT+BLEGATTCSUBSCRIBE=<conn_index>,<ccc_handle>,<value_handle>,<value>

**响应：**

::
    OK

参数
^^^^^^^^^^^^^^

- <conn_index>: BLE 连接索引，范围：[0,1]。
- <ccc_handle>: 客户端特征值配置描述符句柄。
- <value_handle>: 特征值句柄。
- <value>: 1 表示通知，2 表示指示。

示例
^^^^^^^^^^^^
::

    AT+BLEINIT=1 // 角色：客户端
    AT+BLECONN=0,"11:22:33:44:55:66",0,10
    AT+BLEGATTCSUBSCRIBE=0,15,14,1

AT+BLEGATTCUNSUBSCRIBE
-----------------------------------------------------------------------------------
功能：GATTC 取消订阅服务器。

设置命令
^^^^^^^^^^^

**功能：**

GATTC 取消订阅服务器。

**命令：**

::

    AT+BLEGATTCUNSUBSCRIBE=<conn_index>,<value_handle>

**响应：**

::
    OK

参数
^^^^^^^^^^^^^^

- <conn_index>: BLE 连接索引，范围：[0,1]。
- <value_handle>: 特征值句柄。

示例
^^^^^^^^^^^^
::

    AT+BLEINIT=1 // 角色：客户端
    AT+BLECONN=0,"11:22:33:44:55:66",0,10
    AT+BLEGATTCUNSUBSCRIBE=0,14

AT+BLETXPWR
-----------------------------------------------------------------------------------
功能：查询/设置 BLE 发射功率。

查询命令
^^^^^^^^^^^^^

**功能：**

查询 BLE 发射功率。

**命令：**

::

    AT+BLETXPWR?

**响应：**

::

    +BLETXPWR:<tx_power> 范围：[0,20]。
    OK

设置命令
^^^^^^^^^^^

**功能：**

设置 BLE 发射功率。

**命令：**

::

    AT+BLETXPWR=<tx_power>

**响应：**

::

    OK

参数
^^^^^^^^^^^^^^

- <tx_power>: 发射功率

示例
^^^^^^^^^^^^
::

    AT+BLEINIT=1 // 或 AT+BLEINIT=2
    AT+BLETXPWR=10

AT+BLESECPARAM
-----------------------------------------------------------------------------------
功能：设置/查询 BLE 安全参数

查询命令
^^^^^^^^^^^^^

**功能：**

查询 BLE 安全参数。

**命令：**

::

    AT+BLESECPARAM?

**响应：**

::

    +BLESECPARAM:<security parameter>
    OK

设置命令
^^^^^^^^^^^

**功能：**

设置 BLE 安全参数。

**命令：**

::

    AT+BLESECPARAM=<security parameter>

**响应：**

::

    OK

参数
^^^^^^^^^^^^^^

- <security parameter>: 安全参数
    - BT_SMP_IO_DISPLAY_ONLY            0
    - BT_SMP_IO_DISPLAY_YESNO           1
    - BT_SMP_IO_KEYBOARD_ONLY           2
    - BT_SMP_IO_NO_INPUT_OUTPUT         3
    - BT_SMP_IO_KEYBOARD_DISPLAY        4

示例
^^^^^^^^^^^^
::

    AT+BLEINIT=1 // 或 AT+BLEINIT=2
    AT+BLESECPARAM=4 // BT_SMP_IO_KEYBOARD_DISPLAY

AT+BLESECCANCEL
-----------------------------------------------------------------------------------
功能：BLE 取消配对。

设置命令
^^^^^^^^^^^

**功能：**

BLE 取消配对。

**命令：**

::

    AT+BLESECCANCEL=<conn_index>

**响应：**

::
    OK

参数
^^^^^^^^^^^^^^

- <conn_index>: BLE 连接索引，范围：[0,1]。

示例
^^^^^^^^^^^^
::
    AT+BLESECCANCEL=0

AT+BLESECPASSKEYCONFIRM
-------------------------------------------
功能：BLE 配对密钥确认。

设置命令
^^^^^^^^^^^

**功能：**

BLE 配对密钥确认。

**命令：**

::

    AT+BLESECPASSKEYCONFIRM=<conn_index>

**响应：**

::
    OK

参数
^^^^^^^^^^^^^^

- <conn_index>: BLE 连接索引，范围：[0,1]。

示例
^^^^^^^^^^^^
::
    AT+BLESECPASSKEYCONFIRM=0

AT+BLESECPAIRINGCONFIRM
-------------------------------------------
功能：BLE 配对确认。

设置命令
^^^^^^^^^^^

**功能：**

BLE 配对确认。

**命令：**

::

    AT+BLESECPAIRINGCONFIRM=<conn_index>

**响应：**

::
    OK

参数
^^^^^^^^^^^^^^

- <conn_index>: BLE 连接索引，范围：[0,1]。

示例
^^^^^^^^^^^^
::
    AT+BLESECPAIRINGCONFIRM=0

AT+BLESECPASSKEY
-------------------------------------------
功能：BLE 输入配对密钥。

设置命令
^^^^^^^^^^^

**功能：**

BLE 输入配对密钥。

**命令：**

::

    AT+BLESECPASSKEY=<conn_index>,<passkey>

**响应：**

::
    OK

参数
^^^^^^^^^^^^^^

- <conn_index>: BLE 连接索引，范围：[0,1]。
- <passkey>: 配对密钥，范围：[0,999999]。

示例
^^^^^^^^^^^^
::
    AT+BLESECPASSKEY=0,123456

AT+BLESECGETLTKLIST
-------------------------------------------
功能：查询 BLE 已配对设备列表。

查询命令
^^^^^^^^^^^^^

**功能：**

查询 BLE 已配对设备列表。

**命令：**

::

    AT+BLESECGETLTKLIST?

**响应：**

::

    +BTADDR 12:34:56:78:00:11 (public) LTK:01234567890123456789012345678900
    OK

AT+BLESECUNPAIR
-------------------------------------------
功能：BLE 取消配对。

设置命令
^^^^^^^^^^^

**功能：**

BLE 取消配对。

**命令：**

::

    AT+BLESECUNPAIR=<address>,<addrtype>

**响应：**

::
    OK

参数
^^^^^^^^^^^^^^

- <addr>: BLE 地址。
- <addr_type>: BLE 地址类型。

示例
^^^^^^^^^^^^
::
    AT+BLESECUNPAIR="12:34:56:78:00:12",0


AT+BLESECSTART
-------------------------------------------
功能：BLE 开始配对。

设置命令
^^^^^^^^^^^

**功能：**

BLE 开始配对。

**命令：**

::

    AT+BLESECSTART=<conn_index>,<sec_level>

**响应：**

::
    OK

参数
^^^^^^^^^^^^^^

- <conn_index>: BLE 连接索引，范围：[0,1]。
- <sec_level>: 安全等级，范围：[0,4]。
    - BT_SECURITY_L0            0  : 仅适用于 BR/EDR 特殊情况，如 SDP。
    - BT_SEC_LEVEL_1               1  : 无加密且无认证。
    - BT_SEC_LEVEL_2               2  : 加密但无认证（无 MITM）。
    - BT_SEC_LEVEL_3               3  : 加密且认证（MITM）。
    - BT_SEC_LEVEL_4               4  : 认证安全连接和 128 位密钥。

示例
^^^^^^^^^^^^
::
    AT+BLESECSTART=0,4


AT+BLEBASINIT
-------------------------------------------
**功能：**

初始化蓝牙 BAS 配置文件。

执行命令
^^^^^^^^^^^^^^^

**命令：**

::

    AT+BLEBASINIT

**响应：**

::

    OK


AT+BLEBASDEINIT
-------------------------------------------
**功能：**

反初始化蓝牙 BAS 配置文件。

执行命令
^^^^^^^^^^^^^^^

**命令：**

::

    AT+BLEBASDEINIT

**响应：**

::

    OK


AT+BLEBASLVLGET
-------------------------------------------
功能：查询 BLE BAS 等级。

查询命令
^^^^^^^^^^^^^

**功能：**

查询 BLE BAS 等级。

**命令：**

::

    AT+BLEBASLVLGET?

**响应：**

::

    +BLE:BASLEVEL:100 (等级)
    OK


AT+BLEBASLVLSET
-------------------------------------------------
**功能：**

设置 BLE BAS 等级。

设置命令
^^^^^^^^^^^^^^^

**命令：**

::

    AT+BLEBASLVLSET=<conn idx>,<level>

**响应：**

::

    OK

参数
^^^^^^^^^^^^^^

- <conn_index>: BLE 连接索引，范围：[0,1]。
- <level>: 电池等级，范围：[0,100]。


示例
^^^^^^^^

::

    AT+BLEBASLVLSET=0,100


AT+BLEIASINIT
-------------------------------------------
**功能：**

初始化蓝牙 IAS 配置文件。

执行命令
^^^^^^^^^^^^^^^

**命令：**

::

    AT+BLEIASINIT

**响应：**

::

    OK


AT+BLEIASDEINIT
-------------------------------------------
**功能：**

反初始化蓝牙 IAS 配置文件。

执行命令
^^^^^^^^^^^^^^^

**命令：**

::

    AT+BLEIASDEINIT

**响应：**

::

    OK

AT+BLEDISINIT
-------------------------------------------------
**功能：**

初始化蓝牙 DIS 配置文件。

设置命令
^^^^^^^^^^^^^^^

**命令：**

::

    AT+BLEDISINIT=<pnp_vid_src>,<pnp_vid>,<pnp_pid>,<pnp_ver>

**响应：**

::

    OK

参数
^^^^^^^^^^^^^^

- **<pnp_vid_src>**
    - 范围：<0,255>
- **<pnp_vid>**
    - 范围：<0,65535>
- **<pnp_pid>**
    - 范围：<0,65535>
- **<pnp_ver>**
    - 范围：<0,65535>

示例
^^^^^^^^

::

    AT+BLEDISINIT=100,101,102,103

AT+BLEDISDEINIT
-------------------------------------------
**功能：**

反初始化蓝牙 DIS 配置文件。

执行命令
^^^^^^^^^^^^^^^

**命令：**

::

    AT+BLEDISDEINIT

**响应：**

::

    OK

AT+BLEDISSET
-------------------------------------------------
**功能：**

设置蓝牙 DIS 配置文件。

设置命令
^^^^^^^^^^^^^^^

**命令：**

::

    AT+BLEDISSET=<parameter_name>,<parameter_value>,<parameter_len>

**响应：**

::

    OK

参数
^^^^^^^^^^^^^^

- **<parameter_name>**:
    - "manuf" : 制造商名称字符串
    - "model" : 型号字符串
    - "serial" : 序列号字符串
    - "fw" : 固件版本字符串
    - "hw" : 硬件版本字符串
    - "sw" : 软件版本字符串
- **<parameter_value>**
- **<parameter_len>** 范围：[0,21]。


示例
^^^^^^^^

::

    AT+BLEDISSET="manuf","BL61x",6

======================================================================================
低功耗功能 AT 命令
======================================================================================
.. table:: 指令列表
    :widths: 30,70
    :width: 100%
    :align: center

    +----------------------+-------------------------------------------------------------------+
    | 指令                 | 描述                                                              |
    +======================+===================================================================+
    | `AT+PWR`_            | 配置电源模式                                                      |
    +----------------------+-------------------------------------------------------------------+
    | `AT+SLWKIO`_         | 配置 GPIO 作为唤醒源                                               |
    +----------------------+-------------------------------------------------------------------+
    | `AT+DEWKIO`_         | 删除 GPIO 作为唤醒源                                              |
    +----------------------+-------------------------------------------------------------------+
    | `AT+SLWKTIMER`_      | 配置定时器作为唤醒源                                              |
    +----------------------+-------------------------------------------------------------------+
    | `AT+SLWKDTIM`_       | 配置 DTIM                                                         |
    +----------------------+-------------------------------------------------------------------+
    | `AT+SLCLDTIM`_       | 删除 DTIM 配置                                                    |
    +----------------------+-------------------------------------------------------------------+
    | `AT+TWT_PARAM`_      | 设置 TWT 参数                                                     |
    +----------------------+-------------------------------------------------------------------+
    | `AT+TWT_SLEEP`_      | 进入 TWT 低功耗模式                                               |
    +----------------------+-------------------------------------------------------------------+
    | `AT+TWT_TEARDOWN`_   | 拆除 TWT 会话                                                     |
    +----------------------+-------------------------------------------------------------------+
    | `AT+GET_CLOCK`_       | 获取当前时钟源                                                    |
    +----------------------+-------------------------------------------------------------------+
    | `AT+SET_CLOCK`_       | 设置系统时钟源                                                    |
    +----------------------+-------------------------------------------------------------------+

低功耗 AT 命令说明
================================
AT+PWR
-----------------------------------------------------------------------
功能：配置电源模式

执行命令
^^^^^^^^^^^^^^^

**命令：**

::

    AT+PWR=<power mode>[,<level>]

**响应：**

::

    OK

参数
^^^^^^^^^^

- **<power mode>**: 
   -  0: 正常模式
   -  1: 休眠模式
   -  2: 待机模式
- **[<level>]**: 休眠模式下，电源等级 0-2；待机模式下，1 表示启用接收广播包。

示例
^^^^^^^^

::

    AT+PWR=0             // 正常模式
    AT+PWR=1,0           // 休眠模式，等级 0
    AT+PWR=2             // 待机模式
    AT+PWR=2,1           // 待机模式，启用接收广播包


AT+SLWKIO
-----------------------------------------------------------------------
功能：配置 GPIO 作为唤醒源。

执行命令
^^^^^^^^^^^^^^^

**命令：**

::

    AT+SLWKIO=<wakeup io>,<trigger mode>

**响应：**

::

    OK

参数
^^^^^^^^^^

- **<wakeup io>**: GPIO 唤醒 IO 编号，仅支持 GPIO 16 或 GPIO 28
- **<trigger mode>**: 唤醒触发模式
   -  0: 高电平唤醒

**注：** 当前实现使用五线 SPI 低功耗方案，因此唤醒方式不可配置，仅支持高电平唤醒。


AT+DEWKIO
-----------------------------------------------------------------------
功能：删除 GPIO 作为唤醒源。

执行命令
^^^^^^^^^^^^^^^

**命令：**

::

    AT+DEWKIO=<io>

**响应：**

::

    OK

参数
^^^^^^^^^^

- **<io>**: GPIO 唤醒 IO 编号。


AT+SLWKTIMER
------------------------------------------------------
功能：配置定时器作为唤醒源。

设置命令
^^^^^^^^^^^

**命令：**

::

    AT+SLWKTIMER=<mode>,<timeouts>

**响应：**

::

    OK

参数
^^^^^^^^^^

-  **<mode>**: 0 为待机模式，1 为休眠模式
-  **<timeouts>**: 设置唤醒持续时间（毫秒），一次性唤醒定时器，唤醒后不再进入睡眠（除非重新配置新的唤醒定时器）

示例
^^^^^^^^

::

    AT+SLWKTIMER=0,5000                       // 待机模式，5000ms 后唤醒一次



AT+SLWKDTIM
------------------------------------------------------
功能：配置 DTIM 作为唤醒源

设置命令
^^^^^^^^^^^

**命令：**

::

    AT+SLWKDTIM=<dtim>

**响应：**

::

    OK

参数
^^^^^^^^^^

-  **<dtim>**: 设置唤醒 DTIM 值。

示例
^^^^^^^^

::

    AT+SLWKDTIM=10                      // 设置 DTIM10 用于唤醒


AT+SLCLDTIM
------------------------------------------------------
功能：删除 DTIM 配置

设置命令
^^^^^^^^^^^

**命令：**

::

    AT+SLCLDTIM

**响应：**

::

    OK

示例
^^^^^^^^

::

    AT+SLCLDTIM 


AT+TWT_PARAM
------------------------------------------------------
功能：设置 TWT 参数。

设置命令
^^^^^^^^^^^

**命令：**

::

    AT+TWT_PARAM=<setup type>,<flow type>,<exponent>,<wakeup duration>,<wake interval mantissa>

**响应：**

::

    OK

参数
^^^^^^^^^^

-  **Setup type (s):** 0: 请求，1: 建议，2: 要求
-  **Flow type (t):** 0: 公告式 TWT，1: 非公告式 TWT（仅支持非公告式）
-  **Wake Interval Exponent:** 指定唤醒间隔指数
-  **Wake Duration (n):** 最小唤醒持续时间（微秒）
-  **Wake Interval Mantissa (m):** 用于精确间隔调整的尾数
-  **Service Period (SP):** SP = WakeDuration × 256μs
-  **Wakeup Interval:** 唤醒间隔 = wake_int_mantissa << WakeIntervalExponent μs

示例
^^^^^^^^

::

    AT+TWT_PARAM=1,1,13,128,1000                       // SP = 32.768 ms，唤醒间隔 = 8.192 秒


**注**
^^^^^

- **REQUEST 类型：** 当响应 STA/AP 指定目标唤醒时间值时，TWT 元素的目标唤醒时间字段设为 0，其他字段由请求 STA 建议。
- **SUGGEST 类型：** 请求 STA 在设置期间建议目标唤醒时间和其他参数，响应 STA 可接受或拒绝，连接仍可能基于请求或响应方参数建立。
- **DEMAND 类型：** 请求 STA 强制要求目标唤醒时间和参数，若响应方不支持则设置失败。
- **服务周期计算公式：** Service Period (SP) = (<wakeup duration>/10) 毫秒  
  *示例：* AT+TWT_PARAM=1,1,13,128,1000 → SP = (128/10) = 12.8 毫秒
- **唤醒间隔计算公式：** TWT Wake Interval = ((2^<exponent>)/<wake interval mantissa>) 秒  
  *示例：* AT+TWT_PARAM=1,1,13,128,1000 → 唤醒间隔 = ((2^12)/1000) = 8.192 秒


AT+TWT_SLEEP
------------------------------------------------------
功能：进入 TWT 低功耗模式

设置命令
^^^^^^^^^^^

**命令：**

::

    AT+TWT_SLEEP

**响应：**

::

    OK

示例
^^^^^^^^

::

    AT+TWT_SLEEP 


AT+TWT_TEARDOWN
-----------------------------------------------
功能：拆除目标唤醒时间（TWT）会话。

设置命令
^^^^^^^^^^^

**命令：**

::

    AT+TWT_TEARDOWN=<neg_type>,<all_twt>[,<flow_id>]

**响应：**

::

    OK

或

::

    ERROR

参数
^^^^^^^^^^

- **<neg_type>**: TWT 协商类型
   
   - 0: 单独协商（针对指定 TWT 流拆除）
   - 1: 在下一个唤醒 TBTT 协商拆除（当前不支持）
- **<all_twt>**: 是否拆除所有 TWT 流
   
   - 0: 仅拆除指定 TWT 流（由 <flow_id> 指定）
   - 1: 拆除所有现有 TWT 流
- **<flow_id>**: 待拆除的 TWT 流 ID（<all_twt>=0 时必填）

**注**
^^^^^

- 内部 RC 误差可能导致唤醒间隔不准确（如 30 秒内偏差 60 毫秒）。
- **外部振荡器要求：** 测试必须在带外部晶体振荡器的板卡上进行，以最小化 RTC 时钟偏差。
- ***路由器兼容性：** 使用支持 TWT 的路由器测试（如 TP-Link AX5400）。
- 当前仅支持单独协商类型（0）。
- <all_twt>=1 时无需 <flow_id> 参数。
- 使用本命令前设备必须处于 TWT 模式。

示例
^^^^^^^^

::

    // 拆除 ID 为 1 的特定 TWT 流
    AT+TWT_TEARDOWN=0,0,1

    // 拆除所有 TWT 流
    AT+TWT_TEARDOWN=0,1


AT+GET_CLOCK
-----------------------------------------------------------------------
功能：获取当前时钟源。

执行命令
^^^^^^^^^^^^^^^

**命令：**

::

    AT+GET_CLOCK

**响应：**

::

    +GET_CLOCK:<source>
    
    OK

参数
^^^^^^^^^^

- **<source>**: 当前时钟源 ID
   - 1: RC 作为 RTC 时钟源
   - 2: 无源晶体振荡器作为 RTC 时钟源
   - 3: 有源晶体振荡器作为 RTC 时钟源

示例
^^^^^^^^

::

    AT+GET_CLOCK
    
    // 响应
    +GET_CLOCK:1
    
    OK

AT+SET_CLOCK
-----------------------------------------------------------------------
功能：设置系统时钟源。

执行命令
^^^^^^^^^^^^^^^

**命令：**

::

    AT+SET_CLOCK=<source>

**响应：**

::

    OK

参数
^^^^^^^^^^

- **<source>**: 待设置的时钟源
   - 1: RC 作为 RTC 时钟源
   - 2: 无源晶体振荡器作为 RTC 时钟源
   - 3: 有源晶体振荡器作为 RTC 时钟源

**注**
^^^^^

- 更改时钟源可能影响系统性能和功耗。
- 某些时钟源可能在特定电源模式下不可用。

示例
^^^^^^^^

::

    AT+SET_CLOCK=1
    
    // 响应
    OK



生成 romfs.bin
==================

首先，需要创建一个新的 romfs 文件夹，并将需要烧录的证书文件放置在 romfs 目录下：

::

    romfs$
    ca_01.crt  cert_01.crt  private_01.key


然后，使用 SDK 目录中的 genromfs 工具生成 romfs.bin。可以在 Makefile 中添加以下命令：

::

    $(shell ./tools/genromfs -d romfs/ -f ./build/build_out/romfs.bin)

在闪存配置文件 "flash_prog_cfg.ini" 中添加下载 romfs 分区的选项：

::

    #media factory
    [romfs]
    filedir = ./build/build_out/romfs.bin
    address = 0x378000

address 字段为分区表中 media 分区的地址。分区表路径为：

::
    
    bsp/board/<chip_name>/config/partition_cfg_4M.toml
    或
    bsp/board/<chip_name>/config_8M/partition_cfg_8M.toml

最后，执行命令行固件下载命令后，romfs.bin 文件也会被下载到芯片中：

::

    make flash CHIP=bl616 COMX=<com_port>


HTTPS 本地服务搭建
==========================

https.py

::

    import http.server
    import ssl
    import sys
    from socketserver import ThreadingMixIn
    import threading 

    class httpHandler(http.server.BaseHTTPRequestHandler):
        def do_GET(self):
            response = "Hello World"
            
            self.send_response(200)
            self.send_header("Content-Type", "text/plain")
            self.send_header("Content-Length", str(len(response)))  
            self.end_headers()
            
            self.wfile.write(response.encode())
        def do_HEAD(self):
            self.send_response(200)
            self.send_header("Content-Type", "text/plain")
            self.send_header("Content-Length", str(len("Hello World")))  
            self.end_headers()
        def do_POST(self):
            self.send_response(405)
            self.send_header("Content-Type", "text/plain")
            self.send_header("Content-Length", str(len("POST Method success"))) 
            self.end_headers()
            self.wfile.write(b"POST Method success")
        def log_message(self, format, *args):
            return  

    class ThreadedHTTPServer(ThreadingMixIn, http.server.HTTPServer):
        daemon_threads = True

    class HttpsServer:
        def __init__(self, ip, port, certfile, keyfile, ca_certs=None):
            self.server_address = (ip, port)
            self.certfile = certfile
            self.keyfile = keyfile
            self.ca_certs = ca_certs
            self.httpd = ThreadedHTTPServer(self.server_address, httpHandler)

            # 启用带客户端证书验证的服务器端 SSL
            self.httpd.socket = ssl.wrap_socket(
                self.httpd.socket,
                certfile=self.certfile,
                keyfile=self.keyfile,
                server_side=True,
                cert_reqs=ssl.CERT_REQUIRED,  # 需要客户端证书
                ca_certs=self.ca_certs  # 用于客户端验证的 CA 证书路径
            )
            self.thread = None

        def start_server(self):
            if self.thread is None:
                self.thread = threading.Thread(target=self.httpd.serve_forever)
                self.thread.start()
                print(f"服务器已启动，地址：https://{self.server_address[0]}:{self.server_address[1]}")
            else:
                print("服务器已在运行。")

        def stop_server(self):
            if self.thread is not None:
                self.httpd.shutdown()
                self.thread.join()
                self.thread = None
                print("服务器已停止。")
            else:
                print("服务器未运行。")

    # 示例用法：
    if __name__ == "__main__":
        ip = sys.argv[1]
        port = int(sys.argv[2])
        certfile = sys.argv[3]
        keyfile = sys.argv[4]
        ca_certs = sys.argv[5] if len(sys.argv) > 5 else None  # 可选的客户端验证 CA 证书

        server = HttpsServer(ip, port, certfile, keyfile, ca_certs)
        server.start_server()
        
        try:
            input("按回车键停止服务器...\n")
        finally:
            server.stop_server()


1. 使用提供的 Python 代码快速搭建本地 HTTPS 服务器。创建新的 https.py 文件，将代码复制到文件中，并运行以下命令：

:: 

    python3 https.py 192.168.31.112 4443 lfs/lfs/server_1.crt lfs/lfs/server_1.key lfs/lfs/ca_1.crt

2. BL HTTPS 双向认证

::
    
    AT+HTTPSSLCFG=0,3,"client_1.crt","client_1.key","ca_1.crt"


3. BL HTTPS 服务器认证

在 https.py 代码中注释掉以下行以禁用客户端验证：cert_reqs=ssl.CERT_REQUIRED,  # Require client certificate

::
    
    AT+HTTPSSLCFG=0,1,,,"ca_1.crt"


4. BL HTTPS 客户端认证

::
    
    AT+HTTPSSLCFG=0,2,"client_1.crt","client_1.key"

5. BL HTTPS 无认证

在 https.py 代码中注释掉以下行以禁用客户端验证：cert_reqs=ssl.CERT_REQUIRED,  # Require client certificate

::
    
    AT+HTTPSSLCFG=0,0

6. BL HTTPS Head 请求 

::
    
    AT+HTTPCLIENT=0,1,0,"https://192.168.31.112:4443/"
    

7. BL HTTPS Get 请求 

::
    
    AT+HTTPCLIENT=0,2,0,"https://192.168.31.112:4443/"

    

8. BL HTTPS Post 请求 

::
    
    AT+HTTPCLIENT=0,3,0,"https://192.168.31.112:4443/"

    
9. BL HTTPS Put 请求 

::
    
    AT+HTTPCLIENT=0,4,0,"https://192.168.31.112:4443/"



MQTT 本地服务搭建
==========================

1. 安装 mosquitto

::
    
    sudo apt install mosquitto

2. 设置密码

::

    mosquitto_passwd -c /etc/mosquitto/passwd bflb

输入两次密码，例如：

::

    12345678

3. 配置证书

::

    cp {case_path}/lfs/lfs/server_1.crt /etc/mosquitto/server_1.crt

    cp {case_path}/lfs/lfs/server_1.key /etc/mosquitto/server_1.key

    cp {case_path}/lfs/lfs/ca_1.crt /etc/mosquitto/ca_1.crt
    
    
4. 启动 MQTT 服务

::

    mosquitto -c /etc/mosquitto/mosquitto.conf

5. PC 订阅主题

::

    mosquitto_sub -h 192.168.31.156 -u bflb -P 12345678 --cafile lfs/lfs/ca_1.crt --cert lfs/lfs/client_1.crt --key lfs/lfs/client_1.key -t "test/topic1" --tls-version tlsv1.2 --insecure


6. BL MQTT 用户配置

::

    AT+MQTTUSERCFG=0,4,"BL001","bflb","12345678","client_1.crt","client_1.key","ca_1.crt"

7. BL 连接到 MQTT 代理

::

    AT+MQTTCONN=0,"192.168.31.156",8883,0

8. BL 发布消息

::

    AT+MQTTPUB=0,"test/topic1","This is a MQTT test",2,0


9. BL 订阅主题

::

    AT+MQTTSUB=0,"test/topic2",0

10. PC 发布消息

::

    mosquitto_pub -h 192.168.31.156 -p 8883 -u bflb -P 12345678 --cafile lfs/lfs/ca_1.crt --cert lfs/lfs/client_1.crt --key lfs/lfs/client_1.key -t "test/topic2" -m "Hello MQTT" --tls-version tlsv1.2 --insecure


使用 HiveMQ 的 MQTT TLS 方案
==============================

a. 无服务器版本验证步骤
-------------------------------------------------
 
1. 从 HiveMQ 下载代理根 CA 证书（isrgrootx1.pem），并放置在以下文件夹：

examples/wifi/spi_wifi/lfs/lfs/isrgrootx1.pem

2. 在 examples/wifi/spi_wifi/ 文件夹中运行 "make" 重新构建项目，并使用 BLonn_Flash 工具烧录镜像。 

3. 在 HiveMQ 网络控制台中，根据无服务器计划创建代理，并设置相应凭证（例如，用户名 = BL_test_0，密码 = BL123456，权限设置为发布 & 订阅）。具体步骤请参考 HiveMQ 官方文档。

4. 将 BL 连接到 WiFi AP（根据需要调整 SSID 和密码）：

AT+CWMODE=1

AT+CWJAP="8E88",""

5. 配置 MQTT 用户设置： 

AT+MQTTUSERCFG=0,2,"bflb","BL_test_0","BL123456","","","isrgrootx1.pem" （0 表示本地客户端索引；2 表示使用单向 TLS，客户端验证服务器证书；"bflb" 是 MQTT 客户端 ID；"BL_test_0"/"BL123456" 是控制台设置的用户名/密码；isrgrootx1.pem 是代理根 CA。）

6. 配置 MQTT SSL/TLS SNI。实践证明必须设置 SNI，否则连接会失败（可能因为 HiveMQ 代理使用 SNI 识别正确的代理实例）：

AT+MQTTSNI=0,"8f3ef71da5bf445eb0669e56eecef396.s1.eu.hivemq.cloud"

7. 配置 MQTT 连接属性： 

AT+MQTTCONNCFG=0,120,0,"","",0,0 （0 表示本地客户端索引；120 是 MQTT 客户端心跳时间（秒）；最后一个 0 表示禁用干净会话。）

8. 发起 MQTT 连接： 

AT+MQTTCONN=0,"8f3ef71da5bf445eb0669e56eecef396.s1.eu.hivemq.cloud",8883,0 （注意：此处提供的主机和端口必须与 HiveMQ 代理控制台一致。）

9. 订阅所有主题： 

AT+MQTTSUB=0,"#",0

10. 发布主题消息： 

AT+MQTTPUB=0,"/test/bflb","What's up guys",0,0

 
b. 入门版本验证步骤
----------------------------------------------

1. 从 HiveMQ 下载代理根 CA 证书（isrgrootx1.pem），并放置在以下文件夹：

examples/wifi/spi_wifi/lfs/lfs/isrgrootx1.pem

2. 在 examples/wifi/spi_wifi/ 文件夹中运行 "make" 重新构建项目，并使用 BLFlash 工具烧录镜像。 

3. 在 HiveMQ 网络控制台中，根据入门计划创建代理，并设置相应凭证（例如，用户名 = BL_test_0，密码 = BL123456，权限设置为发布 & 订阅）。同时，将 ca_1.crt 作为根 CA 添加到代理中以验证设备证书。具体步骤请参考 HiveMQ 官方文档。

4. 将 BL 连接到 WiFi AP（根据需要调整 SSID 和密码）： 

AT+CWMODE=1 

AT+CWJAP="8E88",""

5. 配置 MQTT 用户设置： 

AT+MQTTUSERCFG=0,4,"changeme","BL_test_0","BL123456","client_1.crt","client_1.key","isrgrootx1.pem" （0 表示本地客户端索引；4 表示使用双向 TLS；"changeme" 是 MQTT client_id；"BL_test_0"/"BL123456" 是控制台设置的用户名/密码；client_1.crt 是 ca_1 颁发的设备 x509 证书；client_1.key 是与设备证书匹配的私钥；isrgrootx1.pem 是代理根 CA。）

6. 配置 MQTT SSL/TLS SNI。实践证明必须设置 SNI，否则连接会失败（可能因为 HiveMQ 代理使用 SNI 识别目标代理实例）：

AT+MQTTSNI=0,"indigosquash-2lk628.a02.usw2.aws.hivemq.cloud"

7. 配置 MQTT 连接属性： 

AT+MQTTCONNCFG=0,120,0,"","",0,0 （0 表示本地客户端索引；120 是 MQTT 客户端心跳时间；最后一个 0 表示禁用干净会话。）

8. 发起 MQTT 连接： 

AT+MQTTCONN=0,"indigosquash-2lk628.a02.usw2.aws.hivemq.cloud",8883,0 （注意：此处主机和端口必须与 HiveMQ 代理控制台信息一致。）

9. 订阅所有主题： 

AT+MQTTSUB=0,"#",0

10. 发布主题消息： 

AT+MQTTPUB=0,"/test/bflb","What's up guys",0,0
