[LOAD_CFG]
#jlink or uart
interface = uart
device = COM1
speed_uart_boot = 500000
speed_uart_load = 2000000
#cklink usb vid|pid
cklink_vidpid = 42bf|b210
cklink_type = CKLink_Lite_Vendor-rog
#eg: rv_dbg_plus, ft2232hl, ft2232d
openocd_config = rv_dbg_plus
auto_burn = false
speed_jlink = 1000
#0:without load, 1:eflash_loader load, 2: bootrom load
load_function = 2
do_reset = true
#reset retry+hold time
reset_hold_time = 50
shake_hand_delay = 100
reset_revert = false
cutoff_time = 50
shake_hand_retry = 3
flash_burn_retry = 1
checksum_err_retry = 3
erase_time_out = 100000
#chiptype=bl808
check_mac = true
#0:no erase,1:programmed section erase,2:chip erase
erase = 1
# switch eflash_loader command log save
local_log = false
#0:verify by calculating SHA256(xip), >0:read back verify and verify by calculating SHA256(sbus)
verify = 0
tx_size = 4104
cpu_reset_after_load = false
#empty for auto, otherwise specified clock para file path: eg: chips/bl808/efuse_bootheader/clock_para.bin
clock_para = chips/bl808/efuse_bootheader/clock_para.bin
#skip mode set first para is skip addr, second para is skip len
skip_mode = 0x0, 0x0
boot2_isp_mode = 0
isp_mode_speed = 2000000
isp_shakehand_timeout = 0
host_rx_timeout = 2

[FLASH_CFG]
flash_id = ef4016
#bit 7-4 flash_clock_type: 0:120M wifipll, 1:xtal, 2:128M cpupll, 3:80M wifipll, 4:bclk, 5:96M wifipll
#bit 3-0 flash_clock_div
flash_clock_cfg = 0x41
#0:0.5T delay, 1:1T delay, 2:1.5T delay, 3:2T delay
flash_clock_delay = 0
#0:NIO, 1:DO, 2:QO, 3:DIO, 4:QIO
flash_io_mode = 1
#flash_pin value:
#bit 7 flash pin set from efuse flash cfg
#bit 6-0 flash pin cfg: 0: internal swap io0 with io3, 2: internal no swap io0 with io3, 4: external gpio34-39
flash_pin = 0x80
#empty for auto, otherwise specified flash para file path: eg: chips/bl808/efuse_bootheader/flash_para.bin
flash_para = chips/bl808/efuse_bootheader/flash_para.bin
decompress_write = true
file = chips/bl808/img_create2/whole_img.bin
address = 00000000

[EFUSE_CFG]
#true: enable efuse burn
burn_en = true
#true: perform efuse verification after efuse burn
factory_mode = false
#true: enable encrypted transmission
security_write = false
#true: efuse data saved as an encrypted file
security_save = true
file = ../../../Tools/img_tools/efuse_bootheader/efusedata.bin
maskfile = ../../../Tools/img_tools/efuse_bootheader/efusedata_mask.bin
